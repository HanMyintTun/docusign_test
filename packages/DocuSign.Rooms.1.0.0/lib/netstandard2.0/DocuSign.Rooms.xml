<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DocuSign.Rooms</name>
    </assembly>
    <members>
        <member name="T:DocuSign.Rooms.Api.IAccountsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IAccountsApi.GetAccountInformation(System.String)">
            <summary>
            Get information about the account.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IAccountsApi.GetAccountInformationWithHttpInfo(System.String)">
            <summary>
            Get information about the account.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IAccountsApi.GetAccountInformationAsync(System.String)">
            <summary>
            Get information about the account.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>Task of AccountSummary</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IAccountsApi.GetAccountInformationAsyncWithHttpInfo(System.String)">
            <summary>
            Get information about the account.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>Task of ApiResponse (AccountSummary)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.AccountsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.AccountsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.AccountsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.AccountsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.AccountsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.AccountsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.AccountsApi.GetAccountInformation(System.String)">
            <summary>
            Get information about the account. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>AccountSummary</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.AccountsApi.GetAccountInformationWithHttpInfo(System.String)">
            <summary>
            Get information about the account. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>ApiResponse of AccountSummary</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.AccountsApi.GetAccountInformationAsync(System.String)">
            <summary>
            Get information about the account. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>Task of AccountSummary</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.AccountsApi.GetAccountInformationAsyncWithHttpInfo(System.String)">
            <summary>
            Get information about the account. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>Task of ApiResponse (AccountSummary)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IActivityTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IActivityTypesApi.GetActivityTypes">
            <summary>
            Retrieves the list of valid activity types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IActivityTypesApi.GetActivityTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid activity types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IActivityTypesApi.GetActivityTypesAsync">
            <summary>
            Retrieves the list of valid activity types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalActivityTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IActivityTypesApi.GetActivityTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid activity types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalActivityTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ActivityTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ActivityTypesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.ActivityTypesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ActivityTypesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ActivityTypesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ActivityTypesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ActivityTypesApi.GetActivityTypes">
            <summary>
            Retrieves the list of valid activity types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalActivityTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ActivityTypesApi.GetActivityTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid activity types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalActivityTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ActivityTypesApi.GetActivityTypesAsync">
            <summary>
            Retrieves the list of valid activity types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalActivityTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ActivityTypesApi.GetActivityTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid activity types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalActivityTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IClosingStatusesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IClosingStatusesApi.GetClosingStatuses">
            <summary>
            Retrieves the list of valid closing statuses.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IClosingStatusesApi.GetClosingStatusesWithHttpInfo">
            <summary>
            Retrieves the list of valid closing statuses.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IClosingStatusesApi.GetClosingStatusesAsync">
            <summary>
            Retrieves the list of valid closing statuses.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalClosingStatuses</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IClosingStatusesApi.GetClosingStatusesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid closing statuses.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalClosingStatuses)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ClosingStatusesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ClosingStatusesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.ClosingStatusesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ClosingStatusesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ClosingStatusesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ClosingStatusesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ClosingStatusesApi.GetClosingStatuses">
            <summary>
            Retrieves the list of valid closing statuses. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalClosingStatuses</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ClosingStatusesApi.GetClosingStatusesWithHttpInfo">
            <summary>
            Retrieves the list of valid closing statuses. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalClosingStatuses</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ClosingStatusesApi.GetClosingStatusesAsync">
            <summary>
            Retrieves the list of valid closing statuses. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalClosingStatuses</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ClosingStatusesApi.GetClosingStatusesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid closing statuses. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalClosingStatuses)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IContactSidesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IContactSidesApi.GetContactSides">
            <summary>
            Retrieves the list of valid contact sides.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IContactSidesApi.GetContactSidesWithHttpInfo">
            <summary>
            Retrieves the list of valid contact sides.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IContactSidesApi.GetContactSidesAsync">
            <summary>
            Retrieves the list of valid contact sides.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalContactSides</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IContactSidesApi.GetContactSidesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid contact sides.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalContactSides)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ContactSidesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ContactSidesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.ContactSidesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ContactSidesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ContactSidesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ContactSidesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ContactSidesApi.GetContactSides">
            <summary>
            Retrieves the list of valid contact sides. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalContactSides</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ContactSidesApi.GetContactSidesWithHttpInfo">
            <summary>
            Retrieves the list of valid contact sides. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalContactSides</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ContactSidesApi.GetContactSidesAsync">
            <summary>
            Retrieves the list of valid contact sides. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalContactSides</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ContactSidesApi.GetContactSidesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid contact sides. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalContactSides)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ICountriesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ICountriesApi.GetCountries">
            <summary>
            Retrieves the list of valid countries.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ICountriesApi.GetCountriesWithHttpInfo">
            <summary>
            Retrieves the list of valid countries.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ICountriesApi.GetCountriesAsync">
            <summary>
            Retrieves the list of valid countries.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalCountries</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ICountriesApi.GetCountriesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid countries.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalCountries)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.CountriesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.CountriesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.CountriesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.CountriesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.CountriesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.CountriesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.CountriesApi.GetCountries">
            <summary>
            Retrieves the list of valid countries. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalCountries</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.CountriesApi.GetCountriesWithHttpInfo">
            <summary>
            Retrieves the list of valid countries. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalCountries</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.CountriesApi.GetCountriesAsync">
            <summary>
            Retrieves the list of valid countries. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalCountries</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.CountriesApi.GetCountriesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid countries. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalCountries)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ICurrenciesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ICurrenciesApi.GetCurrencies">
            <summary>
            Retrieves the list of valid currencies.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ICurrenciesApi.GetCurrenciesWithHttpInfo">
            <summary>
            Retrieves the list of valid currencies.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ICurrenciesApi.GetCurrenciesAsync">
            <summary>
            Retrieves the list of valid currencies.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalCurrencies</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ICurrenciesApi.GetCurrenciesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid currencies.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalCurrencies)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.CurrenciesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.CurrenciesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.CurrenciesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.CurrenciesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.CurrenciesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.CurrenciesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.CurrenciesApi.GetCurrencies">
            <summary>
            Retrieves the list of valid currencies. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalCurrencies</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.CurrenciesApi.GetCurrenciesWithHttpInfo">
            <summary>
            Retrieves the list of valid currencies. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalCurrencies</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.CurrenciesApi.GetCurrenciesAsync">
            <summary>
            Retrieves the list of valid currencies. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalCurrencies</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.CurrenciesApi.GetCurrenciesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid currencies. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalCurrencies)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IDocumentsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.CreateDocumentUser(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DocumentUserForCreate)">
            <summary>
            Grants access to a document for a user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="documentUserForCreate"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.CreateDocumentUserWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DocumentUserForCreate)">
            <summary>
            Grants access to a document for a user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="documentUserForCreate"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.DeleteDocument(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a document.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.DeleteDocumentWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a document.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.GetDocument(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions)">
            <summary>
            Get information about the Document with the given DocumentId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.GetDocumentWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions)">
            <summary>
            Get information about the Document with the given DocumentId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.CreateDocumentUserAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DocumentUserForCreate)">
            <summary>
            Grants access to a document for a user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="documentUserForCreate"></param>
            <returns>Task of DocumentUser</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.CreateDocumentUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DocumentUserForCreate)">
            <summary>
            Grants access to a document for a user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="documentUserForCreate"></param>
            <returns>Task of ApiResponse (DocumentUser)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.DeleteDocumentAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a document.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.DeleteDocumentAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a document.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.GetDocumentAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions)">
            <summary>
            Get information about the Document with the given DocumentId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of Document</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IDocumentsApi.GetDocumentAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions)">
            <summary>
            Get information about the Document with the given DocumentId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (Document)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.DocumentsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.DocumentsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.DocumentsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.DocumentsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.CreateDocumentUser(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DocumentUserForCreate)">
            <summary>
            Grants access to a document for a user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="documentUserForCreate"></param>
            <returns>DocumentUser</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.CreateDocumentUserWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DocumentUserForCreate)">
            <summary>
            Grants access to a document for a user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="documentUserForCreate"></param>
            <returns>ApiResponse of DocumentUser</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.CreateDocumentUserAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DocumentUserForCreate)">
            <summary>
            Grants access to a document for a user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="documentUserForCreate"></param>
            <returns>Task of DocumentUser</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.CreateDocumentUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DocumentUserForCreate)">
            <summary>
            Grants access to a document for a user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="documentUserForCreate"></param>
            <returns>Task of ApiResponse (DocumentUser)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.DeleteDocument(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a document. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.DeleteDocumentWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a document. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.DeleteDocumentAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a document. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.DeleteDocumentAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a document. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions">
            <summary>
            Get information about the Document with the given DocumentId. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions.includeContents">
            
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.GetDocument(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions)">
            <summary>
            Get information about the Document with the given DocumentId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Document</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.GetDocumentWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions)">
            <summary>
            Get information about the Document with the given DocumentId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of Document</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.GetDocumentAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions)">
            <summary>
            Get information about the Document with the given DocumentId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of Document</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.DocumentsApi.GetDocumentAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.DocumentsApi.GetDocumentOptions)">
            <summary>
            Get information about the Document with the given DocumentId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="documentId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (Document)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IESignPermissionProfilesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IESignPermissionProfilesApi.GetESignPermissionProfiles(System.String)">
            <summary>
            Gets permission profiles from the associated eSign account.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IESignPermissionProfilesApi.GetESignPermissionProfilesWithHttpInfo(System.String)">
            <summary>
            Gets permission profiles from the associated eSign account.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IESignPermissionProfilesApi.GetESignPermissionProfilesAsync(System.String)">
            <summary>
            Gets permission profiles from the associated eSign account.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>Task of ESignPermissionProfileList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IESignPermissionProfilesApi.GetESignPermissionProfilesAsyncWithHttpInfo(System.String)">
            <summary>
            Gets permission profiles from the associated eSign account.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>Task of ApiResponse (ESignPermissionProfileList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ESignPermissionProfilesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ESignPermissionProfilesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.ESignPermissionProfilesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ESignPermissionProfilesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ESignPermissionProfilesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ESignPermissionProfilesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ESignPermissionProfilesApi.GetESignPermissionProfiles(System.String)">
            <summary>
            Gets permission profiles from the associated eSign account. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>ESignPermissionProfileList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ESignPermissionProfilesApi.GetESignPermissionProfilesWithHttpInfo(System.String)">
            <summary>
            Gets permission profiles from the associated eSign account. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>ApiResponse of ESignPermissionProfileList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ESignPermissionProfilesApi.GetESignPermissionProfilesAsync(System.String)">
            <summary>
            Gets permission profiles from the associated eSign account. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>Task of ESignPermissionProfileList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ESignPermissionProfilesApi.GetESignPermissionProfilesAsyncWithHttpInfo(System.String)">
            <summary>
            Gets permission profiles from the associated eSign account. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <returns>Task of ApiResponse (ESignPermissionProfileList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IExternalFormFillSessionsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IExternalFormFillSessionsApi.CreateExternalFormFillSession(System.String,DocuSign.Rooms.Model.ExternalFormFillSessionForCreate)">
            <summary>
            Creates an external form fill session.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="formFillSessionForCreate"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IExternalFormFillSessionsApi.CreateExternalFormFillSessionWithHttpInfo(System.String,DocuSign.Rooms.Model.ExternalFormFillSessionForCreate)">
            <summary>
            Creates an external form fill session.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="formFillSessionForCreate"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IExternalFormFillSessionsApi.CreateExternalFormFillSessionAsync(System.String,DocuSign.Rooms.Model.ExternalFormFillSessionForCreate)">
            <summary>
            Creates an external form fill session.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="formFillSessionForCreate"></param>
            <returns>Task of ExternalFormFillSession</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IExternalFormFillSessionsApi.CreateExternalFormFillSessionAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.ExternalFormFillSessionForCreate)">
            <summary>
            Creates an external form fill session.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="formFillSessionForCreate"></param>
            <returns>Task of ApiResponse (ExternalFormFillSession)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ExternalFormFillSessionsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ExternalFormFillSessionsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.ExternalFormFillSessionsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ExternalFormFillSessionsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ExternalFormFillSessionsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.ExternalFormFillSessionsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ExternalFormFillSessionsApi.CreateExternalFormFillSession(System.String,DocuSign.Rooms.Model.ExternalFormFillSessionForCreate)">
            <summary>
            Creates an external form fill session. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="formFillSessionForCreate"></param>
            <returns>ExternalFormFillSession</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ExternalFormFillSessionsApi.CreateExternalFormFillSessionWithHttpInfo(System.String,DocuSign.Rooms.Model.ExternalFormFillSessionForCreate)">
            <summary>
            Creates an external form fill session. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="formFillSessionForCreate"></param>
            <returns>ApiResponse of ExternalFormFillSession</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ExternalFormFillSessionsApi.CreateExternalFormFillSessionAsync(System.String,DocuSign.Rooms.Model.ExternalFormFillSessionForCreate)">
            <summary>
            Creates an external form fill session. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="formFillSessionForCreate"></param>
            <returns>Task of ExternalFormFillSession</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ExternalFormFillSessionsApi.CreateExternalFormFillSessionAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.ExternalFormFillSessionForCreate)">
            <summary>
            Creates an external form fill session. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="formFillSessionForCreate"></param>
            <returns>Task of ApiResponse (ExternalFormFillSession)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IFieldsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFieldsApi.GetFieldSet(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions)">
            <summary>
            Get details of a specific field set.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="fieldSetId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFieldsApi.GetFieldSetWithHttpInfo(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions)">
            <summary>
            Get details of a specific field set.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="fieldSetId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFieldsApi.GetFieldSetAsync(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions)">
            <summary>
            Get details of a specific field set.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="fieldSetId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of FieldSet</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFieldsApi.GetFieldSetAsyncWithHttpInfo(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions)">
            <summary>
            Get details of a specific field set.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="fieldSetId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (FieldSet)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.FieldsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.FieldsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.FieldsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FieldsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FieldsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FieldsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions">
            <summary>
            Get details of a specific field set. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions.fieldsCustomDataFilters">
            
        </member>
        <member name="M:DocuSign.Rooms.Api.FieldsApi.GetFieldSet(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions)">
            <summary>
            Get details of a specific field set. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="fieldSetId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>FieldSet</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FieldsApi.GetFieldSetWithHttpInfo(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions)">
            <summary>
            Get details of a specific field set. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="fieldSetId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of FieldSet</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FieldsApi.GetFieldSetAsync(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions)">
            <summary>
            Get details of a specific field set. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="fieldSetId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of FieldSet</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FieldsApi.GetFieldSetAsyncWithHttpInfo(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FieldsApi.GetFieldSetOptions)">
            <summary>
            Get details of a specific field set. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="fieldSetId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (FieldSet)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IFinancingTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFinancingTypesApi.GetFinancingTypes">
            <summary>
            Retrieves the list of valid financing types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFinancingTypesApi.GetFinancingTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid financing types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFinancingTypesApi.GetFinancingTypesAsync">
            <summary>
            Retrieves the list of valid financing types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalFinancingTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFinancingTypesApi.GetFinancingTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid financing types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalFinancingTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.FinancingTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.FinancingTypesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.FinancingTypesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FinancingTypesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FinancingTypesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FinancingTypesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.FinancingTypesApi.GetFinancingTypes">
            <summary>
            Retrieves the list of valid financing types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalFinancingTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FinancingTypesApi.GetFinancingTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid financing types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalFinancingTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FinancingTypesApi.GetFinancingTypesAsync">
            <summary>
            Retrieves the list of valid financing types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalFinancingTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FinancingTypesApi.GetFinancingTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid financing types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalFinancingTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IFormDetailsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormDetailsApi.GetFormDetails(System.String,System.Nullable{System.Guid})">
            <summary>
            Gets form based on Id.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formId">Form ID</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormDetailsApi.GetFormDetailsWithHttpInfo(System.String,System.Nullable{System.Guid})">
            <summary>
            Gets form based on Id.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formId">Form ID</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormDetailsApi.GetFormDetailsAsync(System.String,System.Nullable{System.Guid})">
            <summary>
            Gets form based on Id.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formId">Form ID</param>
            <returns>Task of FormDetails</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormDetailsApi.GetFormDetailsAsyncWithHttpInfo(System.String,System.Nullable{System.Guid})">
            <summary>
            Gets form based on Id.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formId">Form ID</param>
            <returns>Task of ApiResponse (FormDetails)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.FormDetailsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormDetailsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.FormDetailsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormDetailsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FormDetailsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FormDetailsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormDetailsApi.GetFormDetails(System.String,System.Nullable{System.Guid})">
            <summary>
            Gets form based on Id. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formId">Form ID</param>
            <returns>FormDetails</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormDetailsApi.GetFormDetailsWithHttpInfo(System.String,System.Nullable{System.Guid})">
            <summary>
            Gets form based on Id. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formId">Form ID</param>
            <returns>ApiResponse of FormDetails</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormDetailsApi.GetFormDetailsAsync(System.String,System.Nullable{System.Guid})">
            <summary>
            Gets form based on Id. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formId">Form ID</param>
            <returns>Task of FormDetails</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormDetailsApi.GetFormDetailsAsyncWithHttpInfo(System.String,System.Nullable{System.Guid})">
            <summary>
            Gets form based on Id. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formId">Form ID</param>
            <returns>Task of ApiResponse (FormDetails)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IFormGroupsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormGroupsApi.GetFormGroups(System.String,DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions)">
            <summary>
            Get account Form Groups.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormGroupsApi.GetFormGroupsWithHttpInfo(System.String,DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions)">
            <summary>
            Get account Form Groups.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormGroupsApi.GetFormGroupsAsync(System.String,DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions)">
            <summary>
            Get account Form Groups.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of FormGroupSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormGroupsApi.GetFormGroupsAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions)">
            <summary>
            Get account Form Groups.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (FormGroupSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.FormGroupsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormGroupsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.FormGroupsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormGroupsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FormGroupsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FormGroupsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions">
            <summary>
            Get account Form Groups. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions.count">
            Number of Form Groups to include in the response, (Default 100). 
        </member>
        <member name="P:DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions.startPosition">
            Position in the overall list of Form Groups to begin results. 
        </member>
        <member name="M:DocuSign.Rooms.Api.FormGroupsApi.GetFormGroups(System.String,DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions)">
            <summary>
            Get account Form Groups. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>FormGroupSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsWithHttpInfo(System.String,DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions)">
            <summary>
            Get account Form Groups. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of FormGroupSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsAsync(System.String,DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions)">
            <summary>
            Get account Form Groups. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of FormGroupSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.FormGroupsApi.GetFormGroupsOptions)">
            <summary>
            Get account Form Groups. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (FormGroupSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IFormLibrariesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormLibrariesApi.GetFormLibraries(System.String,DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions)">
            <summary>
            Gets a paged list of forms libraries.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormLibrariesApi.GetFormLibrariesWithHttpInfo(System.String,DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions)">
            <summary>
            Gets a paged list of forms libraries.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormLibrariesApi.GetFormLibraryForms(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions)">
            <summary>
            Gets a paged list of forms in a forms library.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formLibraryId">Library Id</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormLibrariesApi.GetFormLibraryFormsWithHttpInfo(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions)">
            <summary>
            Gets a paged list of forms in a forms library.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formLibraryId">Library Id</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormLibrariesApi.GetFormLibrariesAsync(System.String,DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions)">
            <summary>
            Gets a paged list of forms libraries.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of FormLibrarySummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormLibrariesApi.GetFormLibrariesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions)">
            <summary>
            Gets a paged list of forms libraries.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (FormLibrarySummaryList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormLibrariesApi.GetFormLibraryFormsAsync(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions)">
            <summary>
            Gets a paged list of forms in a forms library.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formLibraryId">Library Id</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of FormSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IFormLibrariesApi.GetFormLibraryFormsAsyncWithHttpInfo(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions)">
            <summary>
            Gets a paged list of forms in a forms library.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formLibraryId">Library Id</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (FormSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.FormLibrariesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.FormLibrariesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FormLibrariesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.FormLibrariesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions">
            <summary>
            Gets a paged list of forms libraries. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions.count">
            Default value is 100 and max value is 100 
        </member>
        <member name="P:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions.startPosition">
            Default value is 0 
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraries(System.String,DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions)">
            <summary>
            Gets a paged list of forms libraries. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>FormLibrarySummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesWithHttpInfo(System.String,DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions)">
            <summary>
            Gets a paged list of forms libraries. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of FormLibrarySummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesAsync(System.String,DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions)">
            <summary>
            Gets a paged list of forms libraries. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of FormLibrarySummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibrariesOptions)">
            <summary>
            Gets a paged list of forms libraries. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (FormLibrarySummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions">
            <summary>
            Gets a paged list of forms in a forms library. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions.count">
            Default value is 100 and max value is 100 
        </member>
        <member name="P:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions.startPosition">
            Default value is 0 
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryForms(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions)">
            <summary>
            Gets a paged list of forms in a forms library. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formLibraryId">Library Id</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>FormSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsWithHttpInfo(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions)">
            <summary>
            Gets a paged list of forms in a forms library. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formLibraryId">Library Id</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of FormSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsAsync(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions)">
            <summary>
            Gets a paged list of forms in a forms library. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formLibraryId">Library Id</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of FormSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsAsyncWithHttpInfo(System.String,System.Nullable{System.Guid},DocuSign.Rooms.Api.FormLibrariesApi.GetFormLibraryFormsOptions)">
            <summary>
            Gets a paged list of forms in a forms library. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="formLibraryId">Library Id</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (FormSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IOfficesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.CreateOffice(System.String,DocuSign.Rooms.Model.OfficeForCreate)">
            <summary>
            Create an office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="office"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.CreateOfficeWithHttpInfo(System.String,DocuSign.Rooms.Model.OfficeForCreate)">
            <summary>
            Create an office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="office"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.DeleteOffice(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.DeleteOfficeWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetOffice(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the office with the given officeId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetOfficeWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the office with the given officeId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetOffices(System.String,DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions)">
            <summary>
            Get all offices.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetOfficesWithHttpInfo(System.String,DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions)">
            <summary>
            Get all offices.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetReferenceCounts(System.String,System.Nullable{System.Int32})">
            <summary>
            Lists the number of objects of each type that reference the office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetReferenceCountsWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Lists the number of objects of each type that reference the office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.CreateOfficeAsync(System.String,DocuSign.Rooms.Model.OfficeForCreate)">
            <summary>
            Create an office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="office"></param>
            <returns>Task of Office</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.CreateOfficeAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.OfficeForCreate)">
            <summary>
            Create an office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="office"></param>
            <returns>Task of ApiResponse (Office)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.DeleteOfficeAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.DeleteOfficeAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetOfficeAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the office with the given officeId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of Office</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetOfficeAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the office with the given officeId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of ApiResponse (Office)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetOfficesAsync(System.String,DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions)">
            <summary>
            Get all offices.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of OfficeSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetOfficesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions)">
            <summary>
            Get all offices.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (OfficeSummaryList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetReferenceCountsAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Lists the number of objects of each type that reference the office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of OfficeReferenceCountList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOfficesApi.GetReferenceCountsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Lists the number of objects of each type that reference the office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of ApiResponse (OfficeReferenceCountList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.OfficesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.OfficesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.OfficesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.OfficesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.CreateOffice(System.String,DocuSign.Rooms.Model.OfficeForCreate)">
            <summary>
            Create an office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="office"></param>
            <returns>Office</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.CreateOfficeWithHttpInfo(System.String,DocuSign.Rooms.Model.OfficeForCreate)">
            <summary>
            Create an office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="office"></param>
            <returns>ApiResponse of Office</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.CreateOfficeAsync(System.String,DocuSign.Rooms.Model.OfficeForCreate)">
            <summary>
            Create an office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="office"></param>
            <returns>Task of Office</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.CreateOfficeAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.OfficeForCreate)">
            <summary>
            Create an office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="office"></param>
            <returns>Task of ApiResponse (Office)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.DeleteOffice(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.DeleteOfficeWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.DeleteOfficeAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.DeleteOfficeAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetOffice(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the office with the given officeId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Office</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetOfficeWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the office with the given officeId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>ApiResponse of Office</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetOfficeAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the office with the given officeId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of Office</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetOfficeAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the office with the given officeId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of ApiResponse (Office)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions">
            <summary>
            Get all offices. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions.count">
            Number of offices to include in the response, (Default 100) 
        </member>
        <member name="P:DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions.startPosition">
            Position in the overall list of offices to begin results. 
        </member>
        <member name="P:DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions.onlyAccessible">
            When true, the response only includes offices accessible to the calling user. 
        </member>
        <member name="P:DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions.search">
            When specified, the response only includes offices whose names includes the specified search string. 
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetOffices(System.String,DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions)">
            <summary>
            Get all offices. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>OfficeSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetOfficesWithHttpInfo(System.String,DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions)">
            <summary>
            Get all offices. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of OfficeSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetOfficesAsync(System.String,DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions)">
            <summary>
            Get all offices. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of OfficeSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetOfficesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.OfficesApi.GetOfficesOptions)">
            <summary>
            Get all offices. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (OfficeSummaryList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetReferenceCounts(System.String,System.Nullable{System.Int32})">
            <summary>
            Lists the number of objects of each type that reference the office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>OfficeReferenceCountList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetReferenceCountsWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Lists the number of objects of each type that reference the office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>ApiResponse of OfficeReferenceCountList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetReferenceCountsAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Lists the number of objects of each type that reference the office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of OfficeReferenceCountList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OfficesApi.GetReferenceCountsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Lists the number of objects of each type that reference the office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="officeId"></param>
            <returns>Task of ApiResponse (OfficeReferenceCountList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IOriginsOfLeadsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOriginsOfLeadsApi.GetOriginsOfLeads">
            <summary>
            Retrieves the list of valid origins of leads.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOriginsOfLeadsApi.GetOriginsOfLeadsWithHttpInfo">
            <summary>
            Retrieves the list of valid origins of leads.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOriginsOfLeadsApi.GetOriginsOfLeadsAsync">
            <summary>
            Retrieves the list of valid origins of leads.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalOriginsOfLeads</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IOriginsOfLeadsApi.GetOriginsOfLeadsAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid origins of leads.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalOriginsOfLeads)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.OriginsOfLeadsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.OriginsOfLeadsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.OriginsOfLeadsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OriginsOfLeadsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.OriginsOfLeadsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.OriginsOfLeadsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.OriginsOfLeadsApi.GetOriginsOfLeads">
            <summary>
            Retrieves the list of valid origins of leads. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalOriginsOfLeads</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OriginsOfLeadsApi.GetOriginsOfLeadsWithHttpInfo">
            <summary>
            Retrieves the list of valid origins of leads. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalOriginsOfLeads</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OriginsOfLeadsApi.GetOriginsOfLeadsAsync">
            <summary>
            Retrieves the list of valid origins of leads. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalOriginsOfLeads</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.OriginsOfLeadsApi.GetOriginsOfLeadsAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid origins of leads. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalOriginsOfLeads)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IPropertyTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IPropertyTypesApi.GetPropertyTypes">
            <summary>
            Retrieves the list of valid property types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IPropertyTypesApi.GetPropertyTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid property types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IPropertyTypesApi.GetPropertyTypesAsync">
            <summary>
            Retrieves the list of valid property types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalPropertyTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IPropertyTypesApi.GetPropertyTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid property types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalPropertyTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.PropertyTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.PropertyTypesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.PropertyTypesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.PropertyTypesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.PropertyTypesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.PropertyTypesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.PropertyTypesApi.GetPropertyTypes">
            <summary>
            Retrieves the list of valid property types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalPropertyTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.PropertyTypesApi.GetPropertyTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid property types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalPropertyTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.PropertyTypesApi.GetPropertyTypesAsync">
            <summary>
            Retrieves the list of valid property types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalPropertyTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.PropertyTypesApi.GetPropertyTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid property types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalPropertyTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IRegionsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.CreateRegion(System.String,DocuSign.Rooms.Model.Region)">
            <summary>
            Creates a new region for a company
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="region">The information required to create a new region for the caller&#39;s company</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.CreateRegionWithHttpInfo(System.String,DocuSign.Rooms.Model.Region)">
            <summary>
            Creates a new region for a company
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="region">The information required to create a new region for the caller&#39;s company</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.DeleteRegion(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.DeleteRegionWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegion(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the region with the given regionId
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the region with the given regionId
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionReferenceCounts(System.String,System.Nullable{System.Int32})">
            <summary>
            Get region reference counts.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionReferenceCountsWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get region reference counts.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegions(System.String,DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions)">
            <summary>
            Get account regions.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionsWithHttpInfo(System.String,DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions)">
            <summary>
            Get account regions.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.CreateRegionAsync(System.String,DocuSign.Rooms.Model.Region)">
            <summary>
            Creates a new region for a company
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="region">The information required to create a new region for the caller&#39;s company</param>
            <returns>Task of Region</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.CreateRegionAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.Region)">
            <summary>
            Creates a new region for a company
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="region">The information required to create a new region for the caller&#39;s company</param>
            <returns>Task of ApiResponse (Region)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.DeleteRegionAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.DeleteRegionAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the region with the given regionId
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of Region</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the region with the given regionId
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of ApiResponse (Region)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionReferenceCountsAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Get region reference counts.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of RegionReferenceCountList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionReferenceCountsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get region reference counts.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of ApiResponse (RegionReferenceCountList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionsAsync(System.String,DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions)">
            <summary>
            Get account regions.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RegionSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRegionsApi.GetRegionsAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions)">
            <summary>
            Get account regions.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RegionSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RegionsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.RegionsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RegionsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RegionsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.CreateRegion(System.String,DocuSign.Rooms.Model.Region)">
            <summary>
            Creates a new region for a company 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="region">The information required to create a new region for the caller&#39;s company</param>
            <returns>Region</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.CreateRegionWithHttpInfo(System.String,DocuSign.Rooms.Model.Region)">
            <summary>
            Creates a new region for a company 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="region">The information required to create a new region for the caller&#39;s company</param>
            <returns>ApiResponse of Region</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.CreateRegionAsync(System.String,DocuSign.Rooms.Model.Region)">
            <summary>
            Creates a new region for a company 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="region">The information required to create a new region for the caller&#39;s company</param>
            <returns>Task of Region</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.CreateRegionAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.Region)">
            <summary>
            Creates a new region for a company 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="region">The information required to create a new region for the caller&#39;s company</param>
            <returns>Task of ApiResponse (Region)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.DeleteRegion(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.DeleteRegionWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.DeleteRegionAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.DeleteRegionAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegion(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the region with the given regionId 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Region</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the region with the given regionId 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>ApiResponse of Region</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the region with the given regionId 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of Region</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get information about the region with the given regionId 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of ApiResponse (Region)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionReferenceCounts(System.String,System.Nullable{System.Int32})">
            <summary>
            Get region reference counts. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>RegionReferenceCountList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionReferenceCountsWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get region reference counts. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>ApiResponse of RegionReferenceCountList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionReferenceCountsAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Get region reference counts. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of RegionReferenceCountList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionReferenceCountsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Get region reference counts. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="regionId">Id of the desired region</param>
            <returns>Task of ApiResponse (RegionReferenceCountList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions">
            <summary>
            Get account regions. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions.count">
            Number of regions to include in the response, (Default 100). 
        </member>
        <member name="P:DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions.startPosition">
            Position in the overall list of regions to begin results. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions.managedOnly">
            When true, the response only includes regions that the calling user can manage. 
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegions(System.String,DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions)">
            <summary>
            Get account regions. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>RegionSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionsWithHttpInfo(System.String,DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions)">
            <summary>
            Get account regions. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of RegionSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionsAsync(System.String,DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions)">
            <summary>
            Get account regions. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RegionSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RegionsApi.GetRegionsAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.RegionsApi.GetRegionsOptions)">
            <summary>
            Get account regions. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RegionSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IRolesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.CreateRole(System.String,DocuSign.Rooms.Model.RoleForCreate)">
            <summary>
            Creates a role.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.CreateRoleWithHttpInfo(System.String,DocuSign.Rooms.Model.RoleForCreate)">
            <summary>
            Creates a role.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="role"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.DeleteRole(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.DeleteRoleWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.GetRole(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RolesApi.GetRoleOptions)">
            <summary>
            Get information about the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.GetRoleWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RolesApi.GetRoleOptions)">
            <summary>
            Get information about the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.GetRoles(System.String,DocuSign.Rooms.Api.RolesApi.GetRolesOptions)">
            <summary>
            Gets a paged-list of roles in your company
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.GetRolesWithHttpInfo(System.String,DocuSign.Rooms.Api.RolesApi.GetRolesOptions)">
            <summary>
            Gets a paged-list of roles in your company
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.UpdateRole(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoleForUpdate)">
            <summary>
            Updates the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.UpdateRoleWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoleForUpdate)">
            <summary>
            Updates the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="role"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.CreateRoleAsync(System.String,DocuSign.Rooms.Model.RoleForCreate)">
            <summary>
            Creates a role.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="role"></param>
            <returns>Task of Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.CreateRoleAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.RoleForCreate)">
            <summary>
            Creates a role.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="role"></param>
            <returns>Task of ApiResponse (Role)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.DeleteRoleAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.DeleteRoleAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.GetRoleAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RolesApi.GetRoleOptions)">
            <summary>
            Get information about the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.GetRoleAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RolesApi.GetRoleOptions)">
            <summary>
            Get information about the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (Role)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.GetRolesAsync(System.String,DocuSign.Rooms.Api.RolesApi.GetRolesOptions)">
            <summary>
            Gets a paged-list of roles in your company
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoleSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.GetRolesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.RolesApi.GetRolesOptions)">
            <summary>
            Gets a paged-list of roles in your company
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoleSummaryList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.UpdateRoleAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoleForUpdate)">
            <summary>
            Updates the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="role"></param>
            <returns>Task of Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRolesApi.UpdateRoleAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoleForUpdate)">
            <summary>
            Updates the role with the given roleId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="role"></param>
            <returns>Task of ApiResponse (Role)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RolesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.RolesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RolesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RolesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.CreateRole(System.String,DocuSign.Rooms.Model.RoleForCreate)">
            <summary>
            Creates a role. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="role"></param>
            <returns>Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.CreateRoleWithHttpInfo(System.String,DocuSign.Rooms.Model.RoleForCreate)">
            <summary>
            Creates a role. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="role"></param>
            <returns>ApiResponse of Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.CreateRoleAsync(System.String,DocuSign.Rooms.Model.RoleForCreate)">
            <summary>
            Creates a role. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="role"></param>
            <returns>Task of Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.CreateRoleAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.RoleForCreate)">
            <summary>
            Creates a role. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="role"></param>
            <returns>Task of ApiResponse (Role)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.DeleteRole(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.DeleteRoleWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.DeleteRoleAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.DeleteRoleAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RolesApi.GetRoleOptions">
            <summary>
            Get information about the role with the given roleId. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RolesApi.GetRoleOptions.includeIsAssigned">
            
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.GetRole(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RolesApi.GetRoleOptions)">
            <summary>
            Get information about the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.GetRoleWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RolesApi.GetRoleOptions)">
            <summary>
            Get information about the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.GetRoleAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RolesApi.GetRoleOptions)">
            <summary>
            Get information about the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.GetRoleAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RolesApi.GetRoleOptions)">
            <summary>
            Get information about the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (Role)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RolesApi.GetRolesOptions">
            <summary>
            Gets a paged-list of roles in your company 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RolesApi.GetRolesOptions.onlyAssignable">
            
        </member>
        <member name="P:DocuSign.Rooms.Api.RolesApi.GetRolesOptions.filter">
            
        </member>
        <member name="P:DocuSign.Rooms.Api.RolesApi.GetRolesOptions.startPosition">
            
        </member>
        <member name="P:DocuSign.Rooms.Api.RolesApi.GetRolesOptions.count">
            
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.GetRoles(System.String,DocuSign.Rooms.Api.RolesApi.GetRolesOptions)">
            <summary>
            Gets a paged-list of roles in your company 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>RoleSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.GetRolesWithHttpInfo(System.String,DocuSign.Rooms.Api.RolesApi.GetRolesOptions)">
            <summary>
            Gets a paged-list of roles in your company 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of RoleSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.GetRolesAsync(System.String,DocuSign.Rooms.Api.RolesApi.GetRolesOptions)">
            <summary>
            Gets a paged-list of roles in your company 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoleSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.GetRolesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.RolesApi.GetRolesOptions)">
            <summary>
            Gets a paged-list of roles in your company 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoleSummaryList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.UpdateRole(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoleForUpdate)">
            <summary>
            Updates the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="role"></param>
            <returns>Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.UpdateRoleWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoleForUpdate)">
            <summary>
            Updates the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="role"></param>
            <returns>ApiResponse of Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.UpdateRoleAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoleForUpdate)">
            <summary>
            Updates the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="role"></param>
            <returns>Task of Role</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RolesApi.UpdateRoleAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoleForUpdate)">
            <summary>
            Updates the role with the given roleId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roleId"></param>
            <param name="role"></param>
            <returns>Task of ApiResponse (Role)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IRoomContactTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomContactTypesApi.GetRoomContactTypes">
            <summary>
            Retrieves the list of valid room contact types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomContactTypesApi.GetRoomContactTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid room contact types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomContactTypesApi.GetRoomContactTypesAsync">
            <summary>
            Retrieves the list of valid room contact types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalRoomContactTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomContactTypesApi.GetRoomContactTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid room contact types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalRoomContactTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomContactTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomContactTypesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.RoomContactTypesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomContactTypesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomContactTypesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomContactTypesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomContactTypesApi.GetRoomContactTypes">
            <summary>
            Retrieves the list of valid room contact types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalRoomContactTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomContactTypesApi.GetRoomContactTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid room contact types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalRoomContactTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomContactTypesApi.GetRoomContactTypesAsync">
            <summary>
            Retrieves the list of valid room contact types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalRoomContactTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomContactTypesApi.GetRoomContactTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid room contact types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalRoomContactTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IRoomFoldersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomFoldersApi.GetRoomFolders(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions)">
            <summary>
            Gets room folders accessible to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room id from which to retrieve folders.</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomFoldersApi.GetRoomFoldersWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions)">
            <summary>
            Gets room folders accessible to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room id from which to retrieve folders.</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomFoldersApi.GetRoomFoldersAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions)">
            <summary>
            Gets room folders accessible to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room id from which to retrieve folders.</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomFolderList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomFoldersApi.GetRoomFoldersAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions)">
            <summary>
            Gets room folders accessible to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room id from which to retrieve folders.</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomFolderList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomFoldersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomFoldersApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.RoomFoldersApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomFoldersApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomFoldersApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomFoldersApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions">
            <summary>
            Gets room folders accessible to the calling user. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions.startPosition">
            Position of the first item in the total results. Defaults to 0. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions.count">
            Number of room folders to return. Defaults to the maximum which is 100. 
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFolders(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions)">
            <summary>
            Gets room folders accessible to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room id from which to retrieve folders.</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>RoomFolderList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions)">
            <summary>
            Gets room folders accessible to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room id from which to retrieve folders.</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of RoomFolderList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions)">
            <summary>
            Gets room folders accessible to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room id from which to retrieve folders.</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomFolderList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomFoldersApi.GetRoomFoldersOptions)">
            <summary>
            Gets room folders accessible to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room id from which to retrieve folders.</param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomFolderList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IRoomsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddDocumentToRoom(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.Document)">
            <summary>
            Add a document to a room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddDocumentToRoomWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.Document)">
            <summary>
            Add a document to a room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="document"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddDocumentToRoomViaFileUpload(System.String,System.Nullable{System.Int32},System.IO.Stream)">
            <summary>
            Add a document to a room via file contents upload.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="_file"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddDocumentToRoomViaFileUploadWithHttpInfo(System.String,System.Nullable{System.Int32},System.IO.Stream)">
            <summary>
            Add a document to a room via file contents upload.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="_file"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddFormToRoom(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FormForAdd)">
            <summary>
            Adds a DocuSign Form to a room
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Id of the room to which the DocuSign Form is being added</param>
            <param name="formForAdd">Contains information about the form being added</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddFormToRoomWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FormForAdd)">
            <summary>
            Adds a DocuSign Form to a room
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Id of the room to which the DocuSign Form is being added</param>
            <param name="formForAdd">Contains information about the form being added</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.CreateRoom(System.String,DocuSign.Rooms.Model.RoomForCreate)">
            <summary>
            Creates a new Room
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="roomForCreate">The properties of the new room</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.CreateRoomWithHttpInfo(System.String,DocuSign.Rooms.Model.RoomForCreate)">
            <summary>
            Creates a new Room
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="roomForCreate">The properties of the new room</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.DeleteRoom(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the room having the given room ID.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room to be deleted.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.DeleteRoomWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the room having the given room ID.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room to be deleted.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetAssignableRoles(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions)">
            <summary>
            Returns the roles for which the calling user, based on their role within the room, can assign to invitees.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetAssignableRolesWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions)">
            <summary>
            Returns the roles for which the calling user, based on their role within the room, can assign to invitees.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetDocuments(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions)">
            <summary>
            Get documents in the room accessible to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetDocumentsWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions)">
            <summary>
            Get documents in the room accessible to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoom(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomOptions)">
            <summary>
            Gets information about the given room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomOptions)">
            <summary>
            Gets information about the given room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomFieldData(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the FieldData associated with the provided roomId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomFieldDataWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the FieldData associated with the provided roomId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomFieldSet(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the field set associated with the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomFieldSetWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the field set associated with the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomUsers(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions)">
            <summary>
            Retrieves the list of users in the given room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomUsersWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions)">
            <summary>
            Retrieves the list of users in the given room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRooms(System.String,DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions)">
            <summary>
            Gets rooms available to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomsWithHttpInfo(System.String,DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions)">
            <summary>
            Gets rooms available to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.InviteUser(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomInvite)">
            <summary>
            Invites a user to the room by email address.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="roomInviteRequest"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.InviteUserWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomInvite)">
            <summary>
            Invites a user to the room by email address.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="roomInviteRequest"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.PutRoomUser(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserForUpdate)">
            <summary>
            Updates the specified user&#39;s role and transaction side.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="userId"></param>
            <param name="roomUserForUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.PutRoomUserWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserForUpdate)">
            <summary>
            Updates the specified user&#39;s role and transaction side.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="userId"></param>
            <param name="roomUserForUpdate"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.RestoreRoomUserAccess(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores the specified user&#39;s access to the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to restore access</param>/// <param name="userId">The user Id getting restored to the room</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.RestoreRoomUserAccessWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores the specified user&#39;s access to the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to restore access</param>/// <param name="userId">The user Id getting restored to the room</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.RevokeRoomUserAccess(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserRemovalDetail)">
            <summary>
            Revokes the specified user&#39;s access to the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to revoke access from</param>/// <param name="userId">The user Id getting revoked from the room</param>
            <param name="roomUserRemovalDetail">Contains the date on which the users room access should be revoked (optional)</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.RevokeRoomUserAccessWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserRemovalDetail)">
            <summary>
            Revokes the specified user&#39;s access to the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to revoke access from</param>/// <param name="userId">The user Id getting revoked from the room</param>
            <param name="roomUserRemovalDetail">Contains the date on which the users room access should be revoked (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.UpdatePicture(System.String,System.Nullable{System.Int32})">
            <summary>
            Update the picture for a room.
            </summary>
            <remarks>
            This endpoint supports the following content types, application/json as JSON PictureForUpdate{\&quot;fileName\&quot;:\&quot;string\&quot;, \&quot;Base64Contents\&quot;:\&quot;string\&quot;}, multipart/formdata and any other streamed binary content type (as long as either query parameter fileName or request header ContentDisposition filename is included).
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room the picture is for.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.UpdatePictureWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Update the picture for a room.
            </summary>
            <remarks>
            This endpoint supports the following content types, application/json as JSON PictureForUpdate{\&quot;fileName\&quot;:\&quot;string\&quot;, \&quot;Base64Contents\&quot;:\&quot;string\&quot;}, multipart/formdata and any other streamed binary content type (as long as either query parameter fileName or request header ContentDisposition filename is included).
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room the picture is for.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.UpdateRoomFieldData(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FieldDataForUpdate)">
            <summary>
            Updates room field data.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="fieldDataForUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.UpdateRoomFieldDataWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FieldDataForUpdate)">
            <summary>
            Updates room field data.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="fieldDataForUpdate"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddDocumentToRoomAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.Document)">
            <summary>
            Add a document to a room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="document"></param>
            <returns>Task of RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddDocumentToRoomAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.Document)">
            <summary>
            Add a document to a room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="document"></param>
            <returns>Task of ApiResponse (RoomDocument)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddDocumentToRoomViaFileUploadAsync(System.String,System.Nullable{System.Int32},System.IO.Stream)">
            <summary>
            Add a document to a room via file contents upload.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="_file"></param>
            <returns>Task of RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddDocumentToRoomViaFileUploadAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.IO.Stream)">
            <summary>
            Add a document to a room via file contents upload.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="_file"></param>
            <returns>Task of ApiResponse (RoomDocument)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddFormToRoomAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FormForAdd)">
            <summary>
            Adds a DocuSign Form to a room
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Id of the room to which the DocuSign Form is being added</param>
            <param name="formForAdd">Contains information about the form being added</param>
            <returns>Task of RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.AddFormToRoomAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FormForAdd)">
            <summary>
            Adds a DocuSign Form to a room
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Id of the room to which the DocuSign Form is being added</param>
            <param name="formForAdd">Contains information about the form being added</param>
            <returns>Task of ApiResponse (RoomDocument)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.CreateRoomAsync(System.String,DocuSign.Rooms.Model.RoomForCreate)">
            <summary>
            Creates a new Room
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="roomForCreate">The properties of the new room</param>
            <returns>Task of Room</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.CreateRoomAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.RoomForCreate)">
            <summary>
            Creates a new Room
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="roomForCreate">The properties of the new room</param>
            <returns>Task of ApiResponse (Room)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.DeleteRoomAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the room having the given room ID.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room to be deleted.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.DeleteRoomAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the room having the given room ID.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room to be deleted.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetAssignableRolesAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions)">
            <summary>
            Returns the roles for which the calling user, based on their role within the room, can assign to invitees.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of AssignableRoles</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetAssignableRolesAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions)">
            <summary>
            Returns the roles for which the calling user, based on their role within the room, can assign to invitees.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (AssignableRoles)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetDocumentsAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions)">
            <summary>
            Get documents in the room accessible to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomDocumentList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetDocumentsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions)">
            <summary>
            Get documents in the room accessible to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomDocumentList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomOptions)">
            <summary>
            Gets information about the given room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of Room</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomOptions)">
            <summary>
            Gets information about the given room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (Room)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomFieldDataAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the FieldData associated with the provided roomId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>Task of FieldData</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomFieldDataAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the FieldData associated with the provided roomId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>Task of ApiResponse (FieldData)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomFieldSetAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the field set associated with the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>Task of FieldSet</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomFieldSetAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the field set associated with the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>Task of ApiResponse (FieldSet)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomUsersAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions)">
            <summary>
            Retrieves the list of users in the given room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomUsersResult</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomUsersAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions)">
            <summary>
            Retrieves the list of users in the given room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomUsersResult)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomsAsync(System.String,DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions)">
            <summary>
            Gets rooms available to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.GetRoomsAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions)">
            <summary>
            Gets rooms available to the calling user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomSummaryList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.InviteUserAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomInvite)">
            <summary>
            Invites a user to the room by email address.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="roomInviteRequest"></param>
            <returns>Task of RoomInviteResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.InviteUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomInvite)">
            <summary>
            Invites a user to the room by email address.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="roomInviteRequest"></param>
            <returns>Task of ApiResponse (RoomInviteResponse)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.PutRoomUserAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserForUpdate)">
            <summary>
            Updates the specified user&#39;s role and transaction side.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="userId"></param>
            <param name="roomUserForUpdate"></param>
            <returns>Task of RoomUser</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.PutRoomUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserForUpdate)">
            <summary>
            Updates the specified user&#39;s role and transaction side.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="userId"></param>
            <param name="roomUserForUpdate"></param>
            <returns>Task of ApiResponse (RoomUser)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.RestoreRoomUserAccessAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores the specified user&#39;s access to the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to restore access</param>/// <param name="userId">The user Id getting restored to the room</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.RestoreRoomUserAccessAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores the specified user&#39;s access to the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to restore access</param>/// <param name="userId">The user Id getting restored to the room</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.RevokeRoomUserAccessAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserRemovalDetail)">
            <summary>
            Revokes the specified user&#39;s access to the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to revoke access from</param>/// <param name="userId">The user Id getting revoked from the room</param>
            <param name="roomUserRemovalDetail">Contains the date on which the users room access should be revoked (optional)</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.RevokeRoomUserAccessAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserRemovalDetail)">
            <summary>
            Revokes the specified user&#39;s access to the room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to revoke access from</param>/// <param name="userId">The user Id getting revoked from the room</param>
            <param name="roomUserRemovalDetail">Contains the date on which the users room access should be revoked (optional)</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.UpdatePictureAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Update the picture for a room.
            </summary>
            <remarks>
            This endpoint supports the following content types, application/json as JSON PictureForUpdate{\&quot;fileName\&quot;:\&quot;string\&quot;, \&quot;Base64Contents\&quot;:\&quot;string\&quot;}, multipart/formdata and any other streamed binary content type (as long as either query parameter fileName or request header ContentDisposition filename is included).
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room the picture is for.</param>
            <returns>Task of RoomPicture</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.UpdatePictureAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Update the picture for a room.
            </summary>
            <remarks>
            This endpoint supports the following content types, application/json as JSON PictureForUpdate{\&quot;fileName\&quot;:\&quot;string\&quot;, \&quot;Base64Contents\&quot;:\&quot;string\&quot;}, multipart/formdata and any other streamed binary content type (as long as either query parameter fileName or request header ContentDisposition filename is included).
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room the picture is for.</param>
            <returns>Task of ApiResponse (RoomPicture)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.UpdateRoomFieldDataAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FieldDataForUpdate)">
            <summary>
            Updates room field data.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="fieldDataForUpdate"></param>
            <returns>Task of FieldData</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomsApi.UpdateRoomFieldDataAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FieldDataForUpdate)">
            <summary>
            Updates room field data.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="fieldDataForUpdate"></param>
            <returns>Task of ApiResponse (FieldData)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.RoomsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddDocumentToRoom(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.Document)">
            <summary>
            Add a document to a room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="document"></param>
            <returns>RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddDocumentToRoomWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.Document)">
            <summary>
            Add a document to a room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="document"></param>
            <returns>ApiResponse of RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddDocumentToRoomAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.Document)">
            <summary>
            Add a document to a room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="document"></param>
            <returns>Task of RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddDocumentToRoomAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.Document)">
            <summary>
            Add a document to a room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="document"></param>
            <returns>Task of ApiResponse (RoomDocument)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddDocumentToRoomViaFileUpload(System.String,System.Nullable{System.Int32},System.IO.Stream)">
            <summary>
            Add a document to a room via file contents upload. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="_file"></param>
            <returns>RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddDocumentToRoomViaFileUploadWithHttpInfo(System.String,System.Nullable{System.Int32},System.IO.Stream)">
            <summary>
            Add a document to a room via file contents upload. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="_file"></param>
            <returns>ApiResponse of RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddDocumentToRoomViaFileUploadAsync(System.String,System.Nullable{System.Int32},System.IO.Stream)">
            <summary>
            Add a document to a room via file contents upload. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="_file"></param>
            <returns>Task of RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddDocumentToRoomViaFileUploadAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.IO.Stream)">
            <summary>
            Add a document to a room via file contents upload. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="_file"></param>
            <returns>Task of ApiResponse (RoomDocument)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddFormToRoom(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FormForAdd)">
            <summary>
            Adds a DocuSign Form to a room 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Id of the room to which the DocuSign Form is being added</param>
            <param name="formForAdd">Contains information about the form being added</param>
            <returns>RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddFormToRoomWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FormForAdd)">
            <summary>
            Adds a DocuSign Form to a room 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Id of the room to which the DocuSign Form is being added</param>
            <param name="formForAdd">Contains information about the form being added</param>
            <returns>ApiResponse of RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddFormToRoomAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FormForAdd)">
            <summary>
            Adds a DocuSign Form to a room 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Id of the room to which the DocuSign Form is being added</param>
            <param name="formForAdd">Contains information about the form being added</param>
            <returns>Task of RoomDocument</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.AddFormToRoomAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FormForAdd)">
            <summary>
            Adds a DocuSign Form to a room 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Id of the room to which the DocuSign Form is being added</param>
            <param name="formForAdd">Contains information about the form being added</param>
            <returns>Task of ApiResponse (RoomDocument)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.CreateRoom(System.String,DocuSign.Rooms.Model.RoomForCreate)">
            <summary>
            Creates a new Room 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="roomForCreate">The properties of the new room</param>
            <returns>Room</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.CreateRoomWithHttpInfo(System.String,DocuSign.Rooms.Model.RoomForCreate)">
            <summary>
            Creates a new Room 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="roomForCreate">The properties of the new room</param>
            <returns>ApiResponse of Room</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.CreateRoomAsync(System.String,DocuSign.Rooms.Model.RoomForCreate)">
            <summary>
            Creates a new Room 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="roomForCreate">The properties of the new room</param>
            <returns>Task of Room</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.CreateRoomAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.RoomForCreate)">
            <summary>
            Creates a new Room 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="roomForCreate">The properties of the new room</param>
            <returns>Task of ApiResponse (Room)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.DeleteRoom(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the room having the given room ID. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room to be deleted.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.DeleteRoomWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the room having the given room ID. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room to be deleted.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.DeleteRoomAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the room having the given room ID. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room to be deleted.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.DeleteRoomAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes the room having the given room ID. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room to be deleted.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions">
            <summary>
            Returns the roles for which the calling user, based on their role within the room, can assign to invitees. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions.assigneeEmail">
            Optional parameter indicating to only return roles (internal/external) assignable to this user. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions.filter">
            
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions.startPosition">
            
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions.count">
            
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetAssignableRoles(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions)">
            <summary>
            Returns the roles for which the calling user, based on their role within the room, can assign to invitees. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>AssignableRoles</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions)">
            <summary>
            Returns the roles for which the calling user, based on their role within the room, can assign to invitees. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of AssignableRoles</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions)">
            <summary>
            Returns the roles for which the calling user, based on their role within the room, can assign to invitees. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of AssignableRoles</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetAssignableRolesOptions)">
            <summary>
            Returns the roles for which the calling user, based on their role within the room, can assign to invitees. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (AssignableRoles)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions">
            <summary>
            Get documents in the room accessible to the calling user. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions.count">
            Number of documents to return. Defaults to the maximum which is 100. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions.startPosition">
            Position of the first item in the total results. Defaults to 0. 
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetDocuments(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions)">
            <summary>
            Get documents in the room accessible to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>RoomDocumentList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetDocumentsWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions)">
            <summary>
            Get documents in the room accessible to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of RoomDocumentList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetDocumentsAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions)">
            <summary>
            Get documents in the room accessible to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomDocumentList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetDocumentsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetDocumentsOptions)">
            <summary>
            Get documents in the room accessible to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomDocumentList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomsApi.GetRoomOptions">
            <summary>
            Gets information about the given room. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomOptions.includeFieldData">
            Indicates if field data (a.k.a., room details) should be included in the response. Defaults to false. 
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoom(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomOptions)">
            <summary>
            Gets information about the given room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Room</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomOptions)">
            <summary>
            Gets information about the given room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of Room</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomOptions)">
            <summary>
            Gets information about the given room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of Room</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomOptions)">
            <summary>
            Gets information about the given room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (Room)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomFieldData(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the FieldData associated with the provided roomId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>FieldData</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomFieldDataWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the FieldData associated with the provided roomId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>ApiResponse of FieldData</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomFieldDataAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the FieldData associated with the provided roomId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>Task of FieldData</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomFieldDataAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the FieldData associated with the provided roomId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>Task of ApiResponse (FieldData)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomFieldSet(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the field set associated with the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>FieldSet</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomFieldSetWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the field set associated with the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>ApiResponse of FieldSet</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomFieldSetAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the field set associated with the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>Task of FieldSet</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomFieldSetAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the field set associated with the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <returns>Task of ApiResponse (FieldSet)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions">
            <summary>
            Retrieves the list of users in the given room. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions.count">
            Number of room users to return. Defaults to the maximum which is 100. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions.startPosition">
            Position of the first item in the total results. Defaults to 0. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions.filter">
            Returns room users filtered by Name and Email. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions.sort">
            Sorts results. Options are FirstNameAsc, FirstNameDesc, LastNameAsc, LastNameDesc, EmailAsc, EmailDesc. Defaults to LastNameDesc 
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomUsers(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions)">
            <summary>
            Retrieves the list of users in the given room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>RoomUsersResult</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomUsersWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions)">
            <summary>
            Retrieves the list of users in the given room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of RoomUsersResult</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomUsersAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions)">
            <summary>
            Retrieves the list of users in the given room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomUsersResult</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomUsersAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Api.RoomsApi.GetRoomUsersOptions)">
            <summary>
            Retrieves the list of users in the given room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomUsersResult)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions">
            <summary>
            Gets rooms available to the calling user. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions.count">
            Number of rooms to return. Defaults to the maximum which is 100. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions.startPosition">
            Position of the first item in the total results. Defaults to 0. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions.roomStatus">
            Status of the rooms to return. Defaults to \&quot;Active\&quot;. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions.officeId">
            Only return rooms in this office. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions.fieldDataChangedStartDate">
            Fields data changed start datetime in UTC. Valid formats: yyyy-mm-dd hh:mm:ss or yyyy/mm/dd hh:mm:ss -Time is optional and will default to 00:00:00. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions.fieldDataChangedEndDate">
            Fields-data changed end DateTime in UTC. Valid formats: yyyy-mm-dd hh:mm:ss or yyyy/mm/dd hh:mm:ss -Time is optional and will default to 00:00:00. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions.roomClosedStartDate">
            Room closed start datetime in UTC. Valid formats: yyyy-mm-dd hh:mm:ss or yyyy/mm/dd hh:mm:ss -Time is optional and will default to 00:00:00. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions.roomClosedEndDate">
            Room closed end datetime in UTC. Valid formats: yyyy-mm-dd hh:mm:ss or yyyy/mm/dd hh:mm:ss -Time is optional and will default to 00:00:00. 
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRooms(System.String,DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions)">
            <summary>
            Gets rooms available to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>RoomSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomsWithHttpInfo(System.String,DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions)">
            <summary>
            Gets rooms available to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of RoomSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomsAsync(System.String,DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions)">
            <summary>
            Gets rooms available to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.GetRoomsAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.RoomsApi.GetRoomsOptions)">
            <summary>
            Gets rooms available to the calling user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomSummaryList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.InviteUser(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomInvite)">
            <summary>
            Invites a user to the room by email address. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="roomInviteRequest"></param>
            <returns>RoomInviteResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.InviteUserWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomInvite)">
            <summary>
            Invites a user to the room by email address. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="roomInviteRequest"></param>
            <returns>ApiResponse of RoomInviteResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.InviteUserAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomInvite)">
            <summary>
            Invites a user to the room by email address. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="roomInviteRequest"></param>
            <returns>Task of RoomInviteResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.InviteUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomInvite)">
            <summary>
            Invites a user to the room by email address. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="roomInviteRequest"></param>
            <returns>Task of ApiResponse (RoomInviteResponse)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.PutRoomUser(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserForUpdate)">
            <summary>
            Updates the specified user&#39;s role and transaction side. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="userId"></param>
            <param name="roomUserForUpdate"></param>
            <returns>RoomUser</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.PutRoomUserWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserForUpdate)">
            <summary>
            Updates the specified user&#39;s role and transaction side. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="userId"></param>
            <param name="roomUserForUpdate"></param>
            <returns>ApiResponse of RoomUser</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.PutRoomUserAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserForUpdate)">
            <summary>
            Updates the specified user&#39;s role and transaction side. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="userId"></param>
            <param name="roomUserForUpdate"></param>
            <returns>Task of RoomUser</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.PutRoomUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserForUpdate)">
            <summary>
            Updates the specified user&#39;s role and transaction side. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>/// <param name="userId"></param>
            <param name="roomUserForUpdate"></param>
            <returns>Task of ApiResponse (RoomUser)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.RestoreRoomUserAccess(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores the specified user&#39;s access to the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to restore access</param>/// <param name="userId">The user Id getting restored to the room</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.RestoreRoomUserAccessWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores the specified user&#39;s access to the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to restore access</param>/// <param name="userId">The user Id getting restored to the room</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.RestoreRoomUserAccessAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores the specified user&#39;s access to the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to restore access</param>/// <param name="userId">The user Id getting restored to the room</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.RestoreRoomUserAccessAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Restores the specified user&#39;s access to the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to restore access</param>/// <param name="userId">The user Id getting restored to the room</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.RevokeRoomUserAccess(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserRemovalDetail)">
            <summary>
            Revokes the specified user&#39;s access to the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to revoke access from</param>/// <param name="userId">The user Id getting revoked from the room</param>
            <param name="roomUserRemovalDetail">Contains the date on which the users room access should be revoked (optional)</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.RevokeRoomUserAccessWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserRemovalDetail)">
            <summary>
            Revokes the specified user&#39;s access to the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to revoke access from</param>/// <param name="userId">The user Id getting revoked from the room</param>
            <param name="roomUserRemovalDetail">Contains the date on which the users room access should be revoked (optional)</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.RevokeRoomUserAccessAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserRemovalDetail)">
            <summary>
            Revokes the specified user&#39;s access to the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to revoke access from</param>/// <param name="userId">The user Id getting revoked from the room</param>
            <param name="roomUserRemovalDetail">Contains the date on which the users room access should be revoked (optional)</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.RevokeRoomUserAccessAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.RoomUserRemovalDetail)">
            <summary>
            Revokes the specified user&#39;s access to the room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">The room Id to revoke access from</param>/// <param name="userId">The user Id getting revoked from the room</param>
            <param name="roomUserRemovalDetail">Contains the date on which the users room access should be revoked (optional)</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.UpdatePicture(System.String,System.Nullable{System.Int32})">
            <summary>
            Update the picture for a room. This endpoint supports the following content types, application/json as JSON PictureForUpdate{\&quot;fileName\&quot;:\&quot;string\&quot;, \&quot;Base64Contents\&quot;:\&quot;string\&quot;}, multipart/formdata and any other streamed binary content type (as long as either query parameter fileName or request header ContentDisposition filename is included).
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room the picture is for.</param>
            <returns>RoomPicture</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.UpdatePictureWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Update the picture for a room. This endpoint supports the following content types, application/json as JSON PictureForUpdate{\&quot;fileName\&quot;:\&quot;string\&quot;, \&quot;Base64Contents\&quot;:\&quot;string\&quot;}, multipart/formdata and any other streamed binary content type (as long as either query parameter fileName or request header ContentDisposition filename is included).
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room the picture is for.</param>
            <returns>ApiResponse of RoomPicture</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.UpdatePictureAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Update the picture for a room. This endpoint supports the following content types, application/json as JSON PictureForUpdate{\&quot;fileName\&quot;:\&quot;string\&quot;, \&quot;Base64Contents\&quot;:\&quot;string\&quot;}, multipart/formdata and any other streamed binary content type (as long as either query parameter fileName or request header ContentDisposition filename is included).
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room the picture is for.</param>
            <returns>Task of RoomPicture</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.UpdatePictureAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Update the picture for a room. This endpoint supports the following content types, application/json as JSON PictureForUpdate{\&quot;fileName\&quot;:\&quot;string\&quot;, \&quot;Base64Contents\&quot;:\&quot;string\&quot;}, multipart/formdata and any other streamed binary content type (as long as either query parameter fileName or request header ContentDisposition filename is included).
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">ID of the room the picture is for.</param>
            <returns>Task of ApiResponse (RoomPicture)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.UpdateRoomFieldData(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FieldDataForUpdate)">
            <summary>
            Updates room field data. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="fieldDataForUpdate"></param>
            <returns>FieldData</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.UpdateRoomFieldDataWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FieldDataForUpdate)">
            <summary>
            Updates room field data. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="fieldDataForUpdate"></param>
            <returns>ApiResponse of FieldData</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.UpdateRoomFieldDataAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FieldDataForUpdate)">
            <summary>
            Updates room field data. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="fieldDataForUpdate"></param>
            <returns>Task of FieldData</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomsApi.UpdateRoomFieldDataAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.FieldDataForUpdate)">
            <summary>
            Updates room field data. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId"></param>
            <param name="fieldDataForUpdate"></param>
            <returns>Task of ApiResponse (FieldData)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IRoomTemplatesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomTemplatesApi.GetRoomTemplates(System.String,DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions)">
            <summary>
            Returns all room templates that the active user has access to
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomTemplatesApi.GetRoomTemplatesWithHttpInfo(System.String,DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions)">
            <summary>
            Returns all room templates that the active user has access to
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomTemplatesApi.GetRoomTemplatesAsync(System.String,DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions)">
            <summary>
            Returns all room templates that the active user has access to
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomTemplatesSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IRoomTemplatesApi.GetRoomTemplatesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions)">
            <summary>
            Returns all room templates that the active user has access to
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomTemplatesSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomTemplatesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomTemplatesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.RoomTemplatesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomTemplatesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomTemplatesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomTemplatesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions">
            <summary>
            Returns all room templates that the active user has access to 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions.officeId">
            Get all room templates you have access to for this office. Response includes Company and Region level templates. If onlyAssignable is true, and no officeId is provided, user&#39;s default office is assumed. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions.onlyAssignable">
            Get list of templates you have access to. Default value false. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions.count">
            Number of room templates to return. Defaults to the maximum which is 100. 
        </member>
        <member name="P:DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions.startPosition">
            Position of the first item in the total results. Defaults to 0. 
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplates(System.String,DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions)">
            <summary>
            Returns all room templates that the active user has access to 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>RoomTemplatesSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesWithHttpInfo(System.String,DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions)">
            <summary>
            Returns all room templates that the active user has access to 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of RoomTemplatesSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesAsync(System.String,DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions)">
            <summary>
            Returns all room templates that the active user has access to 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of RoomTemplatesSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.RoomTemplatesApi.GetRoomTemplatesOptions)">
            <summary>
            Returns all room templates that the active user has access to 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (RoomTemplatesSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ISellerDecisionTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ISellerDecisionTypesApi.GetSellerDecisionTypes">
            <summary>
            Retrieves the list of valid seller decision types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ISellerDecisionTypesApi.GetSellerDecisionTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid seller decision types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ISellerDecisionTypesApi.GetSellerDecisionTypesAsync">
            <summary>
            Retrieves the list of valid seller decision types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalSellerDecisionTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ISellerDecisionTypesApi.GetSellerDecisionTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid seller decision types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalSellerDecisionTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.SellerDecisionTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.SellerDecisionTypesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.SellerDecisionTypesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.SellerDecisionTypesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.SellerDecisionTypesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.SellerDecisionTypesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.SellerDecisionTypesApi.GetSellerDecisionTypes">
            <summary>
            Retrieves the list of valid seller decision types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalSellerDecisionTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.SellerDecisionTypesApi.GetSellerDecisionTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid seller decision types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalSellerDecisionTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.SellerDecisionTypesApi.GetSellerDecisionTypesAsync">
            <summary>
            Retrieves the list of valid seller decision types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalSellerDecisionTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.SellerDecisionTypesApi.GetSellerDecisionTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid seller decision types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalSellerDecisionTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ISpecialCircumstanceTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ISpecialCircumstanceTypesApi.GetSpecialCircumstanceTypes">
            <summary>
            Retrieves the list of valid special circumstance types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ISpecialCircumstanceTypesApi.GetSpecialCircumstanceTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid special circumstance types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ISpecialCircumstanceTypesApi.GetSpecialCircumstanceTypesAsync">
            <summary>
            Retrieves the list of valid special circumstance types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalSpecialCircumstanceTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ISpecialCircumstanceTypesApi.GetSpecialCircumstanceTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid special circumstance types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalSpecialCircumstanceTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi.GetSpecialCircumstanceTypes">
            <summary>
            Retrieves the list of valid special circumstance types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalSpecialCircumstanceTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi.GetSpecialCircumstanceTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid special circumstance types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalSpecialCircumstanceTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi.GetSpecialCircumstanceTypesAsync">
            <summary>
            Retrieves the list of valid special circumstance types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalSpecialCircumstanceTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.SpecialCircumstanceTypesApi.GetSpecialCircumstanceTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid special circumstance types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalSpecialCircumstanceTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IStatesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IStatesApi.GetStates">
            <summary>
            Retrieves the list of valid states.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IStatesApi.GetStatesWithHttpInfo">
            <summary>
            Retrieves the list of valid states.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IStatesApi.GetStatesAsync">
            <summary>
            Retrieves the list of valid states.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalStates</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IStatesApi.GetStatesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid states.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalStates)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.StatesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.StatesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.StatesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.StatesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.StatesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.StatesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.StatesApi.GetStates">
            <summary>
            Retrieves the list of valid states. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalStates</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.StatesApi.GetStatesWithHttpInfo">
            <summary>
            Retrieves the list of valid states. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalStates</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.StatesApi.GetStatesAsync">
            <summary>
            Retrieves the list of valid states. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalStates</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.StatesApi.GetStatesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid states. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalStates)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ITaskDateTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskDateTypesApi.GetTaskDateTypes">
            <summary>
            Retrieves the list of valid task date types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskDateTypesApi.GetTaskDateTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid task date types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskDateTypesApi.GetTaskDateTypesAsync">
            <summary>
            Retrieves the list of valid task date types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTaskDateTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskDateTypesApi.GetTaskDateTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid task date types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTaskDateTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.TaskDateTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskDateTypesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.TaskDateTypesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskDateTypesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskDateTypesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskDateTypesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskDateTypesApi.GetTaskDateTypes">
            <summary>
            Retrieves the list of valid task date types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalTaskDateTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskDateTypesApi.GetTaskDateTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid task date types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalTaskDateTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskDateTypesApi.GetTaskDateTypesAsync">
            <summary>
            Retrieves the list of valid task date types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTaskDateTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskDateTypesApi.GetTaskDateTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid task date types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTaskDateTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ITaskListsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.CreateTaskList(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.TaskListForCreate)">
            <summary>
            Add a task list to a room based on a task list template.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID.</param>
            <param name="taskList">Details for task list creation.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.CreateTaskListWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.TaskListForCreate)">
            <summary>
            Add a task list to a room based on a task list template.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID.</param>
            <param name="taskList">Details for task list creation.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.DeleteTaskList(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a task list. If there are attached documents they will remain in the associated room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="taskListId">Task List ID</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.DeleteTaskListWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a task list. If there are attached documents they will remain in the associated room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="taskListId">Task List ID</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.GetTaskLists(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the summary for all viewable task lists in a room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.GetTaskListsWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the summary for all viewable task lists in a room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.CreateTaskListAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.TaskListForCreate)">
            <summary>
            Add a task list to a room based on a task list template.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID.</param>
            <param name="taskList">Details for task list creation.</param>
            <returns>Task of TaskList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.CreateTaskListAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.TaskListForCreate)">
            <summary>
            Add a task list to a room based on a task list template.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID.</param>
            <param name="taskList">Details for task list creation.</param>
            <returns>Task of ApiResponse (TaskList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.DeleteTaskListAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a task list. If there are attached documents they will remain in the associated room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="taskListId">Task List ID</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.DeleteTaskListAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a task list. If there are attached documents they will remain in the associated room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="taskListId">Task List ID</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.GetTaskListsAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the summary for all viewable task lists in a room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID</param>
            <returns>Task of TaskListSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListsApi.GetTaskListsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the summary for all viewable task lists in a room.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID</param>
            <returns>Task of ApiResponse (TaskListSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.TaskListsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.TaskListsApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskListsApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskListsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.CreateTaskList(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.TaskListForCreate)">
            <summary>
            Add a task list to a room based on a task list template. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID.</param>
            <param name="taskList">Details for task list creation.</param>
            <returns>TaskList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.CreateTaskListWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.TaskListForCreate)">
            <summary>
            Add a task list to a room based on a task list template. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID.</param>
            <param name="taskList">Details for task list creation.</param>
            <returns>ApiResponse of TaskList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.CreateTaskListAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.TaskListForCreate)">
            <summary>
            Add a task list to a room based on a task list template. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID.</param>
            <param name="taskList">Details for task list creation.</param>
            <returns>Task of TaskList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.CreateTaskListAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.TaskListForCreate)">
            <summary>
            Add a task list to a room based on a task list template. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID.</param>
            <param name="taskList">Details for task list creation.</param>
            <returns>Task of ApiResponse (TaskList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.DeleteTaskList(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a task list. If there are attached documents they will remain in the associated room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="taskListId">Task List ID</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.DeleteTaskListWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a task list. If there are attached documents they will remain in the associated room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="taskListId">Task List ID</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.DeleteTaskListAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a task list. If there are attached documents they will remain in the associated room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="taskListId">Task List ID</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.DeleteTaskListAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Deletes a task list. If there are attached documents they will remain in the associated room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="taskListId">Task List ID</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.GetTaskLists(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the summary for all viewable task lists in a room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID</param>
            <returns>TaskListSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.GetTaskListsWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the summary for all viewable task lists in a room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID</param>
            <returns>ApiResponse of TaskListSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.GetTaskListsAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the summary for all viewable task lists in a room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID</param>
            <returns>Task of TaskListSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListsApi.GetTaskListsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns the summary for all viewable task lists in a room. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="roomId">Room ID</param>
            <returns>Task of ApiResponse (TaskListSummaryList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ITaskListTemplatesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListTemplatesApi.GetTaskListTemplates(System.String,DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions)">
            <summary>
            Returns all task list templates for the company of the active user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListTemplatesApi.GetTaskListTemplatesWithHttpInfo(System.String,DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions)">
            <summary>
            Returns all task list templates for the company of the active user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListTemplatesApi.GetTaskListTemplatesAsync(System.String,DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions)">
            <summary>
            Returns all task list templates for the company of the active user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of TaskListTemplateList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskListTemplatesApi.GetTaskListTemplatesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions)">
            <summary>
            Returns all task list templates for the company of the active user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (TaskListTemplateList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.TaskListTemplatesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListTemplatesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.TaskListTemplatesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListTemplatesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskListTemplatesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskListTemplatesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions">
            <summary>
            Returns all task list templates for the company of the active user. 
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions.startPosition">
            
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions.count">
            
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplates(System.String,DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions)">
            <summary>
            Returns all task list templates for the company of the active user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>TaskListTemplateList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesWithHttpInfo(System.String,DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions)">
            <summary>
            Returns all task list templates for the company of the active user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of TaskListTemplateList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesAsync(System.String,DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions)">
            <summary>
            Returns all task list templates for the company of the active user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of TaskListTemplateList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.TaskListTemplatesApi.GetTaskListTemplatesOptions)">
            <summary>
            Returns all task list templates for the company of the active user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (TaskListTemplateList)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ITaskResponsibilityTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskResponsibilityTypesApi.GetTaskResponsibilityTypes">
            <summary>
            Retrieves the list of valid task responsibility types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskResponsibilityTypesApi.GetTaskResponsibilityTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid task responsibility types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskResponsibilityTypesApi.GetTaskResponsibilityTypesAsync">
            <summary>
            Retrieves the list of valid task responsibility types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTaskResponsibilityTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskResponsibilityTypesApi.GetTaskResponsibilityTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid task responsibility types.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTaskResponsibilityTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.TaskResponsibilityTypesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskResponsibilityTypesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.TaskResponsibilityTypesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskResponsibilityTypesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskResponsibilityTypesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskResponsibilityTypesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskResponsibilityTypesApi.GetTaskResponsibilityTypes">
            <summary>
            Retrieves the list of valid task responsibility types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalTaskResponsibilityTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskResponsibilityTypesApi.GetTaskResponsibilityTypesWithHttpInfo">
            <summary>
            Retrieves the list of valid task responsibility types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalTaskResponsibilityTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskResponsibilityTypesApi.GetTaskResponsibilityTypesAsync">
            <summary>
            Retrieves the list of valid task responsibility types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTaskResponsibilityTypes</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskResponsibilityTypesApi.GetTaskResponsibilityTypesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid task responsibility types. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTaskResponsibilityTypes)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ITaskStatusesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskStatusesApi.GetTaskStatuses">
            <summary>
            Retrieves the list of valid task statuses.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskStatusesApi.GetTaskStatusesWithHttpInfo">
            <summary>
            Retrieves the list of valid task statuses.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskStatusesApi.GetTaskStatusesAsync">
            <summary>
            Retrieves the list of valid task statuses.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTaskStatuses</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITaskStatusesApi.GetTaskStatusesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid task statuses.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTaskStatuses)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.TaskStatusesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskStatusesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.TaskStatusesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskStatusesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskStatusesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TaskStatusesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskStatusesApi.GetTaskStatuses">
            <summary>
            Retrieves the list of valid task statuses. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalTaskStatuses</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskStatusesApi.GetTaskStatusesWithHttpInfo">
            <summary>
            Retrieves the list of valid task statuses. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalTaskStatuses</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskStatusesApi.GetTaskStatusesAsync">
            <summary>
            Retrieves the list of valid task statuses. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTaskStatuses</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TaskStatusesApi.GetTaskStatusesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid task statuses. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTaskStatuses)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ITimeZonesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITimeZonesApi.GetTimeZones">
            <summary>
            Retrieves the list of valid time zones.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITimeZonesApi.GetTimeZonesWithHttpInfo">
            <summary>
            Retrieves the list of valid time zones.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITimeZonesApi.GetTimeZonesAsync">
            <summary>
            Retrieves the list of valid time zones.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTimeZones</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITimeZonesApi.GetTimeZonesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid time zones.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTimeZones)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.TimeZonesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TimeZonesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.TimeZonesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TimeZonesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TimeZonesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TimeZonesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TimeZonesApi.GetTimeZones">
            <summary>
            Retrieves the list of valid time zones. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalTimeZones</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TimeZonesApi.GetTimeZonesWithHttpInfo">
            <summary>
            Retrieves the list of valid time zones. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalTimeZones</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TimeZonesApi.GetTimeZonesAsync">
            <summary>
            Retrieves the list of valid time zones. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTimeZones</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TimeZonesApi.GetTimeZonesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid time zones. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTimeZones)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.ITransactionSidesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITransactionSidesApi.GetTransactionSides">
            <summary>
            Retrieves the list of valid transaction sides.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITransactionSidesApi.GetTransactionSidesWithHttpInfo">
            <summary>
            Retrieves the list of valid transaction sides.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITransactionSidesApi.GetTransactionSidesAsync">
            <summary>
            Retrieves the list of valid transaction sides.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTransactionSides</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.ITransactionSidesApi.GetTransactionSidesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid transaction sides.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTransactionSides)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.TransactionSidesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TransactionSidesApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.TransactionSidesApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TransactionSidesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TransactionSidesApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.TransactionSidesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.TransactionSidesApi.GetTransactionSides">
            <summary>
            Retrieves the list of valid transaction sides. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GlobalTransactionSides</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TransactionSidesApi.GetTransactionSidesWithHttpInfo">
            <summary>
            Retrieves the list of valid transaction sides. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GlobalTransactionSides</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TransactionSidesApi.GetTransactionSidesAsync">
            <summary>
            Retrieves the list of valid transaction sides. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GlobalTransactionSides</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.TransactionSidesApi.GetTransactionSidesAsyncWithHttpInfo">
            <summary>
            Retrieves the list of valid transaction sides. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GlobalTransactionSides)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.IUsersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.AddUserToOffice(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Adds the user to the designated office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.AddUserToOfficeWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Adds the user to the designated office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.AddUserToRegion(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Adds the user to the designated region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.AddUserToRegionWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Adds the user to the designated region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.GetUser(System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves user information for the user having the given UserId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.GetUserWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves user information for the user having the given UserId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.GetUsers(System.String,DocuSign.Rooms.Api.UsersApi.GetUsersOptions)">
            <summary>
            Gets a paged-list of users.
            </summary>
            <remarks>
            Retrieves a paged-list of Company Users in the User&#39;s company using the given filter and sort parameters.
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.GetUsersWithHttpInfo(System.String,DocuSign.Rooms.Api.UsersApi.GetUsersOptions)">
            <summary>
            Gets a paged-list of users.
            </summary>
            <remarks>
            Retrieves a paged-list of Company Users in the User&#39;s company using the given filter and sort parameters.
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicAdmin(System.String,DocuSign.Rooms.Model.ClassicAdminToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an admin.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicAdminWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicAdminToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an admin.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicAgent(System.String,DocuSign.Rooms.Model.ClassicAgentToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an agent.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicAgentWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicAgentToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an agent.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicManager(System.String,DocuSign.Rooms.Model.ClassicManagerToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as a manager.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicManagerWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicManagerToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as a manager.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteUser(System.String,DocuSign.Rooms.Model.UserToInvite)">
            <summary>
            NON-CLASSIC COMPANY ONLY. Send an invitation to the user or non-user having the given email.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteUserWithHttpInfo(System.String,DocuSign.Rooms.Model.UserToInvite)">
            <summary>
            NON-CLASSIC COMPANY ONLY. Send an invitation to the user or non-user having the given email.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information</param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.LockUser(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.LockedOutDetails)">
            <summary>
            Locks the account of the user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be locked.</param>
            <param name="details">Details containing the reason the user is being locked out</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.LockUserWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.LockedOutDetails)">
            <summary>
            Locks the account of the user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be locked.</param>
            <param name="details">Details containing the reason the user is being locked out</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.ReinviteUser(System.String,System.Nullable{System.Int32})">
            <summary>
            Reinvites the pending user with the given userId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.ReinviteUserWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Reinvites the pending user with the given userId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUser(System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a user from the company.
            </summary>
            <remarks>
            Removes the user. Will fail if the user owns any Rooms.   The rooms will need to be transferred to other agents before removing.
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">Id of the user you wish to remove.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a user from the company.
            </summary>
            <remarks>
            Removes the user. Will fail if the user owns any Rooms.   The rooms will need to be transferred to other agents before removing.
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">Id of the user you wish to remove.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserFromOffice(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Removes the user from the designated office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserFromOfficeWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Removes the user from the designated office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserFromRegion(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Removes the user from the designated region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserFromRegionWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Removes the user from the designated region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.UnlockUser(System.String,System.Nullable{System.Int32})">
            <summary>
            Unlocks the account of the user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be unlocked.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.UnlockUserWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Unlocks the account of the user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be unlocked.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.UpdateUser(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.UserForUpdate)">
            <summary>
            Updates user information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="userForUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.UpdateUserWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.UserForUpdate)">
            <summary>
            Updates user information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="userForUpdate"></param>
            <returns>ApiResponse of </returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.AddUserToOfficeAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Adds the user to the designated office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.AddUserToOfficeAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Adds the user to the designated office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.AddUserToRegionAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Adds the user to the designated region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.AddUserToRegionAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Adds the user to the designated region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.GetUserAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves user information for the user having the given UserId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.GetUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves user information for the user having the given UserId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.GetUsersAsync(System.String,DocuSign.Rooms.Api.UsersApi.GetUsersOptions)">
            <summary>
            Gets a paged-list of users.
            </summary>
            <remarks>
            Retrieves a paged-list of Company Users in the User&#39;s company using the given filter and sort parameters.
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of UserSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.GetUsersAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.UsersApi.GetUsersOptions)">
            <summary>
            Gets a paged-list of users.
            </summary>
            <remarks>
            Retrieves a paged-list of Company Users in the User&#39;s company using the given filter and sort parameters.
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (UserSummaryList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicAdminAsync(System.String,DocuSign.Rooms.Model.ClassicAdminToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an admin.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicAdminAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicAdminToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an admin.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicAgentAsync(System.String,DocuSign.Rooms.Model.ClassicAgentToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an agent.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicAgentAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicAgentToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an agent.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicManagerAsync(System.String,DocuSign.Rooms.Model.ClassicManagerToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as a manager.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteClassicManagerAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicManagerToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as a manager.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteUserAsync(System.String,DocuSign.Rooms.Model.UserToInvite)">
            <summary>
            NON-CLASSIC COMPANY ONLY. Send an invitation to the user or non-user having the given email.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.InviteUserAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.UserToInvite)">
            <summary>
            NON-CLASSIC COMPANY ONLY. Send an invitation to the user or non-user having the given email.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.LockUserAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.LockedOutDetails)">
            <summary>
            Locks the account of the user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be locked.</param>
            <param name="details">Details containing the reason the user is being locked out</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.LockUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.LockedOutDetails)">
            <summary>
            Locks the account of the user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be locked.</param>
            <param name="details">Details containing the reason the user is being locked out</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.ReinviteUserAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Reinvites the pending user with the given userId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.ReinviteUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Reinvites the pending user with the given userId.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a user from the company.
            </summary>
            <remarks>
            Removes the user. Will fail if the user owns any Rooms.   The rooms will need to be transferred to other agents before removing.
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">Id of the user you wish to remove.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a user from the company.
            </summary>
            <remarks>
            Removes the user. Will fail if the user owns any Rooms.   The rooms will need to be transferred to other agents before removing.
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">Id of the user you wish to remove.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserFromOfficeAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Removes the user from the designated office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserFromOfficeAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Removes the user from the designated office.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserFromRegionAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Removes the user from the designated region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.RemoveUserFromRegionAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Removes the user from the designated region.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.UnlockUserAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Unlocks the account of the user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be unlocked.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.UnlockUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Unlocks the account of the user.
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be unlocked.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.UpdateUserAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.UserForUpdate)">
            <summary>
            Updates user information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="userForUpdate"></param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.IUsersApi.UpdateUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.UserForUpdate)">
            <summary>
            Updates user information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="userForUpdate"></param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.UsersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.#ctor(DocuSign.Rooms.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Api.UsersApi"/> class
            using AplClient object
            </summary>
            <param name="aplClient">An instance of AplClient</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.AddUserToOffice(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Adds the user to the designated office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.AddUserToOfficeWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Adds the user to the designated office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.AddUserToOfficeAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Adds the user to the designated office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.AddUserToOfficeAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Adds the user to the designated office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.AddUserToRegion(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Adds the user to the designated region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.AddUserToRegionWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Adds the user to the designated region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.AddUserToRegionAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Adds the user to the designated region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.AddUserToRegionAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Adds the user to the designated region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.GetUser(System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves user information for the user having the given UserId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.GetUserWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves user information for the user having the given UserId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.GetUserAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves user information for the user having the given UserId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.GetUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves user information for the user having the given UserId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Api.UsersApi.GetUsersOptions">
            <summary>
            Gets a paged-list of users. Retrieves a paged-list of Company Users in the User&#39;s company using the given filter and sort parameters.
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.filter">
            Filters by name and email 
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.sort">
            Valid values are &#39;FirstNameAsc&#39;, &#39;FirstNameDesc&#39;, &#39;LastNameAsc&#39;, &#39;LastNameDesc&#39;, &#39;EmailAsc&#39;, &#39;EmailDesc&#39; 
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.defaultOfficeId">
            
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.accessLevel">
            Valid values are &#39;Company&#39;, &#39;Region&#39;, &#39;Office&#39;, &#39;Contributor&#39; 
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.titleId">
            Only valid for classic companies 
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.roleId">
            Only valid for next gen companies 
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.status">
            Valid values are &#39;Active&#39;, &#39;Pending&#39; 
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.lockedOnly">
            
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.startPosition">
            Defaults to 0 
        </member>
        <member name="P:DocuSign.Rooms.Api.UsersApi.GetUsersOptions.count">
            Defaults to 100. Must be less than or equal to 100 
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.GetUsers(System.String,DocuSign.Rooms.Api.UsersApi.GetUsersOptions)">
            <summary>
            Gets a paged-list of users. Retrieves a paged-list of Company Users in the User&#39;s company using the given filter and sort parameters.
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>UserSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.GetUsersWithHttpInfo(System.String,DocuSign.Rooms.Api.UsersApi.GetUsersOptions)">
            <summary>
            Gets a paged-list of users. Retrieves a paged-list of Company Users in the User&#39;s company using the given filter and sort parameters.
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>ApiResponse of UserSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.GetUsersAsync(System.String,DocuSign.Rooms.Api.UsersApi.GetUsersOptions)">
            <summary>
            Gets a paged-list of users. Retrieves a paged-list of Company Users in the User&#39;s company using the given filter and sort parameters.
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of UserSummaryList</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.GetUsersAsyncWithHttpInfo(System.String,DocuSign.Rooms.Api.UsersApi.GetUsersOptions)">
            <summary>
            Gets a paged-list of users. Retrieves a paged-list of Company Users in the User&#39;s company using the given filter and sort parameters.
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="options">Options for modifying the behavior of the function.</param>
            <returns>Task of ApiResponse (UserSummaryList)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicAdmin(System.String,DocuSign.Rooms.Model.ClassicAdminToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an admin. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicAdminWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicAdminToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an admin. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicAdminAsync(System.String,DocuSign.Rooms.Model.ClassicAdminToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an admin. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicAdminAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicAdminToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an admin. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicAgent(System.String,DocuSign.Rooms.Model.ClassicAgentToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an agent. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicAgentWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicAgentToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an agent. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicAgentAsync(System.String,DocuSign.Rooms.Model.ClassicAgentToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an agent. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicAgentAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicAgentToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as an agent. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicManager(System.String,DocuSign.Rooms.Model.ClassicManagerToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as a manager. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicManagerWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicManagerToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as a manager. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicManagerAsync(System.String,DocuSign.Rooms.Model.ClassicManagerToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as a manager. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteClassicManagerAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.ClassicManagerToInvite)">
            <summary>
            CLASSIC COMPANY ONLY. Send an invitation to join the company as a manager. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information.</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteUser(System.String,DocuSign.Rooms.Model.UserToInvite)">
            <summary>
            NON-CLASSIC COMPANY ONLY. Send an invitation to the user or non-user having the given email. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information</param>
            <returns>User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteUserWithHttpInfo(System.String,DocuSign.Rooms.Model.UserToInvite)">
            <summary>
            NON-CLASSIC COMPANY ONLY. Send an invitation to the user or non-user having the given email. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteUserAsync(System.String,DocuSign.Rooms.Model.UserToInvite)">
            <summary>
            NON-CLASSIC COMPANY ONLY. Send an invitation to the user or non-user having the given email. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.InviteUserAsyncWithHttpInfo(System.String,DocuSign.Rooms.Model.UserToInvite)">
            <summary>
            NON-CLASSIC COMPANY ONLY. Send an invitation to the user or non-user having the given email. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>
            <param name="invitee">Invitee information</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.LockUser(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.LockedOutDetails)">
            <summary>
            Locks the account of the user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be locked.</param>
            <param name="details">Details containing the reason the user is being locked out</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.LockUserWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.LockedOutDetails)">
            <summary>
            Locks the account of the user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be locked.</param>
            <param name="details">Details containing the reason the user is being locked out</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.LockUserAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.LockedOutDetails)">
            <summary>
            Locks the account of the user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be locked.</param>
            <param name="details">Details containing the reason the user is being locked out</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.LockUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.LockedOutDetails)">
            <summary>
            Locks the account of the user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be locked.</param>
            <param name="details">Details containing the reason the user is being locked out</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.ReinviteUser(System.String,System.Nullable{System.Int32})">
            <summary>
            Reinvites the pending user with the given userId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.ReinviteUserWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Reinvites the pending user with the given userId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.ReinviteUserAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Reinvites the pending user with the given userId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.ReinviteUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Reinvites the pending user with the given userId. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUser(System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a user from the company. Removes the user. Will fail if the user owns any Rooms.   The rooms will need to be transferred to other agents before removing.
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">Id of the user you wish to remove.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a user from the company. Removes the user. Will fail if the user owns any Rooms.   The rooms will need to be transferred to other agents before removing.
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">Id of the user you wish to remove.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a user from the company. Removes the user. Will fail if the user owns any Rooms.   The rooms will need to be transferred to other agents before removing.
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">Id of the user you wish to remove.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Removes a user from the company. Removes the user. Will fail if the user owns any Rooms.   The rooms will need to be transferred to other agents before removing.
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">Id of the user you wish to remove.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserFromOffice(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Removes the user from the designated office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserFromOfficeWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Removes the user from the designated office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserFromOfficeAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Removes the user from the designated office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserFromOfficeAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Removes the user from the designated office. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedOffice"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserFromRegion(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Removes the user from the designated region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserFromRegionWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Removes the user from the designated region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserFromRegionAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Removes the user from the designated region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.RemoveUserFromRegionAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Removes the user from the designated region. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="designatedRegion"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.UnlockUser(System.String,System.Nullable{System.Int32})">
            <summary>
            Unlocks the account of the user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be unlocked.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.UnlockUserWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Unlocks the account of the user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be unlocked.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.UnlockUserAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Unlocks the account of the user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be unlocked.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.UnlockUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32})">
            <summary>
            Unlocks the account of the user. 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId">User Id of the user attempting to be unlocked.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.UpdateUser(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.UserForUpdate)">
            <summary>
            Updates user information 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="userForUpdate"></param>
            <returns>User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.UpdateUserWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.UserForUpdate)">
            <summary>
            Updates user information 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="userForUpdate"></param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.UpdateUserAsync(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.UserForUpdate)">
            <summary>
            Updates user information 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="userForUpdate"></param>
            <returns>Task of User</returns>
        </member>
        <member name="M:DocuSign.Rooms.Api.UsersApi.UpdateUserAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},DocuSign.Rooms.Model.UserForUpdate)">
            <summary>
            Updates user information 
            </summary>
            <exception cref="T:DocuSign.Rooms.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="accountId"></param>/// <param name="userId"></param>
            <param name="userForUpdate"></param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="T:DocuSign.Rooms.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.InterceptRequest(RestSharp.IRestRequest)">
            <summary>
            Allows for extending request processing for <see cref="T:DocuSign.Rooms.Client.ApiClient"/> generated code.
            </summary>
            <param name="request">The RestSharp request object</param>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.InterceptResponse(RestSharp.IRestRequest,RestSharp.IRestResponse)">
            <summary>
            Allows for extending response processing for <see cref="T:DocuSign.Rooms.Client.ApiClient"/> generated code.
            </summary>
            <param name="request">The RestSharp request object</param>
            <param name="response">The RestSharp response object</param>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.ApiClient" /> class
            with default configuration and base path (https://rooms.docusign.com/restapi).
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.#ctor(DocuSign.Rooms.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.ApiClient" /> class
            with default base path (https://rooms.docusign.com/restapi).
            </summary>
            <param name="config">An instance of Configuration.</param>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.#ctor(System.String,System.Net.WebProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.ApiClient" /> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
            <param name="proxy">An optional WebProxy instance.</param>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.#ctor(System.String,System.String,System.Net.WebProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.ApiClient" /> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
            <param name="oAuthBasePath">The oAuth base path.</param>
            <param name="proxy">An optional WebProxy instance.</param>
        </member>
        <member name="P:DocuSign.Rooms.Client.ApiClient.Configuration">
            <summary>
            Gets or sets the Configuration.
            </summary>
            <value>An instance of the Configuration.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.Dictionary{System.String,System.String},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.Deserialize(System.Byte[],System.Type,System.Collections.Generic.IList{RestSharp.Parameter})">
            <summary>
            DocuSign: Deserialize the byte array into a proper object.
            </summary>
            <param name="content">Byte Araay (e.g. PDF bytes).</param>
            <param name="type">Object type.</param>
            <param name="headers"></param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.Serialize(System.Object,System.String)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <param name="contentType"></param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.SerializeCsvToString(System.Object)">
            <summary>
            SerializeCsvToString - Interim method to Serialize the Request Object to CSV format
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.SerializeCsvToString``1(System.Collections.Generic.List{``0})">
            <summary>
            SerializeCsvToString - Interim method to Serialize the Request Object to CSV format
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            Ref: http://stackoverflow.com/questions/4925718/c-dynamic-runtime-cast
            </summary>
            <param name="source">Object to be casted</param>
            <param name="dest">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            Credit/Ref: http://stackoverflow.com/a/221941/677735
            </summary>
            <param name="input">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="P:DocuSign.Rooms.Client.ApiClient.Proxy">
            <summary>
            Gets or sets the Proxy of ApiClient. Default to null
            </summary>
            <value>Timeout.</value>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.GetAuthorizationUri(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
            <summary>
            Helper method to configure the OAuth accessCode/implicit flow parameters
            </summary>
            <param name="clientId">OAuth2 client ID: Identifies the client making the request.</param>
            <param name="scopes">the list of requested scopes.  Client applications may be scoped to a limited set of system access.</param>
            <param name="redirectUri">this determines where to deliver the response containing the authorization code or access token.</param>
            <param name="responseType">determines the response type of the authorization request.
            <br><i>Note</i>: these response types are mutually exclusive for a client application.
            A public/native client application may only request a response type of "token";
            a private/trusted client application may only request a response type of "code".</br></param>
            <param name="state">Allows for arbitrary state that may be useful to your application.
            The value in this parameter will be round-tripped along with the response so you can make sure it didn't change.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.BuildQueryString(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Builds a QueryString with the given parameters
            </summary>
            <param name="clientId"></param>
            <param name="scopes"></param>
            <param name="redirectUri"></param>
            <param name="responseType"></param>
            <param name="state"></param>
            <returns>Formatted Query String</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.GetOAuthBasePath">
            <summary>
            GetOAuthBasePath sets the basePath for the user account.
            </summary>
            <returns>If the current base path is demo then it sets the demo account as the basePath, else it sets the Production account as the basePath.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.SetBasePath(System.String)">
            <summary>
            Use this method to Set Base Path
            </summary>
            <param name="basePath"></param>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.SetOAuthBasePath(System.String)">
            <summary>
            Use this method to set custom OAuth Base Path.
            </summary>
            <param name="oAuthBasePath">Optional custom base path value. If not provided we will derive it according to the ApiClient basePath value.</param>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.GenerateAccessToken(System.String,System.String,System.String)">
            <summary>
            GenerateAccessToken will exchange the authorization code for an access token and refresh tokens.
            </summary>
            <param name="clientId">OAuth2 client ID: Identifies the client making the request.</param>
            <param name="clientSecret">the secret key you generated when you set up the integration in DocuSign Admin console.</param>
            <param name="code">The authorization code that you received from the <i> GetAuthorizationUri </i> callback.</param>
            <returns> OAuth.OAuthToken object.
            ApiException if the HTTP call status is different than 2xx.
            IOException  if there is a problem while parsing the reponse object.
            </returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.GetUserInfo(System.String)">
            <summary>
            Get User Info method takes the accessToken to retrieve User Account Data.
            </summary>
            <param name="accessToken"></param>
            <returns>The User Info model.</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.CreateRSAKeyFromPem(System.String)">
            <summary>
            Creates an RSA Key from the given PEM key.
            </summary>
            <param name="key"></param>
            <returns>RSACryptoServiceProvider using the "key"</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.RequestJWTUserToken(System.String,System.String,System.String,System.IO.Stream,System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Request JWT User Token
            Configures the current instance of ApiClient with a fresh OAuth JWT access token from DocuSign
            </summary>
            <param name="clientId">DocuSign OAuth Client Id(AKA Integrator Key)</param>
            <param name="userId">DocuSign user Id to be impersonated(This is a UUID)</param>
            <param name="oauthBasePath"> DocuSign OAuth base path
            <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Demo_OAuth_BasePath"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Production_OAuth_BasePath"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Stage_OAuth_BasePath"/>
            <seealso cref="M:DocuSign.Rooms.Client.ApiClient.GetOAuthBasePath" /> <seealso cref="M:DocuSign.Rooms.Client.ApiClient.SetOAuthBasePath(System.String)"/>
            </param>
            <param name="privateKeyStream">The Stream of the RSA private key</param>
            <param name="expiresInHours">Number of hours remaining before the JWT assertion is considered as invalid</param>
            <param name="scopes">Optional. The list of requested scopes may include (but not limited to)
            <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Scope_SIGNATURE"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Scope_IMPERSONATION"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Scope_EXTENDED"/>
            </param>
            <returns>The JWT user token</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.RequestJWTUserToken(System.String,System.String,System.String,System.Byte[],System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Request JWT User Token
            Configures the current instance of ApiClient with a fresh OAuth JWT access token from DocuSign
            </summary>
            <param name="clientId">DocuSign OAuth Client Id(AKA Integrator Key)</param>
            <param name="userId">DocuSign user Id to be impersonated(This is a UUID)</param>
            <param name="oauthBasePath"> DocuSign OAuth base path
            <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Demo_OAuth_BasePath"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Production_OAuth_BasePath"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Stage_OAuth_BasePath"/>
            <seealso cref="M:DocuSign.Rooms.Client.ApiClient.GetOAuthBasePath" /> <seealso cref="M:DocuSign.Rooms.Client.ApiClient.SetOAuthBasePath(System.String)"/>
            </param>
            <param name="privateKeyBytes">The byte contents of the RSA private key</param>
            <param name="expiresInHours">Number of hours remaining before the JWT assertion is considered as invalid</param>
            <param name="scopes">Optional. The list of requested scopes may include (but not limited to) You can also pass any advanced scope.
            <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Scope_SIGNATURE"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Scope_IMPERSONATION"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Scope_EXTENDED"/>
            </param>
            <returns>The JWT user token</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiClient.RequestJWTApplicationToken(System.String,System.String,System.Byte[],System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            *RESERVED FOR PARTNERS* Request JWT Application Token
            </summary>
            <param name="clientId">DocuSign OAuth Client Id(AKA Integrator Key)</param>
            <param name="oauthBasePath"> DocuSign OAuth base path
            <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Demo_OAuth_BasePath"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Production_OAuth_BasePath"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Stage_OAuth_BasePath"/>
            <seealso cref="M:DocuSign.Rooms.Client.ApiClient.GetOAuthBasePath" /> <seealso cref="M:DocuSign.Rooms.Client.ApiClient.SetOAuthBasePath(System.String)"/>
            </param>
            <param name="privateKeyBytes">The byte contents of the RSA private key</param>
            <param name="expiresInHours">Number of hours remaining before the JWT assertion is considered as invalid</param>
            <param name="scopes">Optional. The list of requested scopes may include (but not limited to) You can also pass any advanced scope.
            <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Scope_SIGNATURE"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Scope_IMPERSONATION"/> <see cref="F:DocuSign.Rooms.Client.Auth.OAuth.Scope_EXTENDED"/>
            </param>
            <returns>The JWT application token</returns>
        </member>
        <member name="T:DocuSign.Rooms.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="T:DocuSign.Rooms.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="M:DocuSign.Rooms.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.ApiResponse`1" /> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="T:DocuSign.Rooms.Client.Auth.OAuth.UserInfo.Account">
            <summary>
            Account model with the following properties:
            accountId: the account ID GUID.
            isDefault: whether this is the default account, when the user has access to multiple accounts.
            accountName: the human-readable name of the account.
            baseUri: the base URI associated with this account.
            It also tells which DocuSign data center the account is hosted on.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Client.Auth.OAuth.UserInfo.Account.ToIndentedString(System.Object)">
            Convert the given object to string with each line indented by 4
            spaces (except the first line).
        </member>
        <member name="M:DocuSign.Rooms.Client.Auth.OAuth.UserInfo.Account.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:DocuSign.Rooms.Client.Auth.OAuth.UserInfo.Organization">
            <summary>
            Organization model with the following properties:
            organizationId: the organization ID GUID if DocuSign Org Admin is enabled.
            links: this is list of organization direct links associated with the DocuSign account.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Client.Auth.OAuth.UserInfo.Organization.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:DocuSign.Rooms.Client.Auth.OAuth.UserInfo.Link">
            <summary>
            Link model with the following properties:
            rel: currently the only value is "self".
            href: the direct link of the organization.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Client.Auth.OAuth.UserInfo.Link.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.Auth.OAuth.UserInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:DocuSign.Rooms.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:DocuSign.Rooms.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:DocuSign.Rooms.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="F:DocuSign.Rooms.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:DocuSign.Rooms.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:DocuSign.Rooms.Client.Configuration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.Configuration" /> class
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.Timeout">
            <summary>
            Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="M:DocuSign.Rooms.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="M:DocuSign.Rooms.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:DocuSign.Rooms.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="T:DocuSign.Rooms.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:DocuSign.Rooms.Client.GlobalConfiguration">
            <summary>
            <see cref="T:DocuSign.Rooms.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .swagger-codegen-ignore file.
            </remarks>
        </member>
        <member name="T:DocuSign.Rooms.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Client.IApiAccessor.ApiClient">
            <summary>
            Gets or sets the ApiClient object
            </summary>
            <value>An instance of the ApiClient</value>
        </member>
        <member name="M:DocuSign.Rooms.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time foramt.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.Timeout">
            <summary>
            Gets the HTTP connection timeout (in milliseconds)
            </summary>
            <value>HTTP connection timeout.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:DocuSign.Rooms.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="M:DocuSign.Rooms.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="T:DocuSign.Rooms.Client.SwaggerDateConverter">
            <summary>
            Formatter for 'date' swagger formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Client.SwaggerDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Client.SwaggerDateConverter" /> class.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Model.AccountSummary">
            <summary>
            AccountSummary
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Model.AccountSummary.CompanyVersionEnum">
            <summary>
            Defines CompanyVersion
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.AccountSummary.CompanyVersionEnum.V5">
            <summary>
            Enum V5 for value: v5
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.AccountSummary.CompanyVersionEnum.V6">
            <summary>
            Enum V6 for value: v6
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AccountSummary.CompanyVersion">
            <summary>
            Gets or Sets CompanyVersion
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AccountSummary.CompanyId">
            <summary>
            Gets or Sets CompanyId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AccountSummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AccountSummary.DocuSignAccountGuid">
            <summary>
            Gets or Sets DocuSignAccountGuid
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AccountSummary.DefaultFieldSetId">
            <summary>
            Gets or Sets DefaultFieldSetId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AccountSummary.RequireOfficeLibraryAssignments">
            <summary>
            Gets or Sets RequireOfficeLibraryAssignments
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.AccountSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.AccountSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.AccountSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.AccountSummary.Equals(DocuSign.Rooms.Model.AccountSummary)">
            <summary>
            Returns true if AccountSummary instances are equal
            </summary>
            <param name="other">Instance of AccountSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.AccountSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ActivityType">
            <summary>
            ActivityType
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ActivityType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ActivityType" /> class.
            </summary>
            <param name="ActivityTypeId">ActivityTypeId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ActivityType.ActivityTypeId">
            <summary>
            Gets or Sets ActivityTypeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ActivityType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ActivityType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ActivityType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ActivityType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ActivityType.Equals(DocuSign.Rooms.Model.ActivityType)">
            <summary>
            Returns true if ActivityType instances are equal
            </summary>
            <param name="other">Instance of ActivityType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ActivityType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ApiError">
            <summary>
            ApiError
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ApiError.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ApiError" /> class.
            </summary>
            <param name="ErrorCode">ErrorCode.</param>
            <param name="Message">Message.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ApiError.ErrorCode">
            <summary>
            Gets or Sets ErrorCode
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ApiError.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ApiError.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ApiError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ApiError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ApiError.Equals(DocuSign.Rooms.Model.ApiError)">
            <summary>
            Returns true if ApiError instances are equal
            </summary>
            <param name="other">Instance of ApiError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ApiError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.AssignableRoles">
            <summary>
            AssignableRoles
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.AssignableRoles.#ctor(System.Nullable{System.Int32},System.Collections.Generic.List{DocuSign.Rooms.Model.RoleSummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.AssignableRoles" /> class.
            </summary>
            <param name="CurrentRoleId">CurrentRoleId.</param>
            <param name="Roles">Roles.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.AssignableRoles.CurrentRoleId">
            <summary>
            Gets or Sets CurrentRoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AssignableRoles.Roles">
            <summary>
            Gets or Sets Roles
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AssignableRoles.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AssignableRoles.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AssignableRoles.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AssignableRoles.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.AssignableRoles.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.AssignableRoles.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.AssignableRoles.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.AssignableRoles.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.AssignableRoles.Equals(DocuSign.Rooms.Model.AssignableRoles)">
            <summary>
            Returns true if AssignableRoles instances are equal
            </summary>
            <param name="other">Instance of AssignableRoles to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.AssignableRoles.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ClassicAdminToInvite">
            <summary>
            ClassicAdminToInvite
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAdminToInvite.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ClassicAdminToInvite" /> class.
            </summary>
            <param name="FirstName">FirstName (required).</param>
            <param name="LastName">LastName (required).</param>
            <param name="Email">Email (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicAdminToInvite.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicAdminToInvite.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicAdminToInvite.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAdminToInvite.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAdminToInvite.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAdminToInvite.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAdminToInvite.Equals(DocuSign.Rooms.Model.ClassicAdminToInvite)">
            <summary>
            Returns true if ClassicAdminToInvite instances are equal
            </summary>
            <param name="other">Instance of ClassicAdminToInvite to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAdminToInvite.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ClassicAgentToInvite">
            <summary>
            ClassicAgentToInvite
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAgentToInvite.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ClassicAgentToInvite" /> class.
            </summary>
            <param name="FirstName">FirstName (required).</param>
            <param name="LastName">LastName (required).</param>
            <param name="Email">Email (required).</param>
            <param name="OfficeId">OfficeId (required).</param>
            <param name="ESignPermissionProfileId">Required when the company is tightly bound to an eSign account; otherwise ignored..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicAgentToInvite.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicAgentToInvite.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicAgentToInvite.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicAgentToInvite.OfficeId">
            <summary>
            Gets or Sets OfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicAgentToInvite.ESignPermissionProfileId">
            <summary>
            Required when the company is tightly bound to an eSign account; otherwise ignored.
            </summary>
            <value>Required when the company is tightly bound to an eSign account; otherwise ignored.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAgentToInvite.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAgentToInvite.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAgentToInvite.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAgentToInvite.Equals(DocuSign.Rooms.Model.ClassicAgentToInvite)">
            <summary>
            Returns true if ClassicAgentToInvite instances are equal
            </summary>
            <param name="other">Instance of ClassicAgentToInvite to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicAgentToInvite.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ClassicManagerPermissions">
            <summary>
            ClassicManagerPermissions
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerPermissions.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ClassicManagerPermissions" /> class.
            </summary>
            <param name="IsVisibleInTransactionRooms">IsVisibleInTransactionRooms.</param>
            <param name="CanDeleteCompanyRooms">CanDeleteCompanyRooms.</param>
            <param name="CanDeleteCompanyDocuments">CanDeleteCompanyDocuments.</param>
            <param name="CanManageCompanyRooms">CanManageCompanyRooms.</param>
            <param name="CanManageCompanyAccount">CanManageCompanyAccount.</param>
            <param name="CanManageCompanySharedLibrary">CanManageCompanySharedLibrary.</param>
            <param name="CanManageCompanyMembers">CanManageCompanyMembers.</param>
            <param name="CanCloseCompanyRooms">CanCloseCompanyRooms.</param>
            <param name="CanApproveCompanyChecklists">CanApproveCompanyChecklists.</param>
            <param name="IsCompanySystemAdmin">IsCompanySystemAdmin.</param>
            <param name="IsRegionManager">IsRegionManager.</param>
            <param name="IsOfficeManager">IsOfficeManager.</param>
            <param name="AutoAccessToCompanyRooms">AutoAccessToCompanyRooms.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.IsVisibleInTransactionRooms">
            <summary>
            Gets or Sets IsVisibleInTransactionRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.CanDeleteCompanyRooms">
            <summary>
            Gets or Sets CanDeleteCompanyRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.CanDeleteCompanyDocuments">
            <summary>
            Gets or Sets CanDeleteCompanyDocuments
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.CanManageCompanyRooms">
            <summary>
            Gets or Sets CanManageCompanyRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.CanManageCompanyAccount">
            <summary>
            Gets or Sets CanManageCompanyAccount
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.CanManageCompanySharedLibrary">
            <summary>
            Gets or Sets CanManageCompanySharedLibrary
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.CanManageCompanyMembers">
            <summary>
            Gets or Sets CanManageCompanyMembers
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.CanCloseCompanyRooms">
            <summary>
            Gets or Sets CanCloseCompanyRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.CanApproveCompanyChecklists">
            <summary>
            Gets or Sets CanApproveCompanyChecklists
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.IsCompanySystemAdmin">
            <summary>
            Gets or Sets IsCompanySystemAdmin
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.IsRegionManager">
            <summary>
            Gets or Sets IsRegionManager
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.IsOfficeManager">
            <summary>
            Gets or Sets IsOfficeManager
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerPermissions.AutoAccessToCompanyRooms">
            <summary>
            Gets or Sets AutoAccessToCompanyRooms
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerPermissions.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerPermissions.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerPermissions.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerPermissions.Equals(DocuSign.Rooms.Model.ClassicManagerPermissions)">
            <summary>
            Returns true if ClassicManagerPermissions instances are equal
            </summary>
            <param name="other">Instance of ClassicManagerPermissions to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerPermissions.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ClassicManagerToInvite">
            <summary>
            ClassicManagerToInvite
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Model.ClassicManagerToInvite.AccessLevelEnum">
            <summary>
            Defines AccessLevel
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.ClassicManagerToInvite.AccessLevelEnum.Contributor">
            <summary>
            Enum Contributor for value: Contributor
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.ClassicManagerToInvite.AccessLevelEnum.Office">
            <summary>
            Enum Office for value: Office
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.ClassicManagerToInvite.AccessLevelEnum.Region">
            <summary>
            Enum Region for value: Region
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.ClassicManagerToInvite.AccessLevelEnum.Company">
            <summary>
            Enum Company for value: Company
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.ClassicManagerToInvite.AccessLevelEnum.Admin">
            <summary>
            Enum Admin for value: Admin
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.AccessLevel">
            <summary>
            Gets or Sets AccessLevel
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerToInvite.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{DocuSign.Rooms.Model.ClassicManagerToInvite.AccessLevelEnum},DocuSign.Rooms.Model.ClassicManagerPermissions,System.Collections.Generic.List{System.Nullable{System.Int32}},System.Collections.Generic.List{System.Nullable{System.Int32}},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ClassicManagerToInvite" /> class.
            </summary>
            <param name="FirstName">FirstName (required).</param>
            <param name="LastName">LastName (required).</param>
            <param name="Email">Email (required).</param>
            <param name="DefaultOfficeId">DefaultOfficeId (required).</param>
            <param name="TitleId">TitleId (required).</param>
            <param name="AccessLevel">AccessLevel (required).</param>
            <param name="Permissions">Permissions (required).</param>
            <param name="Offices">Offices.</param>
            <param name="Regions">Regions.</param>
            <param name="ESignPermissionProfileId">Required when the company is tightly bound to an eSign account; otherwise ignored..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.DefaultOfficeId">
            <summary>
            Gets or Sets DefaultOfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.TitleId">
            <summary>
            Gets or Sets TitleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.Permissions">
            <summary>
            Gets or Sets Permissions
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.Offices">
            <summary>
            Gets or Sets Offices
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.Regions">
            <summary>
            Gets or Sets Regions
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClassicManagerToInvite.ESignPermissionProfileId">
            <summary>
            Required when the company is tightly bound to an eSign account; otherwise ignored.
            </summary>
            <value>Required when the company is tightly bound to an eSign account; otherwise ignored.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerToInvite.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerToInvite.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerToInvite.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerToInvite.Equals(DocuSign.Rooms.Model.ClassicManagerToInvite)">
            <summary>
            Returns true if ClassicManagerToInvite instances are equal
            </summary>
            <param name="other">Instance of ClassicManagerToInvite to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClassicManagerToInvite.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ClosingStatus">
            <summary>
            ClosingStatus
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClosingStatus.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ClosingStatus" /> class.
            </summary>
            <param name="ClosingStatusId">ClosingStatusId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClosingStatus.ClosingStatusId">
            <summary>
            Gets or Sets ClosingStatusId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ClosingStatus.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClosingStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClosingStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClosingStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClosingStatus.Equals(DocuSign.Rooms.Model.ClosingStatus)">
            <summary>
            Returns true if ClosingStatus instances are equal
            </summary>
            <param name="other">Instance of ClosingStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ClosingStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ContactSide">
            <summary>
            ContactSide
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ContactSide.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ContactSide" /> class.
            </summary>
            <param name="ContactSideId">ContactSideId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ContactSide.ContactSideId">
            <summary>
            Gets or Sets ContactSideId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ContactSide.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ContactSide.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ContactSide.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ContactSide.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ContactSide.Equals(DocuSign.Rooms.Model.ContactSide)">
            <summary>
            Returns true if ContactSide instances are equal
            </summary>
            <param name="other">Instance of ContactSide to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ContactSide.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Country.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.Country" /> class.
            </summary>
            <param name="CountryId">CountryId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.Country.CountryId">
            <summary>
            Gets or Sets CountryId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Country.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Country.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Country.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Country.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Country.Equals(DocuSign.Rooms.Model.Country)">
            <summary>
            Returns true if Country instances are equal
            </summary>
            <param name="other">Instance of Country to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Country.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Currency.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.Currency" /> class.
            </summary>
            <param name="CurrencyId">CurrencyId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.Currency.CurrencyId">
            <summary>
            Gets or Sets CurrencyId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Currency.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Currency.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Currency.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Currency.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Currency.Equals(DocuSign.Rooms.Model.Currency)">
            <summary>
            Returns true if Currency instances are equal
            </summary>
            <param name="other">Instance of Currency to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Currency.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.CustomData">
            <summary>
            CustomData
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.CustomData.IsRequiredOnCreate">
            <summary>
            Gets or Sets IsRequiredOnCreate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.CustomData.IsRequiredOnSubmit">
            <summary>
            Gets or Sets IsRequiredOnSubmit
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.CustomData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.CustomData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.CustomData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.CustomData.Equals(DocuSign.Rooms.Model.CustomData)">
            <summary>
            Returns true if CustomData instances are equal
            </summary>
            <param name="other">Instance of CustomData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.CustomData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.DeleteEventsBody">
            <summary>
            Model representing the object passed to the delete event endpoint.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DeleteEventsBody.#ctor(System.Nullable{System.Guid},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.DeleteEventsBody" /> class.
            </summary>
            <param name="EventId">Event identifier. If you get it, it can be a shortcut to delete only one event..</param>
            <param name="ClientId">Client identifier of the user that has inserted the event..</param>
            <param name="EventType">Type of the event added to the list of events tied to the transaction..</param>
            <param name="ActorId">Actor identifier. This enables to remove the events only related to a particular actor..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.DeleteEventsBody.EventId">
            <summary>
            Event identifier. If you get it, it can be a shortcut to delete only one event.
            </summary>
            <value>Event identifier. If you get it, it can be a shortcut to delete only one event.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.DeleteEventsBody.ClientId">
            <summary>
            Client identifier of the user that has inserted the event.
            </summary>
            <value>Client identifier of the user that has inserted the event.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.DeleteEventsBody.EventType">
            <summary>
            Type of the event added to the list of events tied to the transaction.
            </summary>
            <value>Type of the event added to the list of events tied to the transaction.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.DeleteEventsBody.ActorId">
            <summary>
            Actor identifier. This enables to remove the events only related to a particular actor.
            </summary>
            <value>Actor identifier. This enables to remove the events only related to a particular actor.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.DeleteEventsBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DeleteEventsBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DeleteEventsBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DeleteEventsBody.Equals(DocuSign.Rooms.Model.DeleteEventsBody)">
            <summary>
            Returns true if DeleteEventsBody instances are equal
            </summary>
            <param name="other">Instance of DeleteEventsBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DeleteEventsBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.DependsOn">
            <summary>
            DependsOn
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DependsOn.ActionType">
            <summary>
            Gets or Sets ActionType
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DependsOn.ParentApiName">
            <summary>
            Gets or Sets ParentApiName
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DependsOn.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DependsOn.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DependsOn.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DependsOn.Equals(DocuSign.Rooms.Model.DependsOn)">
            <summary>
            Returns true if DependsOn instances are equal
            </summary>
            <param name="other">Instance of DependsOn to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DependsOn.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.DesignatedOffice">
            <summary>
            DesignatedOffice
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedOffice.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.DesignatedOffice" /> class.
            </summary>
            <param name="OfficeId">OfficeId (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.DesignatedOffice.OfficeId">
            <summary>
            Gets or Sets OfficeId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedOffice.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedOffice.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedOffice.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedOffice.Equals(DocuSign.Rooms.Model.DesignatedOffice)">
            <summary>
            Returns true if DesignatedOffice instances are equal
            </summary>
            <param name="other">Instance of DesignatedOffice to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedOffice.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.DesignatedRegion">
            <summary>
            DesignatedRegion
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedRegion.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.DesignatedRegion" /> class.
            </summary>
            <param name="RegionId">RegionId (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.DesignatedRegion.RegionId">
            <summary>
            Gets or Sets RegionId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedRegion.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedRegion.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedRegion.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedRegion.Equals(DocuSign.Rooms.Model.DesignatedRegion)">
            <summary>
            Returns true if DesignatedRegion instances are equal
            </summary>
            <param name="other">Instance of DesignatedRegion to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DesignatedRegion.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.Document">
            <summary>
            Document
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Document.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.Document" /> class.
            </summary>
            <param name="Name">Name (required).</param>
            <param name="FolderId">FolderId.</param>
            <param name="Base64Contents">Base64Contents (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.Document.DocumentId">
            <summary>
            Gets or Sets DocumentId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Document.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Document.RoomId">
            <summary>
            Gets or Sets RoomId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Document.OwnerId">
            <summary>
            Gets or Sets OwnerId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Document.Size">
            <summary>
            Gets or Sets Size
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Document.FolderId">
            <summary>
            Gets or Sets FolderId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Document.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Document.IsSigned">
            <summary>
            Gets or Sets IsSigned
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Document.Base64Contents">
            <summary>
            Gets or Sets Base64Contents
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Document.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Document.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Document.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Document.Equals(DocuSign.Rooms.Model.Document)">
            <summary>
            Returns true if Document instances are equal
            </summary>
            <param name="other">Instance of Document to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Document.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.DocumentUser">
            <summary>
            DocumentUser
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUser.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.DocumentUser" /> class.
            </summary>
            <param name="UserId">UserId.</param>
            <param name="DocumentId">DocumentId.</param>
            <param name="Name">Name.</param>
            <param name="HasAccess">HasAccess.</param>
            <param name="CanApproveTask">CanApproveTask.</param>
            <param name="CanAssignToTaskList">CanAssignToTaskList.</param>
            <param name="CanCopy">CanCopy.</param>
            <param name="CanDelete">CanDelete.</param>
            <param name="CanRemoveFromTaskList">CanRemoveFromTaskList.</param>
            <param name="CanRemoveApproval">CanRemoveApproval.</param>
            <param name="CanRename">CanRename.</param>
            <param name="CanShare">CanShare.</param>
            <param name="CanViewActivity">CanViewActivity.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.UserId">
            <summary>
            Gets or Sets UserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.DocumentId">
            <summary>
            Gets or Sets DocumentId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.HasAccess">
            <summary>
            Gets or Sets HasAccess
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.CanApproveTask">
            <summary>
            Gets or Sets CanApproveTask
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.CanAssignToTaskList">
            <summary>
            Gets or Sets CanAssignToTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.CanCopy">
            <summary>
            Gets or Sets CanCopy
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.CanDelete">
            <summary>
            Gets or Sets CanDelete
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.CanRemoveFromTaskList">
            <summary>
            Gets or Sets CanRemoveFromTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.CanRemoveApproval">
            <summary>
            Gets or Sets CanRemoveApproval
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.CanRename">
            <summary>
            Gets or Sets CanRename
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.CanShare">
            <summary>
            Gets or Sets CanShare
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUser.CanViewActivity">
            <summary>
            Gets or Sets CanViewActivity
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUser.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUser.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUser.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUser.Equals(DocuSign.Rooms.Model.DocumentUser)">
            <summary>
            Returns true if DocumentUser instances are equal
            </summary>
            <param name="other">Instance of DocumentUser to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUser.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.DocumentUserForCreate">
            <summary>
            DocumentUserForCreate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUserForCreate.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.DocumentUserForCreate" /> class.
            </summary>
            <param name="UserId">UserId (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.DocumentUserForCreate.UserId">
            <summary>
            Gets or Sets UserId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUserForCreate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUserForCreate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUserForCreate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUserForCreate.Equals(DocuSign.Rooms.Model.DocumentUserForCreate)">
            <summary>
            Returns true if DocumentUserForCreate instances are equal
            </summary>
            <param name="other">Instance of DocumentUserForCreate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.DocumentUserForCreate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ESignAccountRoleSettings">
            <summary>
            ESignAccountRoleSettings
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignAccountRoleSettings.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ESignAccountRoleSettings" /> class.
            </summary>
            <param name="AllowAccountManagement">AllowAccountManagement.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ESignAccountRoleSettings.AllowAccountManagement">
            <summary>
            Gets or Sets AllowAccountManagement
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignAccountRoleSettings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignAccountRoleSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignAccountRoleSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignAccountRoleSettings.Equals(DocuSign.Rooms.Model.ESignAccountRoleSettings)">
            <summary>
            Returns true if ESignAccountRoleSettings instances are equal
            </summary>
            <param name="other">Instance of ESignAccountRoleSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignAccountRoleSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ESignPermissionProfile">
            <summary>
            ESignPermissionProfile
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfile.#ctor(System.String,System.String,DocuSign.Rooms.Model.ESignAccountRoleSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ESignPermissionProfile" /> class.
            </summary>
            <param name="ESignPermissionProfileId">ESignPermissionProfileId.</param>
            <param name="Name">Name.</param>
            <param name="Settings">Settings.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ESignPermissionProfile.ESignPermissionProfileId">
            <summary>
            Gets or Sets ESignPermissionProfileId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ESignPermissionProfile.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ESignPermissionProfile.Settings">
            <summary>
            Gets or Sets Settings
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfile.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfile.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfile.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfile.Equals(DocuSign.Rooms.Model.ESignPermissionProfile)">
            <summary>
            Returns true if ESignPermissionProfile instances are equal
            </summary>
            <param name="other">Instance of ESignPermissionProfile to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfile.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ESignPermissionProfileList">
            <summary>
            ESignPermissionProfileList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ESignPermissionProfileList.PermissionProfiles">
            <summary>
            Gets or Sets PermissionProfiles
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfileList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfileList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfileList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfileList.Equals(DocuSign.Rooms.Model.ESignPermissionProfileList)">
            <summary>
            Returns true if ESignPermissionProfileList instances are equal
            </summary>
            <param name="other">Instance of ESignPermissionProfileList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ESignPermissionProfileList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ExternalFormFillSession">
            <summary>
            ExternalFormFillSession
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ExternalFormFillSession.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSession.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSession.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSession.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSession.Equals(DocuSign.Rooms.Model.ExternalFormFillSession)">
            <summary>
            Returns true if ExternalFormFillSession instances are equal
            </summary>
            <param name="other">Instance of ExternalFormFillSession to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSession.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate">
            <summary>
            ExternalFormFillSessionForCreate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate" /> class.
            </summary>
            <param name="FormId">FormId (required).</param>
            <param name="RoomId">RoomId (required).</param>
            <param name="XFrameAllowedUrl">XFrameAllowedUrl.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate.FormId">
            <summary>
            Gets or Sets FormId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate.RoomId">
            <summary>
            Gets or Sets RoomId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate.XFrameAllowedUrl">
            <summary>
            Gets or Sets XFrameAllowedUrl
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate.Equals(DocuSign.Rooms.Model.ExternalFormFillSessionForCreate)">
            <summary>
            Returns true if ExternalFormFillSessionForCreate instances are equal
            </summary>
            <param name="other">Instance of ExternalFormFillSessionForCreate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.ExternalFormFillSessionForCreate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.Field">
            <summary>
            Field
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Field.FieldId">
            <summary>
            Gets or Sets FieldId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Field.FieldDefinitionId">
            <summary>
            Gets or Sets FieldDefinitionId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Field.Title">
            <summary>
            Gets or Sets Title
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Field.ApiName">
            <summary>
            Gets or Sets ApiName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Field.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Field.Fields">
            <summary>
            Gets or Sets Fields
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Field.Configuration">
            <summary>
            Gets or Sets Configuration
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Field.CustomData">
            <summary>
            Gets or Sets CustomData
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Field.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Field.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Field.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Field.Equals(DocuSign.Rooms.Model.Field)">
            <summary>
            Returns true if Field instances are equal
            </summary>
            <param name="other">Instance of Field to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Field.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FieldConfiguration">
            <summary>
            FieldConfiguration
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldConfiguration.MaxValue">
            <summary>
            Gets or Sets MaxValue
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldConfiguration.MinValue">
            <summary>
            Gets or Sets MinValue
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldConfiguration.MultipleOf">
            <summary>
            Gets or Sets MultipleOf
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldConfiguration.MaxLength">
            <summary>
            Gets or Sets MaxLength
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldConfiguration.MinLength">
            <summary>
            Gets or Sets MinLength
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldConfiguration.Pattern">
            <summary>
            Gets or Sets Pattern
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldConfiguration.IsPublisher">
            <summary>
            Gets or Sets IsPublisher
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldConfiguration.DependsOn">
            <summary>
            Gets or Sets DependsOn
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldConfiguration.Options">
            <summary>
            Gets or Sets Options
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldConfiguration.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldConfiguration.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldConfiguration.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldConfiguration.Equals(DocuSign.Rooms.Model.FieldConfiguration)">
            <summary>
            Returns true if FieldConfiguration instances are equal
            </summary>
            <param name="other">Instance of FieldConfiguration to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldConfiguration.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FieldData">
            <summary>
            FieldData
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldData.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.FieldData" /> class.
            </summary>
            <param name="Data">Data.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldData.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldData.Equals(DocuSign.Rooms.Model.FieldData)">
            <summary>
            Returns true if FieldData instances are equal
            </summary>
            <param name="other">Instance of FieldData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FieldDataForCreate">
            <summary>
            FieldDataForCreate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForCreate.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.FieldDataForCreate" /> class.
            </summary>
            <param name="Data">Data.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldDataForCreate.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForCreate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForCreate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForCreate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForCreate.Equals(DocuSign.Rooms.Model.FieldDataForCreate)">
            <summary>
            Returns true if FieldDataForCreate instances are equal
            </summary>
            <param name="other">Instance of FieldDataForCreate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForCreate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FieldDataForUpdate">
            <summary>
            FieldDataForUpdate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForUpdate.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.FieldDataForUpdate" /> class.
            </summary>
            <param name="Data">Data.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldDataForUpdate.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForUpdate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForUpdate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForUpdate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForUpdate.Equals(DocuSign.Rooms.Model.FieldDataForUpdate)">
            <summary>
            Returns true if FieldDataForUpdate instances are equal
            </summary>
            <param name="other">Instance of FieldDataForUpdate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldDataForUpdate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FieldSet">
            <summary>
            FieldSet
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldSet.FieldSetId">
            <summary>
            Gets or Sets FieldSetId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldSet.Title">
            <summary>
            Gets or Sets Title
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FieldSet.Fields">
            <summary>
            Gets or Sets Fields
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldSet.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldSet.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldSet.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldSet.Equals(DocuSign.Rooms.Model.FieldSet)">
            <summary>
            Returns true if FieldSet instances are equal
            </summary>
            <param name="other">Instance of FieldSet to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FieldSet.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FinancingType">
            <summary>
            FinancingType
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FinancingType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.FinancingType" /> class.
            </summary>
            <param name="FinancingTypeId">FinancingTypeId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.FinancingType.FinancingTypeId">
            <summary>
            Gets or Sets FinancingTypeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FinancingType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FinancingType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FinancingType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FinancingType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FinancingType.Equals(DocuSign.Rooms.Model.FinancingType)">
            <summary>
            Returns true if FinancingType instances are equal
            </summary>
            <param name="other">Instance of FinancingType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FinancingType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormDetails">
            <summary>
            FormDetails
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormDetails.FormId">
            <summary>
            Gets or Sets FormId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormDetails.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormDetails.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormDetails.LastUpdatedDate">
            <summary>
            Gets or Sets LastUpdatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormDetails.AvailableOnDate">
            <summary>
            Gets or Sets AvailableOnDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormDetails.OwnerName">
            <summary>
            Gets or Sets OwnerName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormDetails.Version">
            <summary>
            Gets or Sets Version
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormDetails.NumberOfPages">
            <summary>
            Gets or Sets NumberOfPages
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormDetails.Equals(DocuSign.Rooms.Model.FormDetails)">
            <summary>
            Returns true if FormDetails instances are equal
            </summary>
            <param name="other">Instance of FormDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormForAdd">
            <summary>
            FormForAdd
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormForAdd.#ctor(System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.FormForAdd" /> class.
            </summary>
            <param name="FormId">FormId (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormForAdd.FormId">
            <summary>
            Gets or Sets FormId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormForAdd.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormForAdd.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormForAdd.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormForAdd.Equals(DocuSign.Rooms.Model.FormForAdd)">
            <summary>
            Returns true if FormForAdd instances are equal
            </summary>
            <param name="other">Instance of FormForAdd to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormForAdd.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormGroupForm">
            <summary>
            FormGroupForm
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupForm.FormId">
            <summary>
            Gets or Sets FormId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupForm.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupForm.IsRequired">
            <summary>
            Gets or Sets IsRequired
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupForm.LastUpdatedDate">
            <summary>
            Gets or Sets LastUpdatedDate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupForm.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupForm.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupForm.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupForm.Equals(DocuSign.Rooms.Model.FormGroupForm)">
            <summary>
            Returns true if FormGroupForm instances are equal
            </summary>
            <param name="other">Instance of FormGroupForm to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupForm.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormGroupFormList">
            <summary>
            FormGroupFormList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupFormList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.FormGroupForm},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.FormGroupFormList" /> class.
            </summary>
            <param name="GroupForms">GroupForms.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupFormList.GroupForms">
            <summary>
            Gets or Sets GroupForms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupFormList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupFormList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupFormList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupFormList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupFormList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupFormList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupFormList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupFormList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupFormList.Equals(DocuSign.Rooms.Model.FormGroupFormList)">
            <summary>
            Returns true if FormGroupFormList instances are equal
            </summary>
            <param name="other">Instance of FormGroupFormList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupFormList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormGroupSummary">
            <summary>
            FormGroupSummary
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupSummary.FormGroupId">
            <summary>
            Gets or Sets FormGroupId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupSummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupSummary.FormCount">
            <summary>
            Gets or Sets FormCount
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummary.Equals(DocuSign.Rooms.Model.FormGroupSummary)">
            <summary>
            Returns true if FormGroupSummary instances are equal
            </summary>
            <param name="other">Instance of FormGroupSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormGroupSummaryList">
            <summary>
            FormGroupSummaryList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummaryList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.FormGroupSummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.FormGroupSummaryList" /> class.
            </summary>
            <param name="FormGroups">FormGroups.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupSummaryList.FormGroups">
            <summary>
            Gets or Sets FormGroups
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupSummaryList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupSummaryList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupSummaryList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupSummaryList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormGroupSummaryList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummaryList.Equals(DocuSign.Rooms.Model.FormGroupSummaryList)">
            <summary>
            Returns true if FormGroupSummaryList instances are equal
            </summary>
            <param name="other">Instance of FormGroupSummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormGroupSummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormLibrarySummary">
            <summary>
            FormLibrarySummary
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormLibrarySummary.FormsLibraryId">
            <summary>
            Gets or Sets FormsLibraryId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormLibrarySummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormLibrarySummary.FormCount">
            <summary>
            Gets or Sets FormCount
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummary.Equals(DocuSign.Rooms.Model.FormLibrarySummary)">
            <summary>
            Returns true if FormLibrarySummary instances are equal
            </summary>
            <param name="other">Instance of FormLibrarySummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormLibrarySummaryList">
            <summary>
            FormLibrarySummaryList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummaryList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.FormLibrarySummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.FormLibrarySummaryList" /> class.
            </summary>
            <param name="FormsLibrarySummaries">FormsLibrarySummaries.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormLibrarySummaryList.FormsLibrarySummaries">
            <summary>
            Gets or Sets FormsLibrarySummaries
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormLibrarySummaryList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormLibrarySummaryList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormLibrarySummaryList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormLibrarySummaryList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormLibrarySummaryList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummaryList.Equals(DocuSign.Rooms.Model.FormLibrarySummaryList)">
            <summary>
            Returns true if FormLibrarySummaryList instances are equal
            </summary>
            <param name="other">Instance of FormLibrarySummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormLibrarySummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormSummary">
            <summary>
            FormSummary
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormSummary.LibraryFormId">
            <summary>
            Gets or Sets LibraryFormId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormSummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormSummary.LastUpdatedDate">
            <summary>
            Gets or Sets LastUpdatedDate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummary.Equals(DocuSign.Rooms.Model.FormSummary)">
            <summary>
            Returns true if FormSummary instances are equal
            </summary>
            <param name="other">Instance of FormSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.FormSummaryList">
            <summary>
            FormSummaryList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummaryList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.FormSummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.FormSummaryList" /> class.
            </summary>
            <param name="Forms">Forms.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormSummaryList.Forms">
            <summary>
            Gets or Sets Forms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormSummaryList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormSummaryList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormSummaryList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormSummaryList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.FormSummaryList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummaryList.Equals(DocuSign.Rooms.Model.FormSummaryList)">
            <summary>
            Returns true if FormSummaryList instances are equal
            </summary>
            <param name="other">Instance of FormSummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.FormSummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GenerateProofFileLinkBody">
            <summary>
            Model representing the object passed to the GenerateProofFileLink endpoint.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkBody.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GenerateProofFileLinkBody" /> class.
            </summary>
            <param name="ActorId">Actor identifier.</param>
            <param name="ViewName">ViewName of the WebApp called (required).</param>
            <param name="Authority">Name of the authority requesting these events. The rendering differs according to the accreditation level that this authority has. (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GenerateProofFileLinkBody.ActorId">
            <summary>
            Actor identifier
            </summary>
            <value>Actor identifier</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.GenerateProofFileLinkBody.ViewName">
            <summary>
            ViewName of the WebApp called
            </summary>
            <value>ViewName of the WebApp called</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.GenerateProofFileLinkBody.Authority">
            <summary>
            Name of the authority requesting these events. The rendering differs according to the accreditation level that this authority has.
            </summary>
            <value>Name of the authority requesting these events. The rendering differs according to the accreditation level that this authority has.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkBody.Equals(DocuSign.Rooms.Model.GenerateProofFileLinkBody)">
            <summary>
            Returns true if GenerateProofFileLinkBody instances are equal
            </summary>
            <param name="other">Instance of GenerateProofFileLinkBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GenerateProofFileLinkResponse">
            <summary>
            Definition of the object that is used as a response of a managed token.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkResponse.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GenerateProofFileLinkResponse" /> class.
            </summary>
            <param name="SecretUri">Secret URI generated and containing the managed token..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GenerateProofFileLinkResponse.SecretUri">
            <summary>
            Secret URI generated and containing the managed token.
            </summary>
            <value>Secret URI generated and containing the managed token.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkResponse.Equals(DocuSign.Rooms.Model.GenerateProofFileLinkResponse)">
            <summary>
            Returns true if GenerateProofFileLinkResponse instances are equal
            </summary>
            <param name="other">Instance of GenerateProofFileLinkResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GenerateProofFileLinkResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GetResourceTokenBody">
            <summary>
            Model representing the object passed to the GetResourceToken endpoint.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Model.GetResourceTokenBody.ScopesEnum">
            <summary>
            Gets or Sets Scopes
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.GetResourceTokenBody.ScopesEnum.GetEvents">
            <summary>
            Enum GetEvents for "GetEvents"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.GetResourceTokenBody.ScopesEnum.RedactProofFile">
            <summary>
            Enum RedactProofFile for "RedactProofFile"
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.GetResourceTokenBody.Scopes">
            <summary>
            Scopes assign to the resource token. It represent the action the resource token is bound to. The resource token can be apply to get the events or to redact a proof file.
            </summary>
            <value>Scopes assign to the resource token. It represent the action the resource token is bound to. The resource token can be apply to get the events or to redact a proof file.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenBody.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{DocuSign.Rooms.Model.GetResourceTokenBody.ScopesEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GetResourceTokenBody" /> class.
            </summary>
            <param name="ActorId">Actor identifier.</param>
            <param name="ViewName">ViewName of the WebApp called (required).</param>
            <param name="Authority">Name of the authority requesting these events. The rendering differs according to the accreditation level that this authority has. (required).</param>
            <param name="Scopes">Scopes assign to the resource token. It represent the action the resource token is bound to. The resource token can be apply to get the events or to redact a proof file. (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GetResourceTokenBody.ActorId">
            <summary>
            Actor identifier
            </summary>
            <value>Actor identifier</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.GetResourceTokenBody.ViewName">
            <summary>
            ViewName of the WebApp called
            </summary>
            <value>ViewName of the WebApp called</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.GetResourceTokenBody.Authority">
            <summary>
            Name of the authority requesting these events. The rendering differs according to the accreditation level that this authority has.
            </summary>
            <value>Name of the authority requesting these events. The rendering differs according to the accreditation level that this authority has.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenBody.Equals(DocuSign.Rooms.Model.GetResourceTokenBody)">
            <summary>
            Returns true if GetResourceTokenBody instances are equal
            </summary>
            <param name="other">Instance of GetResourceTokenBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GetResourceTokenResponse">
            <summary>
            Definition of the object that is used as a response of a managed token.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenResponse.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GetResourceTokenResponse" /> class.
            </summary>
            <param name="ResourceToken">Resource token..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GetResourceTokenResponse.ResourceToken">
            <summary>
            Resource token.
            </summary>
            <value>Resource token.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenResponse.Equals(DocuSign.Rooms.Model.GetResourceTokenResponse)">
            <summary>
            Returns true if GetResourceTokenResponse instances are equal
            </summary>
            <param name="other">Instance of GetResourceTokenResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GetResourceTokenResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalActivityTypes">
            <summary>
            GlobalActivityTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalActivityTypes.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.ActivityType})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalActivityTypes" /> class.
            </summary>
            <param name="ActivityTypes">ActivityTypes.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalActivityTypes.ActivityTypes">
            <summary>
            Gets or Sets ActivityTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalActivityTypes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalActivityTypes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalActivityTypes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalActivityTypes.Equals(DocuSign.Rooms.Model.GlobalActivityTypes)">
            <summary>
            Returns true if GlobalActivityTypes instances are equal
            </summary>
            <param name="other">Instance of GlobalActivityTypes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalActivityTypes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalClosingStatuses">
            <summary>
            GlobalClosingStatuses
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalClosingStatuses.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.ClosingStatus})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalClosingStatuses" /> class.
            </summary>
            <param name="ClosingStatuses">ClosingStatuses.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalClosingStatuses.ClosingStatuses">
            <summary>
            Gets or Sets ClosingStatuses
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalClosingStatuses.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalClosingStatuses.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalClosingStatuses.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalClosingStatuses.Equals(DocuSign.Rooms.Model.GlobalClosingStatuses)">
            <summary>
            Returns true if GlobalClosingStatuses instances are equal
            </summary>
            <param name="other">Instance of GlobalClosingStatuses to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalClosingStatuses.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalContactSides">
            <summary>
            GlobalContactSides
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalContactSides.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.ContactSide})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalContactSides" /> class.
            </summary>
            <param name="ContactSides">ContactSides.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalContactSides.ContactSides">
            <summary>
            Gets or Sets ContactSides
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalContactSides.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalContactSides.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalContactSides.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalContactSides.Equals(DocuSign.Rooms.Model.GlobalContactSides)">
            <summary>
            Returns true if GlobalContactSides instances are equal
            </summary>
            <param name="other">Instance of GlobalContactSides to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalContactSides.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalCountries">
            <summary>
            GlobalCountries
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCountries.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.Country})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalCountries" /> class.
            </summary>
            <param name="Countries">Countries.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalCountries.Countries">
            <summary>
            Gets or Sets Countries
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCountries.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCountries.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCountries.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCountries.Equals(DocuSign.Rooms.Model.GlobalCountries)">
            <summary>
            Returns true if GlobalCountries instances are equal
            </summary>
            <param name="other">Instance of GlobalCountries to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCountries.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalCurrencies">
            <summary>
            GlobalCurrencies
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCurrencies.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.Currency})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalCurrencies" /> class.
            </summary>
            <param name="Currencies">Currencies.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalCurrencies.Currencies">
            <summary>
            Gets or Sets Currencies
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCurrencies.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCurrencies.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCurrencies.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCurrencies.Equals(DocuSign.Rooms.Model.GlobalCurrencies)">
            <summary>
            Returns true if GlobalCurrencies instances are equal
            </summary>
            <param name="other">Instance of GlobalCurrencies to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalCurrencies.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalFinancingTypes">
            <summary>
            GlobalFinancingTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalFinancingTypes.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.FinancingType})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalFinancingTypes" /> class.
            </summary>
            <param name="FinancingTypes">FinancingTypes.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalFinancingTypes.FinancingTypes">
            <summary>
            Gets or Sets FinancingTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalFinancingTypes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalFinancingTypes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalFinancingTypes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalFinancingTypes.Equals(DocuSign.Rooms.Model.GlobalFinancingTypes)">
            <summary>
            Returns true if GlobalFinancingTypes instances are equal
            </summary>
            <param name="other">Instance of GlobalFinancingTypes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalFinancingTypes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalOriginsOfLeads">
            <summary>
            GlobalOriginsOfLeads
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalOriginsOfLeads.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.OriginOfLead})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalOriginsOfLeads" /> class.
            </summary>
            <param name="OriginsOfLeads">OriginsOfLeads.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalOriginsOfLeads.OriginsOfLeads">
            <summary>
            Gets or Sets OriginsOfLeads
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalOriginsOfLeads.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalOriginsOfLeads.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalOriginsOfLeads.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalOriginsOfLeads.Equals(DocuSign.Rooms.Model.GlobalOriginsOfLeads)">
            <summary>
            Returns true if GlobalOriginsOfLeads instances are equal
            </summary>
            <param name="other">Instance of GlobalOriginsOfLeads to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalOriginsOfLeads.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalPropertyTypes">
            <summary>
            GlobalPropertyTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalPropertyTypes.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.PropertyType})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalPropertyTypes" /> class.
            </summary>
            <param name="PropertyTypes">PropertyTypes.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalPropertyTypes.PropertyTypes">
            <summary>
            Gets or Sets PropertyTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalPropertyTypes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalPropertyTypes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalPropertyTypes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalPropertyTypes.Equals(DocuSign.Rooms.Model.GlobalPropertyTypes)">
            <summary>
            Returns true if GlobalPropertyTypes instances are equal
            </summary>
            <param name="other">Instance of GlobalPropertyTypes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalPropertyTypes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalRoomContactTypes">
            <summary>
            GlobalRoomContactTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalRoomContactTypes.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.RoomContactType})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalRoomContactTypes" /> class.
            </summary>
            <param name="RoomContactTypes">RoomContactTypes.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalRoomContactTypes.RoomContactTypes">
            <summary>
            Gets or Sets RoomContactTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalRoomContactTypes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalRoomContactTypes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalRoomContactTypes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalRoomContactTypes.Equals(DocuSign.Rooms.Model.GlobalRoomContactTypes)">
            <summary>
            Returns true if GlobalRoomContactTypes instances are equal
            </summary>
            <param name="other">Instance of GlobalRoomContactTypes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalRoomContactTypes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalSellerDecisionTypes">
            <summary>
            GlobalSellerDecisionTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSellerDecisionTypes.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.SellerDecisionType})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalSellerDecisionTypes" /> class.
            </summary>
            <param name="SellerDecisionTypes">SellerDecisionTypes.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalSellerDecisionTypes.SellerDecisionTypes">
            <summary>
            Gets or Sets SellerDecisionTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSellerDecisionTypes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSellerDecisionTypes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSellerDecisionTypes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSellerDecisionTypes.Equals(DocuSign.Rooms.Model.GlobalSellerDecisionTypes)">
            <summary>
            Returns true if GlobalSellerDecisionTypes instances are equal
            </summary>
            <param name="other">Instance of GlobalSellerDecisionTypes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSellerDecisionTypes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes">
            <summary>
            GlobalSpecialCircumstanceTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.SpecialCircumstanceType})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes" /> class.
            </summary>
            <param name="SpecialCircumstanceTypes">SpecialCircumstanceTypes.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes.SpecialCircumstanceTypes">
            <summary>
            Gets or Sets SpecialCircumstanceTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes.Equals(DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes)">
            <summary>
            Returns true if GlobalSpecialCircumstanceTypes instances are equal
            </summary>
            <param name="other">Instance of GlobalSpecialCircumstanceTypes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalSpecialCircumstanceTypes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalStates">
            <summary>
            GlobalStates
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalStates.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.State})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalStates" /> class.
            </summary>
            <param name="States">States.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalStates.States">
            <summary>
            Gets or Sets States
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalStates.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalStates.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalStates.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalStates.Equals(DocuSign.Rooms.Model.GlobalStates)">
            <summary>
            Returns true if GlobalStates instances are equal
            </summary>
            <param name="other">Instance of GlobalStates to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalStates.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalTaskDateTypes">
            <summary>
            GlobalTaskDateTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskDateTypes.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.TaskDateType})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalTaskDateTypes" /> class.
            </summary>
            <param name="TaskDateTypes">TaskDateTypes.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalTaskDateTypes.TaskDateTypes">
            <summary>
            Gets or Sets TaskDateTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskDateTypes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskDateTypes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskDateTypes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskDateTypes.Equals(DocuSign.Rooms.Model.GlobalTaskDateTypes)">
            <summary>
            Returns true if GlobalTaskDateTypes instances are equal
            </summary>
            <param name="other">Instance of GlobalTaskDateTypes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskDateTypes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes">
            <summary>
            GlobalTaskResponsibilityTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.TaskResponsibilityType})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes" /> class.
            </summary>
            <param name="TaskResponsibilityTypes">TaskResponsibilityTypes.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes.TaskResponsibilityTypes">
            <summary>
            Gets or Sets TaskResponsibilityTypes
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes.Equals(DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes)">
            <summary>
            Returns true if GlobalTaskResponsibilityTypes instances are equal
            </summary>
            <param name="other">Instance of GlobalTaskResponsibilityTypes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskResponsibilityTypes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalTaskStatuses">
            <summary>
            GlobalTaskStatuses
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskStatuses.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.TaskStatus})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalTaskStatuses" /> class.
            </summary>
            <param name="TaskStatuses">TaskStatuses.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalTaskStatuses.TaskStatuses">
            <summary>
            Gets or Sets TaskStatuses
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskStatuses.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskStatuses.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskStatuses.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskStatuses.Equals(DocuSign.Rooms.Model.GlobalTaskStatuses)">
            <summary>
            Returns true if GlobalTaskStatuses instances are equal
            </summary>
            <param name="other">Instance of GlobalTaskStatuses to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTaskStatuses.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalTimeZones">
            <summary>
            GlobalTimeZones
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTimeZones.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.TimeZone})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalTimeZones" /> class.
            </summary>
            <param name="TimeZones">TimeZones.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalTimeZones.TimeZones">
            <summary>
            Gets or Sets TimeZones
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTimeZones.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTimeZones.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTimeZones.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTimeZones.Equals(DocuSign.Rooms.Model.GlobalTimeZones)">
            <summary>
            Returns true if GlobalTimeZones instances are equal
            </summary>
            <param name="other">Instance of GlobalTimeZones to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTimeZones.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.GlobalTransactionSides">
            <summary>
            GlobalTransactionSides
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTransactionSides.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.TransactionSide})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.GlobalTransactionSides" /> class.
            </summary>
            <param name="TransactionSides">TransactionSides.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.GlobalTransactionSides.TransactionSides">
            <summary>
            Gets or Sets TransactionSides
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTransactionSides.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTransactionSides.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTransactionSides.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTransactionSides.Equals(DocuSign.Rooms.Model.GlobalTransactionSides)">
            <summary>
            Returns true if GlobalTransactionSides instances are equal
            </summary>
            <param name="other">Instance of GlobalTransactionSides to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.GlobalTransactionSides.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.HttpErrorResponse">
            <summary>
            Object defining an error returned in an http response.
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum">
            <summary>
            The code associated with the error condition.
            </summary>
            <value>The code associated with the error condition.</value>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Internalservererror">
            <summary>
            Enum Internalservererror for "internal_server_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Unauthorized">
            <summary>
            Enum Unauthorized for "unauthorized"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Unauthorizedstrongauthrequired">
            <summary>
            Enum Unauthorizedstrongauthrequired for "unauthorized_strong_auth_required"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Unauthorizedrecentcredsrequired">
            <summary>
            Enum Unauthorizedrecentcredsrequired for "unauthorized_recent_creds_required"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Unauthorizedstrongauthandrecentcredsrequired">
            <summary>
            Enum Unauthorizedstrongauthandrecentcredsrequired for "unauthorized_strong_auth_and_recent_creds_required"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Unauthorizedjwtbearerrequired">
            <summary>
            Enum Unauthorizedjwtbearerrequired for "unauthorized_jwt_bearer_required"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidrequestparametervalue">
            <summary>
            Enum Invalidrequestparametervalue for "invalid_request_parameter_value"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Consentrequired">
            <summary>
            Enum Consentrequired for "consent_required"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Prooflocked">
            <summary>
            Enum Prooflocked for "proof_locked"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userlocked">
            <summary>
            Enum Userlocked for "user_locked"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Notenoughproofsfortfa">
            <summary>
            Enum Notenoughproofsfortfa for "not_enough_proofs_for_tfa"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Nocodesubmitted">
            <summary>
            Enum Nocodesubmitted for "no_code_submitted"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidchannel">
            <summary>
            Enum Invalidchannel for "invalid_channel"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Tfavoiceblocked">
            <summary>
            Enum Tfavoiceblocked for "tfa_voice_blocked"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofalreadyexists">
            <summary>
            Enum Proofalreadyexists for "proof_already_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Toomanyproofs">
            <summary>
            Enum Toomanyproofs for "too_many_proofs"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Toomanyauthenticatorapps">
            <summary>
            Enum Toomanyauthenticatorapps for "too_many_authenticator_apps"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Timespanoutofrange">
            <summary>
            Enum Timespanoutofrange for "timespan_out_of_range"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Cantdeleteprimaryemailproof">
            <summary>
            Enum Cantdeleteprimaryemailproof for "cant_delete_primary_email_proof"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Passwordchangenotallowed">
            <summary>
            Enum Passwordchangenotallowed for "password_change_not_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Emailchangenotallowed">
            <summary>
            Enum Emailchangenotallowed for "email_change_not_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Cannotusesameemail">
            <summary>
            Enum Cannotusesameemail for "cannot_use_same_email"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidcode">
            <summary>
            Enum Invalidcode for "invalid_code"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganization">
            <summary>
            Enum Invalidorganization for "invalid_organization"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganizationname">
            <summary>
            Enum Invalidorganizationname for "invalid_organization_name"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationdefaultaccountcannotbedeleted">
            <summary>
            Enum Organizationdefaultaccountcannotbedeleted for "organization_default_account_cannot_be_deleted"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganizationadmin">
            <summary>
            Enum Invalidorganizationadmin for "invalid_organization_admin"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganizationadminuser">
            <summary>
            Enum Invalidorganizationadminuser for "invalid_organization_admin_user"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationadmincannotremoveself">
            <summary>
            Enum Organizationadmincannotremoveself for "organization_admin_cannot_remove_self"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Adminemailalreadymappedtoorganization">
            <summary>
            Enum Adminemailalreadymappedtoorganization for "admin_email_already_mapped_to_organization"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Adminuseralreadymappedtoorganization">
            <summary>
            Enum Adminuseralreadymappedtoorganization for "admin_user_already_mapped_to_organization"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganizationaccount">
            <summary>
            Enum Invalidorganizationaccount for "invalid_organization_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountalreadymappedtoanorganization">
            <summary>
            Enum Accountalreadymappedtoanorganization for "account_already_mapped_to_an_organization"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidaccount">
            <summary>
            Enum Invalidaccount for "invalid_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidpermissionprofile">
            <summary>
            Enum Invalidpermissionprofile for "invalid_permission_profile"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidmembergroup">
            <summary>
            Enum Invalidmembergroup for "invalid_member_group"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidlanguageculture">
            <summary>
            Enum Invalidlanguageculture for "invalid_language_culture"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidpasswordresetinactiveuser">
            <summary>
            Enum Invalidpasswordresetinactiveuser for "invalid_password_reset_inactive_user"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidpasswordresetfederateduser">
            <summary>
            Enum Invalidpasswordresetfederateduser for "invalid_password_reset_federated_user"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidemailchangealreadyinuse">
            <summary>
            Enum Invalidemailchangealreadyinuse for "invalid_email_change_already_in_use"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidemailchangefederateduser">
            <summary>
            Enum Invalidemailchangefederateduser for "invalid_email_change_federated_user"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidemailchangedomainreserved">
            <summary>
            Enum Invalidemailchangedomainreserved for "invalid_email_change_domain_reserved"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Maxkeysallowed">
            <summary>
            Enum Maxkeysallowed for "max_keys_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invaliduser">
            <summary>
            Enum Invaliduser for "invalid_user"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidgrant">
            <summary>
            Enum Invalidgrant for "invalid_grant"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidrequest">
            <summary>
            Enum Invalidrequest for "invalid_request"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Norecoveryinfofound">
            <summary>
            Enum Norecoveryinfofound for "no_recovery_info_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Usernotfound">
            <summary>
            Enum Usernotfound for "user_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.UserNotFound">
            <summary>
            Enum UserNotFound for "UserNotFound"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidterm">
            <summary>
            Enum Invalidterm for "invalid_term"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidproductionaccountid">
            <summary>
            Enum Invalidproductionaccountid for "invalid_production_account_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Productionaccountidnotadmin">
            <summary>
            Enum Productionaccountidnotadmin for "production_account_id_not_admin"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Envelopenotsent">
            <summary>
            Enum Envelopenotsent for "envelope_not_sent"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Passwordchangevalidationfailed">
            <summary>
            Enum Passwordchangevalidationfailed for "password_change_validation_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Passwordvalidationquestionscount">
            <summary>
            Enum Passwordvalidationquestionscount for "password_validation_questions_count"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Passwordvalidationcomplexity">
            <summary>
            Enum Passwordvalidationcomplexity for "password_validation_complexity"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Passwordvalidationhistory">
            <summary>
            Enum Passwordvalidationhistory for "password_validation_history"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Passwordvalidationbanned">
            <summary>
            Enum Passwordvalidationbanned for "password_validation_banned"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Ssonotallowed">
            <summary>
            Enum Ssonotallowed for "sso_not_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Usernameemailawaitingactivation">
            <summary>
            Enum Usernameemailawaitingactivation for "username_email_awaiting_activation"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidemailaddress">
            <summary>
            Enum Invalidemailaddress for "invalid_email_address"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidsendactivationrequest">
            <summary>
            Enum Invalidsendactivationrequest for "invalid_send_activation_request"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganizationdefaultaccount">
            <summary>
            Enum Invalidorganizationdefaultaccount for "invalid_organization_default_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Signupinvalidinvitetoken">
            <summary>
            Enum Signupinvalidinvitetoken for "signup_invalid_invite_token"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invitenotenabledforclient">
            <summary>
            Enum Invitenotenabledforclient for "invite_not_enabled_for_client"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Usernameemailalreadyexists">
            <summary>
            Enum Usernameemailalreadyexists for "username_email_already_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.IdentityProviderFriendlyNameAlreadyInUse">
            <summary>
            Enum IdentityProviderFriendlyNameAlreadyInUse for "IdentityProviderFriendlyNameAlreadyInUse"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.IdentityProviderIssuerAlreadyInUse">
            <summary>
            Enum IdentityProviderIssuerAlreadyInUse for "IdentityProviderIssuerAlreadyInUse"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.IdentityProviderInsertFailed">
            <summary>
            Enum IdentityProviderInsertFailed for "IdentityProviderInsertFailed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invaliduserdefaultaccount">
            <summary>
            Enum Invaliduserdefaultaccount for "invalid_user_default_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Maxmembersreached">
            <summary>
            Enum Maxmembersreached for "max_members_reached"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidlocale">
            <summary>
            Enum Invalidlocale for "invalid_locale"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.OrganizationReservedDomainVerifyFailed">
            <summary>
            Enum OrganizationReservedDomainVerifyFailed for "OrganizationReservedDomainVerifyFailed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.OrganizationInvalid">
            <summary>
            Enum OrganizationInvalid for "OrganizationInvalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.OrganizationReservedDomainInvalidHostName">
            <summary>
            Enum OrganizationReservedDomainInvalidHostName for "OrganizationReservedDomainInvalidHostName"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.OrganizationReservedDomainInsertFailed">
            <summary>
            Enum OrganizationReservedDomainInsertFailed for "OrganizationReservedDomainInsertFailed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.OrganizationReservedDomainHostNameMismatch">
            <summary>
            Enum OrganizationReservedDomainHostNameMismatch for "OrganizationReservedDomainHostNameMismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.OrganizationReservedDomainInvalid">
            <summary>
            Enum OrganizationReservedDomainInvalid for "OrganizationReservedDomainInvalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.OrganizationReservedDomainNotFound">
            <summary>
            Enum OrganizationReservedDomainNotFound for "OrganizationReservedDomainNotFound"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.OrganizationOrganizationReservedDomainMismatch">
            <summary>
            Enum OrganizationOrganizationReservedDomainMismatch for "OrganizationOrganizationReservedDomainMismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.InvalidModel">
            <summary>
            Enum InvalidModel for "InvalidModel"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.ClientApplicationMaxReached">
            <summary>
            Enum ClientApplicationMaxReached for "ClientApplicationMaxReached"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.ClientApplicationInsertFailed">
            <summary>
            Enum ClientApplicationInsertFailed for "ClientApplicationInsertFailed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.ClientApplicationDeleteFailed">
            <summary>
            Enum ClientApplicationDeleteFailed for "ClientApplicationDeleteFailed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.IdentityProviderInvalid">
            <summary>
            Enum IdentityProviderInvalid for "IdentityProviderInvalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.IdentityProviderCertificateInvalid">
            <summary>
            Enum IdentityProviderCertificateInvalid for "IdentityProviderCertificateInvalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.IdentityProviderCertificateMismatch">
            <summary>
            Enum IdentityProviderCertificateMismatch for "IdentityProviderCertificateMismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.IdentityProviderNotFound">
            <summary>
            Enum IdentityProviderNotFound for "IdentityProviderNotFound"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.OrganizationIdentityProviderMismatch">
            <summary>
            Enum OrganizationIdentityProviderMismatch for "OrganizationIdentityProviderMismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Missingidentityproviderids">
            <summary>
            Enum Missingidentityproviderids for "missing_identity_provider_ids"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.AppReviewJobNotFound">
            <summary>
            Enum AppReviewJobNotFound for "AppReviewJobNotFound"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.AppReviewJobInsertFailed">
            <summary>
            Enum AppReviewJobInsertFailed for "AppReviewJobInsertFailed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.AppReviewJobExpired">
            <summary>
            Enum AppReviewJobExpired for "AppReviewJobExpired"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.ReactivationOfRedundantMembership">
            <summary>
            Enum ReactivationOfRedundantMembership for "ReactivationOfRedundantMembership"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancepoolinternalservererror">
            <summary>
            Enum Appliancepoolinternalservererror for "appliance_pool_internal_server_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Cannotdeletereferencedappliancepool">
            <summary>
            Enum Cannotdeletereferencedappliancepool for "cannot_delete_referenced_appliance_pool"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Cannotdeletelastappliance">
            <summary>
            Enum Cannotdeletelastappliance for "cannot_delete_last_appliance"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancetypemismatch">
            <summary>
            Enum Appliancetypemismatch for "appliance_type_mismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidapplianceid">
            <summary>
            Enum Invalidapplianceid for "invalid_appliance_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancepoolidmismatch">
            <summary>
            Enum Appliancepoolidmismatch for "appliance_pool_id_mismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancepoolidinvalid">
            <summary>
            Enum Appliancepoolidinvalid for "appliance_pool_id_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationidmismatch">
            <summary>
            Enum Organizationidmismatch for "organization_id_mismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidappliancetype">
            <summary>
            Enum Invalidappliancetype for "invalid_appliance_type"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Notlegacyaccount">
            <summary>
            Enum Notlegacyaccount for "not_legacy_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountalreadylinked">
            <summary>
            Enum Accountalreadylinked for "account_already_linked"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Noapplianceinpool">
            <summary>
            Enum Noapplianceinpool for "no_appliance_in_pool"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancetypeendpointmismatch">
            <summary>
            Enum Appliancetypeendpointmismatch for "appliance_type_endpoint_mismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidappliancestatus">
            <summary>
            Enum Invalidappliancestatus for "invalid_appliance_status"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganizationid">
            <summary>
            Enum Invalidorganizationid for "invalid_organization_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Applianceadderror">
            <summary>
            Enum Applianceadderror for "appliance_add_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Applianceupdateerror">
            <summary>
            Enum Applianceupdateerror for "appliance_update_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancegetlegacyerror">
            <summary>
            Enum Appliancegetlegacyerror for "appliance_get_legacy_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancegetpoolsummaryerror">
            <summary>
            Enum Appliancegetpoolsummaryerror for "appliance_get_pool_summary_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancehealthcheckerror">
            <summary>
            Enum Appliancehealthcheckerror for "appliance_health_check_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Applianceaccounthasusedpoolerror">
            <summary>
            Enum Applianceaccounthasusedpoolerror for "appliance_account_has_used_pool_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Useridentitynotfound">
            <summary>
            Enum Useridentitynotfound for "user_identity_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partnernotfound">
            <summary>
            Enum Partnernotfound for "partner_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidplanid">
            <summary>
            Enum Invalidplanid for "invalid_plan_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invaliddistributorcode">
            <summary>
            Enum Invaliddistributorcode for "invalid_distributor_code"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidaccountname">
            <summary>
            Enum Invalidaccountname for "invalid_account_name"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Createaccounterror">
            <summary>
            Enum Createaccounterror for "create_account_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Ordersearchinvalid">
            <summary>
            Enum Ordersearchinvalid for "order_search_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidaccountid">
            <summary>
            Enum Invalidaccountid for "invalid_account_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidaccountaddress">
            <summary>
            Enum Invalidaccountaddress for "invalid_account_address"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidaccountadminuser">
            <summary>
            Enum Invalidaccountadminuser for "invalid_account_admin_user"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partneraccountuserexists">
            <summary>
            Enum Partneraccountuserexists for "partner_account_user_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partneraccountemailreserved">
            <summary>
            Enum Partneraccountemailreserved for "partner_account_email_reserved"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partneraccountdomainmanagedbyidentityprovider">
            <summary>
            Enum Partneraccountdomainmanagedbyidentityprovider for "partner_account_domain_managed_by_identity_provider"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partneraccountemailhasfreetrial">
            <summary>
            Enum Partneraccountemailhasfreetrial for "partner_account_email_has_free_trial"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partneraccounterror">
            <summary>
            Enum Partneraccounterror for "partner_account_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountnotassociatedwithpartner">
            <summary>
            Enum Accountnotassociatedwithpartner for "account_not_associated_with_partner"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountnotfound">
            <summary>
            Enum Accountnotfound for "account_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountclosed">
            <summary>
            Enum Accountclosed for "account_closed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partnerbillingeventnotfound">
            <summary>
            Enum Partnerbillingeventnotfound for "partner_billing_event_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partnereventnotfound">
            <summary>
            Enum Partnereventnotfound for "partner_event_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidpartnerid">
            <summary>
            Enum Invalidpartnerid for "invalid_partner_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalideventtype">
            <summary>
            Enum Invalideventtype for "invalid_event_type"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidstatus">
            <summary>
            Enum Invalidstatus for "invalid_status"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidretrycount">
            <summary>
            Enum Invalidretrycount for "invalid_retry_count"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partneridcannotbeupdated">
            <summary>
            Enum Partneridcannotbeupdated for "partner_id_cannot_be_updated"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Eventtypecannotbeupdated">
            <summary>
            Enum Eventtypecannotbeupdated for "event_type_cannot_be_updated"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Eventdatecannotbeupdated">
            <summary>
            Enum Eventdatecannotbeupdated for "event_date_cannot_be_updated"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Eventtracetokencannotbeupdated">
            <summary>
            Enum Eventtracetokencannotbeupdated for "event_trace_token_cannot_be_updated"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Eventcorrelationidcannotbeupdated">
            <summary>
            Enum Eventcorrelationidcannotbeupdated for "event_correlation_id_cannot_be_updated"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Eventpropertiescannotbeupdated">
            <summary>
            Enum Eventpropertiescannotbeupdated for "event_properties_cannot_be_updated"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Eventpropertiescannotbeadded">
            <summary>
            Enum Eventpropertiescannotbeadded for "event_properties_cannot_be_added"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidclientid">
            <summary>
            Enum Invalidclientid for "invalid_client_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Clientnotfound">
            <summary>
            Enum Clientnotfound for "client_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Plannotfound">
            <summary>
            Enum Plannotfound for "plan_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partnerhasnoplans">
            <summary>
            Enum Partnerhasnoplans for "partner_has_no_plans"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Plannotsupported">
            <summary>
            Enum Plannotsupported for "plan_not_supported"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidrolename">
            <summary>
            Enum Invalidrolename for "invalid_role_name"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Rolenotfound">
            <summary>
            Enum Rolenotfound for "role_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidpartnername">
            <summary>
            Enum Invalidpartnername for "invalid_partner_name"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partnernamenotfound">
            <summary>
            Enum Partnernamenotfound for "partner_name_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invaliduserid">
            <summary>
            Enum Invaliduserid for "invalid_user_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidroleid">
            <summary>
            Enum Invalidroleid for "invalid_role_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidrole">
            <summary>
            Enum Invalidrole for "invalid_role"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partneridmismatch">
            <summary>
            Enum Partneridmismatch for "partner_id_mismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidaccountseats">
            <summary>
            Enum Invalidaccountseats for "invalid_account_seats"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Duplicateaccount">
            <summary>
            Enum Duplicateaccount for "duplicate_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidaddress">
            <summary>
            Enum Invalidaddress for "invalid_address"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidcountry">
            <summary>
            Enum Invalidcountry for "invalid_country"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidstateprovince">
            <summary>
            Enum Invalidstateprovince for "invalid_state_province"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidplanconfiguration">
            <summary>
            Enum Invalidplanconfiguration for "invalid_plan_configuration"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidproductrateplan">
            <summary>
            Enum Invalidproductrateplan for "invalid_product_rate_plan"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidincludedseats">
            <summary>
            Enum Invalidincludedseats for "invalid_included_seats"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganizationpermission">
            <summary>
            Enum Invalidorganizationpermission for "invalid_organization_permission"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidcancellationreason">
            <summary>
            Enum Invalidcancellationreason for "invalid_cancellation_reason"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Cancellationdatenotset">
            <summary>
            Enum Cancellationdatenotset for "cancellation_date_not_set"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Directoryprovidernotfound">
            <summary>
            Enum Directoryprovidernotfound for "directory_provider_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Directoryproviderfeaturealreadyinuse">
            <summary>
            Enum Directoryproviderfeaturealreadyinuse for "directory_provider_feature_already_in_use"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Directoryprovideralreadyactivated">
            <summary>
            Enum Directoryprovideralreadyactivated for "directory_provider_already_activated"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Directoryproviderorganizationentitlementisnotallowed">
            <summary>
            Enum Directoryproviderorganizationentitlementisnotallowed for "directory_provider_organization_entitlement_is_not_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidazureadmin">
            <summary>
            Enum Invalidazureadmin for "invalid_azure_admin"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidquery">
            <summary>
            Enum Invalidquery for "invalid_query"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganizationdelegatedadmin">
            <summary>
            Enum Invalidorganizationdelegatedadmin for "invalid_organization_delegated_admin"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Delegatedadminalreadyexists">
            <summary>
            Enum Delegatedadminalreadyexists for "delegated_admin_already_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Insufficientorganizationdelegatedpermission">
            <summary>
            Enum Insufficientorganizationdelegatedpermission for "insufficient_organization_delegated_permission"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokennotfound">
            <summary>
            Enum Managedtokennotfound for "managed_token_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokenupdateblocked">
            <summary>
            Enum Managedtokenupdateblocked for "managed_token_update_blocked"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokenupdatenotpersisted">
            <summary>
            Enum Managedtokenupdatenotpersisted for "managed_token_update_notpersisted"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokenredemptionfailure">
            <summary>
            Enum Managedtokenredemptionfailure for "managed_token_redemption_failure"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokenalreadyexists">
            <summary>
            Enum Managedtokenalreadyexists for "managed_token_already_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokenmismatchedsubjecttype">
            <summary>
            Enum Managedtokenmismatchedsubjecttype for "managed_token_mismatched_subject_type"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokenexpirationinpast">
            <summary>
            Enum Managedtokenexpirationinpast for "managed_token_expiration_in_past"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokeninvalidexternalclaims">
            <summary>
            Enum Managedtokeninvalidexternalclaims for "managed_token_invalid_externalclaims"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokenresourcestoolarge">
            <summary>
            Enum Managedtokenresourcestoolarge for "managed_token_resources_too_large"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Redirecturinotregistered">
            <summary>
            Enum Redirecturinotregistered for "redirect_uri_not_registered"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Scopesinvalid">
            <summary>
            Enum Scopesinvalid for "scopes_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Nonuserbasedtoken">
            <summary>
            Enum Nonuserbasedtoken for "non_userbased_token"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinvitenotfound">
            <summary>
            Enum Userinvitenotfound for "userinvite_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviteinvalidtoken">
            <summary>
            Enum Userinviteinvalidtoken for "userinvite_invalid_token"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviteinvalidresponsetype">
            <summary>
            Enum Userinviteinvalidresponsetype for "userinvite_invalid_response_type"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviteinvalidemail">
            <summary>
            Enum Userinviteinvalidemail for "userinvite_invalid_email"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokenloadfailed">
            <summary>
            Enum Managedtokenloadfailed for "managedtoken_load_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokencreatefailed">
            <summary>
            Enum Managedtokencreatefailed for "managedtoken_create_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Managedtokenrevokefailed">
            <summary>
            Enum Managedtokenrevokefailed for "managedtoken_revoke_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Resourcetokenredeemfailed">
            <summary>
            Enum Resourcetokenredeemfailed for "resourcetoken_redeem_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Servicetokenloadfailed">
            <summary>
            Enum Servicetokenloadfailed for "servicetoken_load_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinvitealreadyexists">
            <summary>
            Enum Userinvitealreadyexists for "userinvite_already_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviteunmanagedmembershipnotallowed">
            <summary>
            Enum Userinviteunmanagedmembershipnotallowed for "userinvite_unmanaged_membership_not_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviteaccountnotfound">
            <summary>
            Enum Userinviteaccountnotfound for "userinvite_account_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviteusermismatch">
            <summary>
            Enum Userinviteusermismatch for "userinvite_user_mismatch"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviteaccountnotactive">
            <summary>
            Enum Userinviteaccountnotactive for "userinvite_account_not_active"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviteusernotfound">
            <summary>
            Enum Userinviteusernotfound for "userinvite_user_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviteinvaliduseselection">
            <summary>
            Enum Userinviteinvaliduseselection for "userinvite_invalid_use_selection"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinvitemembershipalreadyexists">
            <summary>
            Enum Userinvitemembershipalreadyexists for "userinvite_membership_already_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinvitebadrequest">
            <summary>
            Enum Userinvitebadrequest for "userinvite_bad_request"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Userinviterequestsecreturinotenabled">
            <summary>
            Enum Userinviterequestsecreturinotenabled for "userinvite_request_secret_uri_not_enabled"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Signupstatetoolarge">
            <summary>
            Enum Signupstatetoolarge for "signup_state_too_large"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Signupinvalidlocale">
            <summary>
            Enum Signupinvalidlocale for "signup_invalid_locale"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Toomanytokensperresourceid">
            <summary>
            Enum Toomanytokensperresourceid for "too_many_tokens_per_resource_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Redirecturiusedforexternalclaims">
            <summary>
            Enum Redirecturiusedforexternalclaims for "redirect_uri_used_for_external_claims"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidaccountstatusforaction">
            <summary>
            Enum Invalidaccountstatusforaction for "invalid_account_status_for_action"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Maxauditlogpagesizeexceeded">
            <summary>
            Enum Maxauditlogpagesizeexceeded for "max_audit_log_page_size_exceeded"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidauditlogpagingrequest">
            <summary>
            Enum Invalidauditlogpagingrequest for "invalid_audit_log_paging_request"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Addressdoesnotexist">
            <summary>
            Enum Addressdoesnotexist for "address_does_not_exist"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidusername">
            <summary>
            Enum Invalidusername for "invalid_user_name"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invaliduserstatus">
            <summary>
            Enum Invaliduserstatus for "invalid_user_status"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partnermissingproperties">
            <summary>
            Enum Partnermissingproperties for "partner_missing_properties"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partnercustomerinvalidlicenseinformation">
            <summary>
            Enum Partnercustomerinvalidlicenseinformation for "partner_customer_invalid_license_information"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partnerlicensecallbackfailed">
            <summary>
            Enum Partnerlicensecallbackfailed for "partner_license_callback_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partnercertificatecallbackfailed">
            <summary>
            Enum Partnercertificatecallbackfailed for "partner_certificate_callback_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Partneroauthcallbackfailed">
            <summary>
            Enum Partneroauthcallbackfailed for "partner_oauth_callback_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidnotificationtype">
            <summary>
            Enum Invalidnotificationtype for "invalid_notification_type"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invaliddefaultaccountid">
            <summary>
            Enum Invaliddefaultaccountid for "invalid_default_account_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Usernotamemberofaccount">
            <summary>
            Enum Usernotamemberofaccount for "user_not_a_member_of_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexportrequestspending">
            <summary>
            Enum Organizationexportrequestspending for "organization_export_requests_pending"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexporttypeinvalid">
            <summary>
            Enum Organizationexporttypeinvalid for "organization_export_type_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexportrequestnotfound">
            <summary>
            Enum Organizationexportrequestnotfound for "organization_export_request_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexporttaskprocessingtimeout">
            <summary>
            Enum Organizationexporttaskprocessingtimeout for "organization_export_task_processing_timeout"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexporttaskqueuedtimeout">
            <summary>
            Enum Organizationexporttaskqueuedtimeout for "organization_export_task_queued_timeout"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexporttaskmaxallowed">
            <summary>
            Enum Organizationexporttaskmaxallowed for "organization_export_task_max_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexporttaskinvalidresultsetstorage">
            <summary>
            Enum Organizationexporttaskinvalidresultsetstorage for "organization_export_task_invalid_resultsetstorage"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportnotfound">
            <summary>
            Enum Organizationimportnotfound for "organization_import_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportbadrequestheader">
            <summary>
            Enum Organizationimportbadrequestheader for "organization_import_bad_request_header"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportbadcsvcontent">
            <summary>
            Enum Organizationimportbadcsvcontent for "organization_import_bad_csv_content"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalididrequest">
            <summary>
            Enum Invalididrequest for "invalid_id_request"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalideidrequest">
            <summary>
            Enum Invalideidrequest for "invalid_eid_request"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexporttasknotfound">
            <summary>
            Enum Organizationexporttasknotfound for "organization_export_task_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofservicevalidationmodelnotfound">
            <summary>
            Enum Proofservicevalidationmodelnotfound for "proof_service_validation_model_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportprocessingtimeout">
            <summary>
            Enum Organizationimportprocessingtimeout for "organization_import_processing_timeout"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceinvalidmodeltype">
            <summary>
            Enum Proofserviceinvalidmodeltype for "proof_service_invalid_model_type"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceprooffilenotexists">
            <summary>
            Enum Proofserviceprooffilenotexists for "proof_service_proof_file_not_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceprooffilebadowner">
            <summary>
            Enum Proofserviceprooffilebadowner for "proof_service_proof_file_bad_owner"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofservicemodelvalidationfailure">
            <summary>
            Enum Proofservicemodelvalidationfailure for "proof_service_model_validation_failure"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofservicerequestentitytoolarge">
            <summary>
            Enum Proofservicerequestentitytoolarge for "proof_service_request_entity_too_large"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceunreadablepayload">
            <summary>
            Enum Proofserviceunreadablepayload for "proof_service_unreadable_payload"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceviewschemainvalid">
            <summary>
            Enum Proofserviceviewschemainvalid for "proof_service_view_schema_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofservicefrontviewnotexists">
            <summary>
            Enum Proofservicefrontviewnotexists for "proof_service_front_view_not_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceviewschemanotfound">
            <summary>
            Enum Proofserviceviewschemanotfound for "proof_service_view_schema_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceeventnotfound">
            <summary>
            Enum Proofserviceeventnotfound for "proof_service_event_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceeventmedianotfound">
            <summary>
            Enum Proofserviceeventmedianotfound for "proof_service_event_media_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceeventmediaunauthorized">
            <summary>
            Enum Proofserviceeventmediaunauthorized for "proof_service_event_media_unauthorized"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceerror">
            <summary>
            Enum Proofserviceerror for "proof_service_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceprooffileduplicate">
            <summary>
            Enum Proofserviceprooffileduplicate for "proof_service_proof_file_duplicate"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceschemaconflict">
            <summary>
            Enum Proofserviceschemaconflict for "proof_service_schema_conflict"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofserviceviewconflict">
            <summary>
            Enum Proofserviceviewconflict for "proof_service_view_conflict"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Forbidden">
            <summary>
            Enum Forbidden for "forbidden"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidphotoidrequest">
            <summary>
            Enum Invalidphotoidrequest for "invalid_photoid_request"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalididentitywebresourcerequest">
            <summary>
            Enum Invalididentitywebresourcerequest for "invalid_identityweb_resource_request"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Identitywebmanualreviewdisabled">
            <summary>
            Enum Identitywebmanualreviewdisabled for "identityweb_manual_review_disabled"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Identitywebvendorresponsevalidationfailed">
            <summary>
            Enum Identitywebvendorresponsevalidationfailed for "identityweb_vendor_response_validation_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportnocsvresults">
            <summary>
            Enum Organizationimportnocsvresults for "organization_import_no_csv_results"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportexportpending">
            <summary>
            Enum Organizationimportexportpending for "organization_import_export_pending"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexportimportpending">
            <summary>
            Enum Organizationexportimportpending for "organization_export_import_pending"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportdeletestatusqueued">
            <summary>
            Enum Organizationimportdeletestatusqueued for "organization_import_delete_status_queued"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportmaxrecords">
            <summary>
            Enum Organizationimportmaxrecords for "organization_import_max_records"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportmaxtotalrecords">
            <summary>
            Enum Organizationimportmaxtotalrecords for "organization_import_max_total_records"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportmaxaccountrecords">
            <summary>
            Enum Organizationimportmaxaccountrecords for "organization_import_max_account_records"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportmaxsiterecords">
            <summary>
            Enum Organizationimportmaxsiterecords for "organization_import_max_site_records"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportmaxaccounts">
            <summary>
            Enum Organizationimportmaxaccounts for "organization_import_max_accounts"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportcouldnotbequeued">
            <summary>
            Enum Organizationimportcouldnotbequeued for "organization_import_could_not_be_queued"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportimportpending">
            <summary>
            Enum Organizationimportimportpending for "organization_import_import_pending"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationimportmaximports">
            <summary>
            Enum Organizationimportmaximports for "organization_import_max_imports"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Principalthrottled">
            <summary>
            Enum Principalthrottled for "principal_throttled"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Serviceunavailable">
            <summary>
            Enum Serviceunavailable for "service_unavailable"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidtemplate">
            <summary>
            Enum Invalidtemplate for "invalid_template"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidadmincommunicationprincipal">
            <summary>
            Enum Invalidadmincommunicationprincipal for "invalid_admin_communication_principal"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidadmincommunication">
            <summary>
            Enum Invalidadmincommunication for "invalid_admin_communication"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Maxadmincommunicationaggregationsexceeded">
            <summary>
            Enum Maxadmincommunicationaggregationsexceeded for "max_admin_communication_aggregations_exceeded"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Missingadmincommunicationsubject">
            <summary>
            Enum Missingadmincommunicationsubject for "missing_admin_communication_subject"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Unabletosendorgadmininvitation">
            <summary>
            Enum Unabletosendorgadmininvitation for "unable_to_send_orgadmin_invitation"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Orderalreadyexists">
            <summary>
            Enum Orderalreadyexists for "order_already_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Ordernotfound">
            <summary>
            Enum Ordernotfound for "order_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Orderinvalidproductstate">
            <summary>
            Enum Orderinvalidproductstate for "order_invalid_product_state"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Orderinvalidstate">
            <summary>
            Enum Orderinvalidstate for "order_invalid_state"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductaccountnotfound">
            <summary>
            Enum Accountproductaccountnotfound for "accountproduct_account_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidaccountproduct">
            <summary>
            Enum Invalidaccountproduct for "invalid_accountproduct"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductupdatefailed">
            <summary>
            Enum Accountproductupdatefailed for "accountproduct_update_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductprovisionfailed">
            <summary>
            Enum Accountproductprovisionfailed for "accountproduct_provision_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Freetrialalreayclaimed">
            <summary>
            Enum Freetrialalreayclaimed for "freetrial_alreay_claimed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductactivationfailed">
            <summary>
            Enum Accountproductactivationfailed for "accountproduct_activation_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Provisiontokencreatefailed">
            <summary>
            Enum Provisiontokencreatefailed for "provision_token_create_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Orderfreetrialalreadyclaimed">
            <summary>
            Enum Orderfreetrialalreadyclaimed for "order_free_trial_already_claimed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Transactionmanagementclienterror">
            <summary>
            Enum Transactionmanagementclienterror for "transaction_management_client_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Transactionmanagementserviceerror">
            <summary>
            Enum Transactionmanagementserviceerror for "transaction_management_service_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Provisionclientfailed">
            <summary>
            Enum Provisionclientfailed for "provision_client_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductcancellationfailed">
            <summary>
            Enum Accountproductcancellationfailed for "accountproduct_cancellation_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductupgradefailed">
            <summary>
            Enum Accountproductupgradefailed for "accountproduct_upgrade_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountinformationnotspecified">
            <summary>
            Enum Accountinformationnotspecified for "account_information_not_specified"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancelatestreleaseerror">
            <summary>
            Enum Appliancelatestreleaseerror for "appliance_latest_release_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancereleaseerror">
            <summary>
            Enum Appliancereleaseerror for "appliance_release_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Appliancereleasefileerror">
            <summary>
            Enum Appliancereleasefileerror for "appliance_release_file_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Autoactivatememberinnonactiveaccount">
            <summary>
            Enum Autoactivatememberinnonactiveaccount for "auto_activate_member_in_non_active_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexportdomainselectioninvalid">
            <summary>
            Enum Organizationexportdomainselectioninvalid for "organization_export_domain_selection_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexportaccountselectioninvalid">
            <summary>
            Enum Organizationexportaccountselectioninvalid for "organization_export_account_selection_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidmetadata">
            <summary>
            Enum Invalidmetadata for "invalid_metadata"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationdisallowedforaccount">
            <summary>
            Enum Organizationdisallowedforaccount for "organization_disallowed_for_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Unabletosendorgaccountinvitation">
            <summary>
            Enum Unabletosendorgaccountinvitation for "unable_to_send_orgaccount_invitation"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Unsupportedprincipaltype">
            <summary>
            Enum Unsupportedprincipaltype for "unsupported_principal_type"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidphonenumber">
            <summary>
            Enum Invalidphonenumber for "invalid_phone_number"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Identitysessioncreationerror">
            <summary>
            Enum Identitysessioncreationerror for "identity_session_creation_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidmappingcode">
            <summary>
            Enum Invalidmappingcode for "invalid_mapping_code"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Createmobilesessionthrottled">
            <summary>
            Enum Createmobilesessionthrottled for "create_mobile_session_throttled"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Identityclientloggingerror">
            <summary>
            Enum Identityclientloggingerror for "identity_client_logging_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationaccountsettingsimportimportspending">
            <summary>
            Enum Organizationaccountsettingsimportimportspending for "organization_account_settings_import_imports_pending"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationaccountsettingsimportexportspending">
            <summary>
            Enum Organizationaccountsettingsimportexportspending for "organization_account_settings_import_exports_pending"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationexportaccountsettingsimportpending">
            <summary>
            Enum Organizationexportaccountsettingsimportpending for "organization_export_account_settings_import_pending"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Declinedinvitationupdatenotallowed">
            <summary>
            Enum Declinedinvitationupdatenotallowed for "declined_invitation_update_not_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Acceptedinvitationaccessnotallowed">
            <summary>
            Enum Acceptedinvitationaccessnotallowed for "accepted_invitation_access_not_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Missingcurrentauthenticatedprincipalinformation">
            <summary>
            Enum Missingcurrentauthenticatedprincipalinformation for "missing_current_authenticated_principal_information"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidcallerinformation">
            <summary>
            Enum Invalidcallerinformation for "invalid_caller_information"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyinsertheadercontentinvalid">
            <summary>
            Enum Publickeyinsertheadercontentinvalid for "public_key_insert_header_content_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyinsertuserpublickeyalreadyexisted">
            <summary>
            Enum Publickeyinsertuserpublickeyalreadyexisted for "public_key_insert_user_public_key_already_existed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyinsertunabletoreadpublickey">
            <summary>
            Enum Publickeyinsertunabletoreadpublickey for "public_key_insert_unable_to_read_public_key"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyinsertunabletolocatepublickey">
            <summary>
            Enum Publickeyinsertunabletolocatepublickey for "public_key_insert_unable_to_locate_public_key"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyinsertemptyrequestbody">
            <summary>
            Enum Publickeyinsertemptyrequestbody for "public_key_insert_empty_request_body"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyunabletoprocesspublickey">
            <summary>
            Enum Publickeyunabletoprocesspublickey for "public_key_unable_to_process_public_key"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeynotfound">
            <summary>
            Enum Publickeynotfound for "public_key_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyidempty">
            <summary>
            Enum Publickeyidempty for "public_key_id_empty"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyidinvalid">
            <summary>
            Enum Publickeyidinvalid for "public_key_id_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeycontentinvalid">
            <summary>
            Enum Publickeycontentinvalid for "public_key_content_invalid"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeynotsupported">
            <summary>
            Enum Publickeynotsupported for "public_key_not_supported"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeymalformatted">
            <summary>
            Enum Publickeymalformatted for "public_key_malformatted"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountupdatefailed">
            <summary>
            Enum Accountupdatefailed for "account_update_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountchangeplanfailed">
            <summary>
            Enum Accountchangeplanfailed for "account_change_plan_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountcreationfailed">
            <summary>
            Enum Accountcreationfailed for "account_creation_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductinvalidstatus">
            <summary>
            Enum Accountproductinvalidstatus for "accountproduct_invalid_status"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductnotexist">
            <summary>
            Enum Accountproductnotexist for "accountproduct_not_exist"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductexpirefailed">
            <summary>
            Enum Accountproductexpirefailed for "accountproduct_expire_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Proofservicemanagementdisabled">
            <summary>
            Enum Proofservicemanagementdisabled for "proofservice_management_disabled"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidproduct">
            <summary>
            Enum Invalidproduct for "invalid_product"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Notsupported">
            <summary>
            Enum Notsupported for "not_supported"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Identityworkflownotfound">
            <summary>
            Enum Identityworkflownotfound for "identity_workflow_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Identityworkflowsignaturemethodnotfound">
            <summary>
            Enum Identityworkflowsignaturemethodnotfound for "identity_workflow_signature_method_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Identityworkflowclaimunknownprovidertype">
            <summary>
            Enum Identityworkflowclaimunknownprovidertype for "identity_workflow_claim_unknown_provider_type"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Identityworkflowinvalidexternalclaimproperties">
            <summary>
            Enum Identityworkflowinvalidexternalclaimproperties for "identity_workflow_invalid_externalclaim_properties"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyapiinvalidmodulus">
            <summary>
            Enum Publickeyapiinvalidmodulus for "public_key_api_invalid_modulus"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyapiinvalidexponent">
            <summary>
            Enum Publickeyapiinvalidexponent for "public_key_api_invalid_exponent"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyapiinvalidpublickey">
            <summary>
            Enum Publickeyapiinvalidpublickey for "public_key_api_invalid_public_key"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Publickeyapinousermappingtogivenpublickey">
            <summary>
            Enum Publickeyapinousermappingtogivenpublickey for "public_key_api_no_user_mapping_to_given_public_key"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Duplicateunitofmeasure">
            <summary>
            Enum Duplicateunitofmeasure for "duplicate_unit_of_measure"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Membershipclosenotallowed">
            <summary>
            Enum Membershipclosenotallowed for "membership_close_not_allowed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Immutableidalreadyexists">
            <summary>
            Enum Immutableidalreadyexists for "immutableid_already_exists"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationhasnoverifiedreserveddomains">
            <summary>
            Enum Organizationhasnoverifiedreserveddomains for "organization_has_no_verified_reserved_domains"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Getaccountgroupsfailed">
            <summary>
            Enum Getaccountgroupsfailed for "get_account_groups_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationmissingentitlement">
            <summary>
            Enum Organizationmissingentitlement for "organization_missing_entitlement"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Configmissingappsorvalues">
            <summary>
            Enum Configmissingappsorvalues for "config_missing_apps_or_values"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Missingpenrequiredclaims">
            <summary>
            Enum Missingpenrequiredclaims for "missing_pen_required_claims"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountsyncfailed">
            <summary>
            Enum Accountsyncfailed for "account_sync_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invaliduri">
            <summary>
            Enum Invaliduri for "invalid_uri"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidsite">
            <summary>
            Enum Invalidsite for "invalid_site"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Provisionrestclienterror">
            <summary>
            Enum Provisionrestclienterror for "provision_rest_client_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Productmasterentrynotfound">
            <summary>
            Enum Productmasterentrynotfound for "product_master_entry_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Provisionorderservicev2badrequest">
            <summary>
            Enum Provisionorderservicev2badrequest for "provision_orderservicev2_bad_request"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Linkedidentityproviderrecordnotfound">
            <summary>
            Enum Linkedidentityproviderrecordnotfound for "linked_identity_provider_record_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Accountproductfreetrialnoteligible">
            <summary>
            Enum Accountproductfreetrialnoteligible for "accountproduct_freetrial_not_eligible"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Orderinvalidproduct">
            <summary>
            Enum Orderinvalidproduct for "order_invalid_product"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapiinvalidactioncontext">
            <summary>
            Enum Protectapiinvalidactioncontext for "protect_api_invalid_action_context"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapiruleserror">
            <summary>
            Enum Protectapiruleserror for "protect_api_rules_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapiinvalidrecaptchaconfiguration">
            <summary>
            Enum Protectapiinvalidrecaptchaconfiguration for "protect_api_invalid_recaptcha_configuration"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapiinvalidrecaptchaverificationerror">
            <summary>
            Enum Protectapiinvalidrecaptchaverificationerror for "protect_api_invalid_recaptcha_verification_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapiinvalidconfig">
            <summary>
            Enum Protectapiinvalidconfig for "protect_api_invalid_config"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapiapprovalerror">
            <summary>
            Enum Protectapiapprovalerror for "protect_api_approval_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Orderinvalidaccount">
            <summary>
            Enum Orderinvalidaccount for "order_invalid_account"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Orderinvalidsource">
            <summary>
            Enum Orderinvalidsource for "order_invalid_source"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Orderinvaliduser">
            <summary>
            Enum Orderinvaliduser for "order_invalid_user"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Provisionqueuefailure">
            <summary>
            Enum Provisionqueuefailure for "provision_queue_failure"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidorganizationentitlement">
            <summary>
            Enum Invalidorganizationentitlement for "invalid_organization_entitlement"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Productmasterinvalidexternalkey">
            <summary>
            Enum Productmasterinvalidexternalkey for "product_master_invalid_external_key"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Orderprovisionfailed">
            <summary>
            Enum Orderprovisionfailed for "order_provision_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapireportabuserequesterror">
            <summary>
            Enum Protectapireportabuserequesterror for "protect_api_report_abuse_request_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapireportabuseemailerror">
            <summary>
            Enum Protectapireportabuseemailerror for "protect_api_report_abuse_email_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapireportabuseerror">
            <summary>
            Enum Protectapireportabuseerror for "protect_api_report_abuse_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapireportabuseconfigerror">
            <summary>
            Enum Protectapireportabuseconfigerror for "protect_api_report_abuse_config_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Protectapireportabuseweberror">
            <summary>
            Enum Protectapireportabuseweberror for "protect_api_report_abuse_web_error"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Invalidregion">
            <summary>
            Enum Invalidregion for "invalid_region"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Billingprofilegetfailed">
            <summary>
            Enum Billingprofilegetfailed for "billing_profile_get_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Currentplangetfailed">
            <summary>
            Enum Currentplangetfailed for "current_plan_get_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Billingprofileupdatefailed">
            <summary>
            Enum Billingprofileupdatefailed for "billing_profile_update_failed"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Billingprofileaccountnotfound">
            <summary>
            Enum Billingprofileaccountnotfound for "billing_profile_account_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Billingprofileaccountplannotfound">
            <summary>
            Enum Billingprofileaccountplannotfound for "billing_profile_account_plan_not_found"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Billingprofileinvalidcurrency">
            <summary>
            Enum Billingprofileinvalidcurrency for "billing_profile_invalid_currency"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Billingprofileinvalidzuoraid">
            <summary>
            Enum Billingprofileinvalidzuoraid for "billing_profile_invalid_zuora_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Billingprofileinvalidexternalbillingsystemid">
            <summary>
            Enum Billingprofileinvalidexternalbillingsystemid for "billing_profile_invalid_external_billing_system_id"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Billingprofileexternalbillingusagestartdaterequired">
            <summary>
            Enum Billingprofileexternalbillingusagestartdaterequired for "billing_profile_external_billing_usage_start_date_required"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Billingprofileaccountbillingactiverequired">
            <summary>
            Enum Billingprofileaccountbillingactiverequired for "billing_profile_accountbilling_active_required"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Featuredisabledinjumptomobilesession">
            <summary>
            Enum Featuredisabledinjumptomobilesession for "feature_disabled_in_jump_to_mobile_session"
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum.Organizationentitlementinvalidrights">
            <summary>
            Enum Organizationentitlementinvalidrights for "organization_entitlement_invalid_rights"
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.HttpErrorResponse.Error">
            <summary>
            The code associated with the error condition.
            </summary>
            <value>The code associated with the error condition.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.HttpErrorResponse.#ctor(System.Nullable{DocuSign.Rooms.Model.HttpErrorResponse.ErrorEnum},System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.HttpErrorResponse" /> class.
            </summary>
            <param name="Error">The code associated with the error condition..</param>
            <param name="ErrorDescription">A brief message describing the error condition..</param>
            <param name="ServiceErrorCode">The service error code..</param>
            <param name="ErrorStack">The error stacktrace..</param>
            <param name="ErrorInner">The previous exceptions in the call stack..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.HttpErrorResponse.ErrorDescription">
            <summary>
            A brief message describing the error condition.
            </summary>
            <value>A brief message describing the error condition.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.HttpErrorResponse.ServiceErrorCode">
            <summary>
            The service error code.
            </summary>
            <value>The service error code.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.HttpErrorResponse.ReferenceId">
            <summary>
            The reference identifier corresponding to the trace token.
            </summary>
            <value>The reference identifier corresponding to the trace token.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.HttpErrorResponse.ErrorStack">
            <summary>
            The error stacktrace.
            </summary>
            <value>The error stacktrace.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.HttpErrorResponse.ErrorInner">
            <summary>
            The previous exceptions in the call stack.
            </summary>
            <value>The previous exceptions in the call stack.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.HttpErrorResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.HttpErrorResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.HttpErrorResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.HttpErrorResponse.Equals(DocuSign.Rooms.Model.HttpErrorResponse)">
            <summary>
            Returns true if HttpErrorResponse instances are equal
            </summary>
            <param name="other">Instance of HttpErrorResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.HttpErrorResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.IEventResponse">
            <summary>
            Definition of a simple event item. The transaction hold by the proof file is made of a list of these items.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventResponse.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.IEventResponse" /> class.
            </summary>
            <param name="Data">The event data that is inserted by  ID Evidence..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.IEventResponse.EventType">
            <summary>
            Type of the event.
            </summary>
            <value>Type of the event.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IEventResponse.CreationDate">
            <summary>
            The date the event was created. This information is useful for filtering events.
            </summary>
            <value>The date the event was created. This information is useful for filtering events.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IEventResponse.ActorId">
            <summary>
            The id of the actor.
            </summary>
            <value>The id of the actor.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IEventResponse.Data">
            <summary>
            The event data that is inserted by  ID Evidence.
            </summary>
            <value>The event data that is inserted by  ID Evidence.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IEventResponse.HasMedia">
            <summary>
            Indicates whether the object contains large media objects in its data.
            </summary>
            <value>Indicates whether the object contains large media objects in its data.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventResponse.Equals(DocuSign.Rooms.Model.IEventResponse)">
            <summary>
            Returns true if IEventResponse instances are equal
            </summary>
            <param name="other">Instance of IEventResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.IEventsResponse">
            <summary>
            Definition of a transaction. It contains the list of the events and some metadata.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventsResponse.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.IEventResponse},DocuSign.Rooms.Model.IPaginated)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.IEventsResponse" /> class.
            </summary>
            <param name="Events">List of the events contained in the transaction..</param>
            <param name="Paging">Paging info..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.IEventsResponse.Events">
            <summary>
            List of the events contained in the transaction.
            </summary>
            <value>List of the events contained in the transaction.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IEventsResponse.Paging">
            <summary>
            Paging info.
            </summary>
            <value>Paging info.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventsResponse.Equals(DocuSign.Rooms.Model.IEventsResponse)">
            <summary>
            Returns true if IEventsResponse instances are equal
            </summary>
            <param name="other">Instance of IEventsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IEventsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.IFrontViewResponse">
            <summary>
            Definition of a front view
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewResponse.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.IFrontViewResponse" /> class.
            </summary>
            <param name="EventsTypes">List of events types that are bound to a proof webapp view..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.IFrontViewResponse.FrontViewId">
            <summary>
            Front view identifier.
            </summary>
            <value>Front view identifier.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IFrontViewResponse.ViewName">
            <summary>
            Name of the view in the Proof WebApp.
            </summary>
            <value>Name of the view in the Proof WebApp.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IFrontViewResponse.EventsTypes">
            <summary>
            List of events types that are bound to a proof webapp view.
            </summary>
            <value>List of events types that are bound to a proof webapp view.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewResponse.Equals(DocuSign.Rooms.Model.IFrontViewResponse)">
            <summary>
            Returns true if IFrontViewResponse instances are equal
            </summary>
            <param name="other">Instance of IFrontViewResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.IFrontViewsResponse">
            <summary>
            
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewsResponse.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.IFrontViewResponse},DocuSign.Rooms.Model.IPaginated)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.IFrontViewsResponse" /> class.
            </summary>
            <param name="FrontViews">List of the front view..</param>
            <param name="Paging">Paging info..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.IFrontViewsResponse.FrontViews">
            <summary>
            List of the front view.
            </summary>
            <value>List of the front view.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IFrontViewsResponse.Paging">
            <summary>
            Paging info.
            </summary>
            <value>Paging info.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewsResponse.Equals(DocuSign.Rooms.Model.IFrontViewsResponse)">
            <summary>
            Returns true if IFrontViewsResponse instances are equal
            </summary>
            <param name="other">Instance of IFrontViewsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IFrontViewsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.IPaginated">
            <summary>
            Interface defining the paging properties.
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPaginated.PageIndex">
            <summary>
            The index position of the page.
            </summary>
            <value>The index position of the page.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPaginated.PageSize">
            <summary>
            The size of the page.
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPaginated.TotalPages">
            <summary>
            The total number of pages in the response.
            </summary>
            <value>The total number of pages in the response.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPaginated.TotalItems">
            <summary>
            The total number of items responding to the request.
            </summary>
            <value>The total number of items responding to the request.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPaginated.HasPreviousPage">
            <summary>
            Indicates whether this object can call a previous page.
            </summary>
            <value>Indicates whether this object can call a previous page.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPaginated.HasNextPage">
            <summary>
            Indicates whether this object can call a next page.
            </summary>
            <value>Indicates whether this object can call a next page.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPaginated.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPaginated.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPaginated.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPaginated.Equals(DocuSign.Rooms.Model.IPaginated)">
            <summary>
            Returns true if IPaginated instances are equal
            </summary>
            <param name="other">Instance of IPaginated to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPaginated.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.IPostEventResponse">
            <summary>
            Defined an event added to a transaction.
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPostEventResponse.EntityId">
            <summary>
            The DocuSign entity identifier.
            </summary>
            <value>The DocuSign entity identifier.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPostEventResponse.EntityType">
            <summary>
            Type of the entity. i.e room, user, envelope...
            </summary>
            <value>Type of the entity. i.e room, user, envelope...</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPostEventResponse.EventType">
            <summary>
            Type of the event added to the list of events tied to the transaction.
            </summary>
            <value>Type of the event added to the list of events tied to the transaction.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPostEventResponse.ActorId">
            <summary>
            Actor identifier. This enables to attach this event to a particular actor.
            </summary>
            <value>Actor identifier. This enables to attach this event to a particular actor.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPostEventResponse.PayloadSchemaVersion">
            <summary>
            Version of the validation schema used to check the data structure integrity.
            </summary>
            <value>Version of the validation schema used to check the data structure integrity.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IPostEventResponse.CreatedDate">
            <summary>
            Creation date of the entity calculated by the server.
            </summary>
            <value>Creation date of the entity calculated by the server.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPostEventResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPostEventResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPostEventResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPostEventResponse.Equals(DocuSign.Rooms.Model.IPostEventResponse)">
            <summary>
            Returns true if IPostEventResponse instances are equal
            </summary>
            <param name="other">Instance of IPostEventResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IPostEventResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.IProofFileResponse">
            <summary>
            Definition of a transaction (proof file). It is an entity that hold the events.
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.IProofFileResponse.ClientId">
            <summary>
            Client identifier of the user that is initiating the transaction.
            </summary>
            <value>Client identifier of the user that is initiating the transaction.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IProofFileResponse.EntityId">
            <summary>
            The DocuSign entity identifier.
            </summary>
            <value>The DocuSign entity identifier.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IProofFileResponse.EntityType">
            <summary>
            Type of the entity. i.e room, user, envelope...
            </summary>
            <value>Type of the entity. i.e room, user, envelope...</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.IProofFileResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IProofFileResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IProofFileResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IProofFileResponse.Equals(DocuSign.Rooms.Model.IProofFileResponse)">
            <summary>
            Returns true if IProofFileResponse instances are equal
            </summary>
            <param name="other">Instance of IProofFileResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IProofFileResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.IViewSchemaResponse">
            <summary>
            Definition of a view schema. The view schema is used to filter the data thar are given back by the proof service.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemaResponse.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.IViewSchemaResponse" /> class.
            </summary>
            <param name="Data">JSON based format representing the data to render..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.IViewSchemaResponse.Data">
            <summary>
            JSON based format representing the data to render.
            </summary>
            <value>JSON based format representing the data to render.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IViewSchemaResponse.SchemaId">
            <summary>
            View schema identifier.
            </summary>
            <value>View schema identifier.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IViewSchemaResponse.EntityType">
            <summary>
            Type of the entity. i.e room, user, envelope...
            </summary>
            <value>Type of the entity. i.e room, user, envelope...</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IViewSchemaResponse.EventType">
            <summary>
            Type of the event. This property depends on the source, the creator of an event. The proof service does not have any pre-establish list of events types.  It is totally up to the external service, that calls the proof service, to decide and manage their events types.
            </summary>
            <value>Type of the event. This property depends on the source, the creator of an event. The proof service does not have any pre-establish list of events types.  It is totally up to the external service, that calls the proof service, to decide and manage their events types.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IViewSchemaResponse.Authority">
            <summary>
            Audience or authority claiming the data.
            </summary>
            <value>Audience or authority claiming the data.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IViewSchemaResponse.DataModelValidationVersion">
            <summary>
            Gets or sets the version of the data model the view schema is bound to.
            </summary>
            <value>Gets or sets the version of the data model the view schema is bound to.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemaResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemaResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemaResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemaResponse.Equals(DocuSign.Rooms.Model.IViewSchemaResponse)">
            <summary>
            Returns true if IViewSchemaResponse instances are equal
            </summary>
            <param name="other">Instance of IViewSchemaResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemaResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.IViewSchemasResponse">
            <summary>
            
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemasResponse.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.IViewSchemaResponse},DocuSign.Rooms.Model.IPaginated)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.IViewSchemasResponse" /> class.
            </summary>
            <param name="ViewSchemas">List of the view schema..</param>
            <param name="Paging">Paging info..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.IViewSchemasResponse.ViewSchemas">
            <summary>
            List of the view schema.
            </summary>
            <value>List of the view schema.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.IViewSchemasResponse.Paging">
            <summary>
            Paging info.
            </summary>
            <value>Paging info.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemasResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemasResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemasResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemasResponse.Equals(DocuSign.Rooms.Model.IViewSchemasResponse)">
            <summary>
            Returns true if IViewSchemasResponse instances are equal
            </summary>
            <param name="other">Instance of IViewSchemasResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.IViewSchemasResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.LockedOutDetails">
            <summary>
            LockedOutDetails
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.LockedOutDetails.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.LockedOutDetails" /> class.
            </summary>
            <param name="Reason">Reason (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.LockedOutDetails.Reason">
            <summary>
            Gets or Sets Reason
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.LockedOutDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.LockedOutDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.LockedOutDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.LockedOutDetails.Equals(DocuSign.Rooms.Model.LockedOutDetails)">
            <summary>
            Returns true if LockedOutDetails instances are equal
            </summary>
            <param name="other">Instance of LockedOutDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.LockedOutDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.NullableFieldData">
            <summary>
            NullableFieldData
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullableFieldData.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.NullableFieldData" /> class.
            </summary>
            <param name="Data">Data.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullableFieldData.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullableFieldData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullableFieldData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullableFieldData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullableFieldData.Equals(DocuSign.Rooms.Model.NullableFieldData)">
            <summary>
            Returns true if NullableFieldData instances are equal
            </summary>
            <param name="other">Instance of NullableFieldData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullableFieldData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.NullablePermissions">
            <summary>
            NullablePermissions
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullablePermissions.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.NullablePermissions" /> class.
            </summary>
            <param name="CanAddUsersToRooms">CanAddUsersToRooms.</param>
            <param name="CanCreateRooms">CanCreateRooms.</param>
            <param name="CanSubmitRoomsForReview">CanSubmitRoomsForReview.</param>
            <param name="CanCloseRooms">CanCloseRooms.</param>
            <param name="CanReopenRooms">CanReopenRooms.</param>
            <param name="CanDeleteOwnedRooms">CanDeleteOwnedRooms.</param>
            <param name="AutoAccessToRooms">AutoAccessToRooms.</param>
            <param name="CanExportRoomActivityDetailsPeople">CanExportRoomActivityDetailsPeople.</param>
            <param name="IsVisibleInRooms">IsVisibleInRooms.</param>
            <param name="CanCopyRoomDetails">CanCopyRoomDetails.</param>
            <param name="CanEditAnyRoomRole">CanEditAnyRoomRole.</param>
            <param name="CanEditInvitedRoomRole">CanEditInvitedRoomRole.</param>
            <param name="CanManageAnyUserRoomAccess">CanManageAnyUserRoomAccess.</param>
            <param name="CanManageInvitedUserRoomAccess">CanManageInvitedUserRoomAccess.</param>
            <param name="CanViewRoomDetails">CanViewRoomDetails.</param>
            <param name="CanViewAndEditRoomDetails">CanViewAndEditRoomDetails.</param>
            <param name="CanSendRoomDetailsToLoneWolf">CanSendRoomDetailsToLoneWolf.</param>
            <param name="CanAddDocuments">CanAddDocuments.</param>
            <param name="CanAddDocumentsFromFormGroups">CanAddDocumentsFromFormGroups.</param>
            <param name="CanAddDocumentsFromFormLibraries">CanAddDocumentsFromFormLibraries.</param>
            <param name="DocumentsViewableByOthersInRoomFromOffice">DocumentsViewableByOthersInRoomFromOffice.</param>
            <param name="DocumentsAutoOwnedByPeers">DocumentsAutoOwnedByPeers.</param>
            <param name="CanDeleteOwnedDocuments">CanDeleteOwnedDocuments.</param>
            <param name="CanManageSharedDocs">CanManageSharedDocs.</param>
            <param name="CanManageFormGroups">CanManageFormGroups.</param>
            <param name="CanShareDocsNotOwned">CanShareDocsNotOwned.</param>
            <param name="CanAddTasksToAnyTaskLists">CanAddTasksToAnyTaskLists.</param>
            <param name="CanEditEditableTasks">CanEditEditableTasks.</param>
            <param name="CanEditAnyTasks">CanEditAnyTasks.</param>
            <param name="CanDeleteDeletableTasks">CanDeleteDeletableTasks.</param>
            <param name="CanDeleteAnyTasks">CanDeleteAnyTasks.</param>
            <param name="CanApplyTaskList">CanApplyTaskList.</param>
            <param name="CanRemoveAnyTaskList">CanRemoveAnyTaskList.</param>
            <param name="CanSubmitTaskList">CanSubmitTaskList.</param>
            <param name="CanAutoSubmitTaskList">CanAutoSubmitTaskList.</param>
            <param name="CanReviewTaskList">CanReviewTaskList.</param>
            <param name="CanAutoApproveTaskList">CanAutoApproveTaskList.</param>
            <param name="CanManageTaskTemplatesForAllRegionsAllOffices">CanManageTaskTemplatesForAllRegionsAllOffices.</param>
            <param name="CanApplyRoomTemplates">CanApplyRoomTemplates.</param>
            <param name="CanAddTasksToRooms">CanAddTasksToRooms.</param>
            <param name="CanCreateAndManagePackages">CanCreateAndManagePackages.</param>
            <param name="CanAddMemberAndSetRoleLowerAccessLevel">CanAddMemberAndSetRoleLowerAccessLevel.</param>
            <param name="CanAddMemberAndSetRoleSameAccessLevel">CanAddMemberAndSetRoleSameAccessLevel.</param>
            <param name="CanChangeMemberRoleLowerAccessLevel">CanChangeMemberRoleLowerAccessLevel.</param>
            <param name="CanChangeMemberRoleSameAccessLevel">CanChangeMemberRoleSameAccessLevel.</param>
            <param name="CanManageMemberLowerAccessLevel">CanManageMemberLowerAccessLevel.</param>
            <param name="CanManageMemberSameAccessLevel">CanManageMemberSameAccessLevel.</param>
            <param name="CanRemoveCompanyMemberLowerAccessLevel">CanRemoveCompanyMemberLowerAccessLevel.</param>
            <param name="CanRemoveCompanyMemberSameAccessLevel">CanRemoveCompanyMemberSameAccessLevel.</param>
            <param name="CanManageAccount">CanManageAccount.</param>
            <param name="CanManageLogo">CanManageLogo.</param>
            <param name="CanManageRoomDetails">CanManageRoomDetails.</param>
            <param name="CanManageRoomTemplates">CanManageRoomTemplates.</param>
            <param name="CanManageIntegrationSettings">CanManageIntegrationSettings.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAddUsersToRooms">
            <summary>
            Gets or Sets CanAddUsersToRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanCreateRooms">
            <summary>
            Gets or Sets CanCreateRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanSubmitRoomsForReview">
            <summary>
            Gets or Sets CanSubmitRoomsForReview
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanCloseRooms">
            <summary>
            Gets or Sets CanCloseRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanReopenRooms">
            <summary>
            Gets or Sets CanReopenRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanDeleteOwnedRooms">
            <summary>
            Gets or Sets CanDeleteOwnedRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.AutoAccessToRooms">
            <summary>
            Gets or Sets AutoAccessToRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanExportRoomActivityDetailsPeople">
            <summary>
            Gets or Sets CanExportRoomActivityDetailsPeople
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.IsVisibleInRooms">
            <summary>
            Gets or Sets IsVisibleInRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanCopyRoomDetails">
            <summary>
            Gets or Sets CanCopyRoomDetails
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanEditAnyRoomRole">
            <summary>
            Gets or Sets CanEditAnyRoomRole
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanEditInvitedRoomRole">
            <summary>
            Gets or Sets CanEditInvitedRoomRole
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageAnyUserRoomAccess">
            <summary>
            Gets or Sets CanManageAnyUserRoomAccess
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageInvitedUserRoomAccess">
            <summary>
            Gets or Sets CanManageInvitedUserRoomAccess
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanViewRoomDetails">
            <summary>
            Gets or Sets CanViewRoomDetails
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanViewAndEditRoomDetails">
            <summary>
            Gets or Sets CanViewAndEditRoomDetails
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanSendRoomDetailsToLoneWolf">
            <summary>
            Gets or Sets CanSendRoomDetailsToLoneWolf
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAddDocuments">
            <summary>
            Gets or Sets CanAddDocuments
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAddDocumentsFromFormGroups">
            <summary>
            Gets or Sets CanAddDocumentsFromFormGroups
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAddDocumentsFromFormLibraries">
            <summary>
            Gets or Sets CanAddDocumentsFromFormLibraries
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.DocumentsViewableByOthersInRoomFromOffice">
            <summary>
            Gets or Sets DocumentsViewableByOthersInRoomFromOffice
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.DocumentsAutoOwnedByPeers">
            <summary>
            Gets or Sets DocumentsAutoOwnedByPeers
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanDeleteOwnedDocuments">
            <summary>
            Gets or Sets CanDeleteOwnedDocuments
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageSharedDocs">
            <summary>
            Gets or Sets CanManageSharedDocs
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageFormGroups">
            <summary>
            Gets or Sets CanManageFormGroups
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanShareDocsNotOwned">
            <summary>
            Gets or Sets CanShareDocsNotOwned
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAddTasksToAnyTaskLists">
            <summary>
            Gets or Sets CanAddTasksToAnyTaskLists
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanEditEditableTasks">
            <summary>
            Gets or Sets CanEditEditableTasks
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanEditAnyTasks">
            <summary>
            Gets or Sets CanEditAnyTasks
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanDeleteDeletableTasks">
            <summary>
            Gets or Sets CanDeleteDeletableTasks
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanDeleteAnyTasks">
            <summary>
            Gets or Sets CanDeleteAnyTasks
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanApplyTaskList">
            <summary>
            Gets or Sets CanApplyTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanRemoveAnyTaskList">
            <summary>
            Gets or Sets CanRemoveAnyTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanSubmitTaskList">
            <summary>
            Gets or Sets CanSubmitTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAutoSubmitTaskList">
            <summary>
            Gets or Sets CanAutoSubmitTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanReviewTaskList">
            <summary>
            Gets or Sets CanReviewTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAutoApproveTaskList">
            <summary>
            Gets or Sets CanAutoApproveTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageTaskTemplatesForAllRegionsAllOffices">
            <summary>
            Gets or Sets CanManageTaskTemplatesForAllRegionsAllOffices
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanApplyRoomTemplates">
            <summary>
            Gets or Sets CanApplyRoomTemplates
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAddTasksToRooms">
            <summary>
            Gets or Sets CanAddTasksToRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanCreateAndManagePackages">
            <summary>
            Gets or Sets CanCreateAndManagePackages
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAddMemberAndSetRoleLowerAccessLevel">
            <summary>
            Gets or Sets CanAddMemberAndSetRoleLowerAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanAddMemberAndSetRoleSameAccessLevel">
            <summary>
            Gets or Sets CanAddMemberAndSetRoleSameAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanChangeMemberRoleLowerAccessLevel">
            <summary>
            Gets or Sets CanChangeMemberRoleLowerAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanChangeMemberRoleSameAccessLevel">
            <summary>
            Gets or Sets CanChangeMemberRoleSameAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageMemberLowerAccessLevel">
            <summary>
            Gets or Sets CanManageMemberLowerAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageMemberSameAccessLevel">
            <summary>
            Gets or Sets CanManageMemberSameAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanRemoveCompanyMemberLowerAccessLevel">
            <summary>
            Gets or Sets CanRemoveCompanyMemberLowerAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanRemoveCompanyMemberSameAccessLevel">
            <summary>
            Gets or Sets CanRemoveCompanyMemberSameAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageAccount">
            <summary>
            Gets or Sets CanManageAccount
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageLogo">
            <summary>
            Gets or Sets CanManageLogo
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageRoomDetails">
            <summary>
            Gets or Sets CanManageRoomDetails
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageRoomTemplates">
            <summary>
            Gets or Sets CanManageRoomTemplates
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.NullablePermissions.CanManageIntegrationSettings">
            <summary>
            Gets or Sets CanManageIntegrationSettings
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullablePermissions.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullablePermissions.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullablePermissions.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullablePermissions.Equals(DocuSign.Rooms.Model.NullablePermissions)">
            <summary>
            Returns true if NullablePermissions instances are equal
            </summary>
            <param name="other">Instance of NullablePermissions to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.NullablePermissions.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.Office">
            <summary>
            Office
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Office.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.Office" /> class.
            </summary>
            <param name="Name">Name (required).</param>
            <param name="RegionId">RegionId.</param>
            <param name="Address1">Address1.</param>
            <param name="Address2">Address2.</param>
            <param name="City">City.</param>
            <param name="StateId">StateId.</param>
            <param name="PostalCode">PostalCode.</param>
            <param name="CountryId">CountryId.</param>
            <param name="TimeZoneId">TimeZoneId.</param>
            <param name="Phone">Phone.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.OfficeId">
            <summary>
            Gets or Sets OfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.RegionId">
            <summary>
            Gets or Sets RegionId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.Address1">
            <summary>
            Gets or Sets Address1
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.Address2">
            <summary>
            Gets or Sets Address2
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.City">
            <summary>
            Gets or Sets City
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.StateId">
            <summary>
            Gets or Sets StateId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.PostalCode">
            <summary>
            Gets or Sets PostalCode
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.CountryId">
            <summary>
            Gets or Sets CountryId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.TimeZoneId">
            <summary>
            Gets or Sets TimeZoneId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.Phone">
            <summary>
            Gets or Sets Phone
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Office.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Office.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Office.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Office.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Office.Equals(DocuSign.Rooms.Model.Office)">
            <summary>
            Returns true if Office instances are equal
            </summary>
            <param name="other">Instance of Office to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Office.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.OfficeForCreate">
            <summary>
            OfficeForCreate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeForCreate.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.OfficeForCreate" /> class.
            </summary>
            <param name="Name">Name (required).</param>
            <param name="RegionId">RegionId.</param>
            <param name="Address1">Address1.</param>
            <param name="Address2">Address2.</param>
            <param name="City">City.</param>
            <param name="StateId">StateId.</param>
            <param name="PostalCode">PostalCode.</param>
            <param name="CountryId">CountryId.</param>
            <param name="TimeZoneId">TimeZoneId.</param>
            <param name="Phone">Phone.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.RegionId">
            <summary>
            Gets or Sets RegionId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.Address1">
            <summary>
            Gets or Sets Address1
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.Address2">
            <summary>
            Gets or Sets Address2
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.City">
            <summary>
            Gets or Sets City
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.StateId">
            <summary>
            Gets or Sets StateId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.PostalCode">
            <summary>
            Gets or Sets PostalCode
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.CountryId">
            <summary>
            Gets or Sets CountryId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.TimeZoneId">
            <summary>
            Gets or Sets TimeZoneId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeForCreate.Phone">
            <summary>
            Gets or Sets Phone
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeForCreate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeForCreate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeForCreate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeForCreate.Equals(DocuSign.Rooms.Model.OfficeForCreate)">
            <summary>
            Returns true if OfficeForCreate instances are equal
            </summary>
            <param name="other">Instance of OfficeForCreate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeForCreate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.OfficeReferenceCount">
            <summary>
            OfficeReferenceCount
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeReferenceCount.ReferenceType">
            <summary>
            Gets or Sets ReferenceType
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeReferenceCount.ReferencedCount">
            <summary>
            Gets or Sets ReferencedCount
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCount.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCount.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCount.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCount.Equals(DocuSign.Rooms.Model.OfficeReferenceCount)">
            <summary>
            Returns true if OfficeReferenceCount instances are equal
            </summary>
            <param name="other">Instance of OfficeReferenceCount to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCount.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.OfficeReferenceCountList">
            <summary>
            OfficeReferenceCountList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCountList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.OfficeReferenceCount})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.OfficeReferenceCountList" /> class.
            </summary>
            <param name="ReferencesCounts">ReferencesCounts.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeReferenceCountList.ReferencesCounts">
            <summary>
            Gets or Sets ReferencesCounts
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCountList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCountList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCountList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCountList.Equals(DocuSign.Rooms.Model.OfficeReferenceCountList)">
            <summary>
            Returns true if OfficeReferenceCountList instances are equal
            </summary>
            <param name="other">Instance of OfficeReferenceCountList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeReferenceCountList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.OfficeSummary">
            <summary>
            OfficeSummary
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.OfficeId">
            <summary>
            Gets or Sets OfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.RegionId">
            <summary>
            Gets or Sets RegionId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.Address1">
            <summary>
            Gets or Sets Address1
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.Address2">
            <summary>
            Gets or Sets Address2
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.City">
            <summary>
            Gets or Sets City
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.StateId">
            <summary>
            Gets or Sets StateId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.PostalCode">
            <summary>
            Gets or Sets PostalCode
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.CountryId">
            <summary>
            Gets or Sets CountryId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.TimeZoneId">
            <summary>
            Gets or Sets TimeZoneId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.Phone">
            <summary>
            Gets or Sets Phone
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummary.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummary.Equals(DocuSign.Rooms.Model.OfficeSummary)">
            <summary>
            Returns true if OfficeSummary instances are equal
            </summary>
            <param name="other">Instance of OfficeSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.OfficeSummaryList">
            <summary>
            OfficeSummaryList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummaryList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.OfficeSummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.OfficeSummaryList" /> class.
            </summary>
            <param name="OfficeSummaries">OfficeSummaries.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummaryList.OfficeSummaries">
            <summary>
            Gets or Sets OfficeSummaries
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummaryList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummaryList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummaryList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummaryList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OfficeSummaryList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummaryList.Equals(DocuSign.Rooms.Model.OfficeSummaryList)">
            <summary>
            Returns true if OfficeSummaryList instances are equal
            </summary>
            <param name="other">Instance of OfficeSummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OfficeSummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.OriginOfLead">
            <summary>
            OriginOfLead
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OriginOfLead.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.OriginOfLead" /> class.
            </summary>
            <param name="OriginOfLeadId">OriginOfLeadId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.OriginOfLead.OriginOfLeadId">
            <summary>
            Gets or Sets OriginOfLeadId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.OriginOfLead.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.OriginOfLead.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OriginOfLead.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OriginOfLead.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OriginOfLead.Equals(DocuSign.Rooms.Model.OriginOfLead)">
            <summary>
            Returns true if OriginOfLead instances are equal
            </summary>
            <param name="other">Instance of OriginOfLead to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.OriginOfLead.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.Permissions">
            <summary>
            Permissions
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Permissions.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.Permissions" /> class.
            </summary>
            <param name="CanAddUsersToRooms">CanAddUsersToRooms.</param>
            <param name="CanCreateRooms">CanCreateRooms.</param>
            <param name="CanSubmitRoomsForReview">CanSubmitRoomsForReview.</param>
            <param name="CanCloseRooms">CanCloseRooms.</param>
            <param name="CanReopenRooms">CanReopenRooms.</param>
            <param name="CanDeleteOwnedRooms">CanDeleteOwnedRooms.</param>
            <param name="AutoAccessToRooms">AutoAccessToRooms.</param>
            <param name="CanExportRoomActivityDetailsPeople">CanExportRoomActivityDetailsPeople.</param>
            <param name="IsVisibleInRooms">IsVisibleInRooms.</param>
            <param name="CanCopyRoomDetails">CanCopyRoomDetails.</param>
            <param name="CanEditAnyRoomRole">CanEditAnyRoomRole.</param>
            <param name="CanEditInvitedRoomRole">CanEditInvitedRoomRole.</param>
            <param name="CanManageAnyUserRoomAccess">CanManageAnyUserRoomAccess.</param>
            <param name="CanManageInvitedUserRoomAccess">CanManageInvitedUserRoomAccess.</param>
            <param name="CanViewRoomDetails">CanViewRoomDetails.</param>
            <param name="CanViewAndEditRoomDetails">CanViewAndEditRoomDetails.</param>
            <param name="CanSendRoomDetailsToLoneWolf">CanSendRoomDetailsToLoneWolf.</param>
            <param name="CanAddDocuments">CanAddDocuments.</param>
            <param name="CanAddDocumentsFromFormGroups">CanAddDocumentsFromFormGroups.</param>
            <param name="CanAddDocumentsFromFormLibraries">CanAddDocumentsFromFormLibraries.</param>
            <param name="DocumentsViewableByOthersInRoomFromOffice">DocumentsViewableByOthersInRoomFromOffice.</param>
            <param name="DocumentsAutoOwnedByPeers">DocumentsAutoOwnedByPeers.</param>
            <param name="CanDeleteOwnedDocuments">CanDeleteOwnedDocuments.</param>
            <param name="CanManageSharedDocs">CanManageSharedDocs.</param>
            <param name="CanManageFormGroups">CanManageFormGroups.</param>
            <param name="CanShareDocsNotOwned">CanShareDocsNotOwned.</param>
            <param name="CanAddTasksToAnyTaskLists">CanAddTasksToAnyTaskLists.</param>
            <param name="CanEditEditableTasks">CanEditEditableTasks.</param>
            <param name="CanEditAnyTasks">CanEditAnyTasks.</param>
            <param name="CanDeleteDeletableTasks">CanDeleteDeletableTasks.</param>
            <param name="CanDeleteAnyTasks">CanDeleteAnyTasks.</param>
            <param name="CanApplyTaskList">CanApplyTaskList.</param>
            <param name="CanRemoveAnyTaskList">CanRemoveAnyTaskList.</param>
            <param name="CanSubmitTaskList">CanSubmitTaskList.</param>
            <param name="CanAutoSubmitTaskList">CanAutoSubmitTaskList.</param>
            <param name="CanReviewTaskList">CanReviewTaskList.</param>
            <param name="CanAutoApproveTaskList">CanAutoApproveTaskList.</param>
            <param name="CanManageTaskTemplatesForAllRegionsAllOffices">CanManageTaskTemplatesForAllRegionsAllOffices.</param>
            <param name="CanApplyRoomTemplates">CanApplyRoomTemplates.</param>
            <param name="CanAddTasksToRooms">CanAddTasksToRooms.</param>
            <param name="CanCreateAndManagePackages">CanCreateAndManagePackages.</param>
            <param name="CanAddMemberAndSetRoleLowerAccessLevel">CanAddMemberAndSetRoleLowerAccessLevel.</param>
            <param name="CanAddMemberAndSetRoleSameAccessLevel">CanAddMemberAndSetRoleSameAccessLevel.</param>
            <param name="CanChangeMemberRoleLowerAccessLevel">CanChangeMemberRoleLowerAccessLevel.</param>
            <param name="CanChangeMemberRoleSameAccessLevel">CanChangeMemberRoleSameAccessLevel.</param>
            <param name="CanManageMemberLowerAccessLevel">CanManageMemberLowerAccessLevel.</param>
            <param name="CanManageMemberSameAccessLevel">CanManageMemberSameAccessLevel.</param>
            <param name="CanRemoveCompanyMemberLowerAccessLevel">CanRemoveCompanyMemberLowerAccessLevel.</param>
            <param name="CanRemoveCompanyMemberSameAccessLevel">CanRemoveCompanyMemberSameAccessLevel.</param>
            <param name="CanManageAccount">CanManageAccount.</param>
            <param name="CanManageLogo">CanManageLogo.</param>
            <param name="CanManageRoomDetails">CanManageRoomDetails.</param>
            <param name="CanManageRoomTemplates">CanManageRoomTemplates.</param>
            <param name="CanManageIntegrationSettings">CanManageIntegrationSettings.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAddUsersToRooms">
            <summary>
            Gets or Sets CanAddUsersToRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanCreateRooms">
            <summary>
            Gets or Sets CanCreateRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanSubmitRoomsForReview">
            <summary>
            Gets or Sets CanSubmitRoomsForReview
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanCloseRooms">
            <summary>
            Gets or Sets CanCloseRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanReopenRooms">
            <summary>
            Gets or Sets CanReopenRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanDeleteOwnedRooms">
            <summary>
            Gets or Sets CanDeleteOwnedRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.AutoAccessToRooms">
            <summary>
            Gets or Sets AutoAccessToRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanExportRoomActivityDetailsPeople">
            <summary>
            Gets or Sets CanExportRoomActivityDetailsPeople
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.IsVisibleInRooms">
            <summary>
            Gets or Sets IsVisibleInRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanCopyRoomDetails">
            <summary>
            Gets or Sets CanCopyRoomDetails
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanEditAnyRoomRole">
            <summary>
            Gets or Sets CanEditAnyRoomRole
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanEditInvitedRoomRole">
            <summary>
            Gets or Sets CanEditInvitedRoomRole
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageAnyUserRoomAccess">
            <summary>
            Gets or Sets CanManageAnyUserRoomAccess
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageInvitedUserRoomAccess">
            <summary>
            Gets or Sets CanManageInvitedUserRoomAccess
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanViewRoomDetails">
            <summary>
            Gets or Sets CanViewRoomDetails
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanViewAndEditRoomDetails">
            <summary>
            Gets or Sets CanViewAndEditRoomDetails
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanSendRoomDetailsToLoneWolf">
            <summary>
            Gets or Sets CanSendRoomDetailsToLoneWolf
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAddDocuments">
            <summary>
            Gets or Sets CanAddDocuments
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAddDocumentsFromFormGroups">
            <summary>
            Gets or Sets CanAddDocumentsFromFormGroups
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAddDocumentsFromFormLibraries">
            <summary>
            Gets or Sets CanAddDocumentsFromFormLibraries
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.DocumentsViewableByOthersInRoomFromOffice">
            <summary>
            Gets or Sets DocumentsViewableByOthersInRoomFromOffice
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.DocumentsAutoOwnedByPeers">
            <summary>
            Gets or Sets DocumentsAutoOwnedByPeers
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanDeleteOwnedDocuments">
            <summary>
            Gets or Sets CanDeleteOwnedDocuments
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageSharedDocs">
            <summary>
            Gets or Sets CanManageSharedDocs
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageFormGroups">
            <summary>
            Gets or Sets CanManageFormGroups
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanShareDocsNotOwned">
            <summary>
            Gets or Sets CanShareDocsNotOwned
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAddTasksToAnyTaskLists">
            <summary>
            Gets or Sets CanAddTasksToAnyTaskLists
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanEditEditableTasks">
            <summary>
            Gets or Sets CanEditEditableTasks
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanEditAnyTasks">
            <summary>
            Gets or Sets CanEditAnyTasks
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanDeleteDeletableTasks">
            <summary>
            Gets or Sets CanDeleteDeletableTasks
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanDeleteAnyTasks">
            <summary>
            Gets or Sets CanDeleteAnyTasks
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanApplyTaskList">
            <summary>
            Gets or Sets CanApplyTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanRemoveAnyTaskList">
            <summary>
            Gets or Sets CanRemoveAnyTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanSubmitTaskList">
            <summary>
            Gets or Sets CanSubmitTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAutoSubmitTaskList">
            <summary>
            Gets or Sets CanAutoSubmitTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanReviewTaskList">
            <summary>
            Gets or Sets CanReviewTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAutoApproveTaskList">
            <summary>
            Gets or Sets CanAutoApproveTaskList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageTaskTemplatesForAllRegionsAllOffices">
            <summary>
            Gets or Sets CanManageTaskTemplatesForAllRegionsAllOffices
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanApplyRoomTemplates">
            <summary>
            Gets or Sets CanApplyRoomTemplates
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAddTasksToRooms">
            <summary>
            Gets or Sets CanAddTasksToRooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanCreateAndManagePackages">
            <summary>
            Gets or Sets CanCreateAndManagePackages
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAddMemberAndSetRoleLowerAccessLevel">
            <summary>
            Gets or Sets CanAddMemberAndSetRoleLowerAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanAddMemberAndSetRoleSameAccessLevel">
            <summary>
            Gets or Sets CanAddMemberAndSetRoleSameAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanChangeMemberRoleLowerAccessLevel">
            <summary>
            Gets or Sets CanChangeMemberRoleLowerAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanChangeMemberRoleSameAccessLevel">
            <summary>
            Gets or Sets CanChangeMemberRoleSameAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageMemberLowerAccessLevel">
            <summary>
            Gets or Sets CanManageMemberLowerAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageMemberSameAccessLevel">
            <summary>
            Gets or Sets CanManageMemberSameAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanRemoveCompanyMemberLowerAccessLevel">
            <summary>
            Gets or Sets CanRemoveCompanyMemberLowerAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanRemoveCompanyMemberSameAccessLevel">
            <summary>
            Gets or Sets CanRemoveCompanyMemberSameAccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageAccount">
            <summary>
            Gets or Sets CanManageAccount
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageLogo">
            <summary>
            Gets or Sets CanManageLogo
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageRoomDetails">
            <summary>
            Gets or Sets CanManageRoomDetails
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageRoomTemplates">
            <summary>
            Gets or Sets CanManageRoomTemplates
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Permissions.CanManageIntegrationSettings">
            <summary>
            Gets or Sets CanManageIntegrationSettings
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Permissions.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Permissions.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Permissions.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Permissions.Equals(DocuSign.Rooms.Model.Permissions)">
            <summary>
            Returns true if Permissions instances are equal
            </summary>
            <param name="other">Instance of Permissions to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Permissions.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.PostEventBody">
            <summary>
            Model representing the object passed to the set event endpoint.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostEventBody.#ctor(System.String,System.String,System.Object,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.PostEventBody" /> class.
            </summary>
            <param name="EventType">Type of the event added to the list of events tied to the transaction. A schema validating this kind of event must have been created in a first place. (required).</param>
            <param name="ActorId">Actor identifier. This enables to attach this event to a particular actor..</param>
            <param name="Payload">This parameter is formed by a json containing all relevant information about the event. This Json must match a particular structure defined by the type of the event and the type of the entity (see validation schemas)..</param>
            <param name="PayloadModelVersion">Version of the validation model. Each model is versioned. (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostEventBody.EventType">
            <summary>
            Type of the event added to the list of events tied to the transaction. A schema validating this kind of event must have been created in a first place.
            </summary>
            <value>Type of the event added to the list of events tied to the transaction. A schema validating this kind of event must have been created in a first place.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostEventBody.ActorId">
            <summary>
            Actor identifier. This enables to attach this event to a particular actor.
            </summary>
            <value>Actor identifier. This enables to attach this event to a particular actor.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostEventBody.Payload">
            <summary>
            This parameter is formed by a json containing all relevant information about the event. This Json must match a particular structure defined by the type of the event and the type of the entity (see validation schemas).
            </summary>
            <value>This parameter is formed by a json containing all relevant information about the event. This Json must match a particular structure defined by the type of the event and the type of the entity (see validation schemas).</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostEventBody.PayloadModelVersion">
            <summary>
            Version of the validation model. Each model is versioned.
            </summary>
            <value>Version of the validation model. Each model is versioned.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostEventBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostEventBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostEventBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostEventBody.Equals(DocuSign.Rooms.Model.PostEventBody)">
            <summary>
            Returns true if PostEventBody instances are equal
            </summary>
            <param name="other">Instance of PostEventBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostEventBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.PostFrontViewBody">
            <summary>
            Model representing the object passed to the create front view endpoint.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostFrontViewBody.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.PostFrontViewBody" /> class.
            </summary>
            <param name="EventsTypes">List of events types that are bound to a proof webapp view. These events types must be those we will use in the insertion of events. (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostFrontViewBody.EventsTypes">
            <summary>
            List of events types that are bound to a proof webapp view. These events types must be those we will use in the insertion of events.
            </summary>
            <value>List of events types that are bound to a proof webapp view. These events types must be those we will use in the insertion of events.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostFrontViewBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostFrontViewBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostFrontViewBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostFrontViewBody.Equals(DocuSign.Rooms.Model.PostFrontViewBody)">
            <summary>
            Returns true if PostFrontViewBody instances are equal
            </summary>
            <param name="other">Instance of PostFrontViewBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostFrontViewBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.PostViewSchemaBody">
            <summary>
            Model representing the object passed to the insert view schema endpoint.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostViewSchemaBody.#ctor(System.String,System.String,System.Object,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.PostViewSchemaBody" /> class.
            </summary>
            <param name="EntityType">Type of the entity. i.e room, user, envelope... (required).</param>
            <param name="EventType">Type of the event. This property depends on the source, the creator of an event. The proof service does not have any pre-establish list of events types.  It is totally up to the external service, that calls the proof service, to decide and manage their events types. (required).</param>
            <param name="Data">JSON based format representing the data to render. It&#39;s a partial part of the validation schema it is bound to. (required).</param>
            <param name="Authority">Audience or authority who can access the schema. It could be a title like \&quot;judge\&quot;, a denomination like \&quot;sender\&quot;, or any label you want like \&quot;everyone\&quot; or \&quot;level one of sensitiveness\&quot;.   This definition is up to the external service to define and to manage. However it is a mandatory field in the view schema definition. (required).</param>
            <param name="DataModelValidationVersion">Data model validation version. This object is bound to a data model validation schema at a specified version. (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostViewSchemaBody.EntityType">
            <summary>
            Type of the entity. i.e room, user, envelope...
            </summary>
            <value>Type of the entity. i.e room, user, envelope...</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostViewSchemaBody.EventType">
            <summary>
            Type of the event. This property depends on the source, the creator of an event. The proof service does not have any pre-establish list of events types.  It is totally up to the external service, that calls the proof service, to decide and manage their events types.
            </summary>
            <value>Type of the event. This property depends on the source, the creator of an event. The proof service does not have any pre-establish list of events types.  It is totally up to the external service, that calls the proof service, to decide and manage their events types.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostViewSchemaBody.Data">
            <summary>
            JSON based format representing the data to render. It&#39;s a partial part of the validation schema it is bound to.
            </summary>
            <value>JSON based format representing the data to render. It&#39;s a partial part of the validation schema it is bound to.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostViewSchemaBody.Authority">
            <summary>
            Audience or authority who can access the schema. It could be a title like \&quot;judge\&quot;, a denomination like \&quot;sender\&quot;, or any label you want like \&quot;everyone\&quot; or \&quot;level one of sensitiveness\&quot;.   This definition is up to the external service to define and to manage. However it is a mandatory field in the view schema definition.
            </summary>
            <value>Audience or authority who can access the schema. It could be a title like \&quot;judge\&quot;, a denomination like \&quot;sender\&quot;, or any label you want like \&quot;everyone\&quot; or \&quot;level one of sensitiveness\&quot;.   This definition is up to the external service to define and to manage. However it is a mandatory field in the view schema definition.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.PostViewSchemaBody.DataModelValidationVersion">
            <summary>
            Data model validation version. This object is bound to a data model validation schema at a specified version.
            </summary>
            <value>Data model validation version. This object is bound to a data model validation schema at a specified version.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostViewSchemaBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostViewSchemaBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostViewSchemaBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostViewSchemaBody.Equals(DocuSign.Rooms.Model.PostViewSchemaBody)">
            <summary>
            Returns true if PostViewSchemaBody instances are equal
            </summary>
            <param name="other">Instance of PostViewSchemaBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PostViewSchemaBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.PropertyType">
            <summary>
            PropertyType
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.PropertyType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.PropertyType" /> class.
            </summary>
            <param name="PropertyTypeId">PropertyTypeId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.PropertyType.PropertyTypeId">
            <summary>
            Gets or Sets PropertyTypeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.PropertyType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.PropertyType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PropertyType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PropertyType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PropertyType.Equals(DocuSign.Rooms.Model.PropertyType)">
            <summary>
            Returns true if PropertyType instances are equal
            </summary>
            <param name="other">Instance of PropertyType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PropertyType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.PutFrontViewBody">
            <summary>
            Model representing the object passed to the update front view endpoint.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutFrontViewBody.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.PutFrontViewBody" /> class.
            </summary>
            <param name="EventsTypes">List of events types that are bound to a proof webapp view. These events types must be those we will use in the insertion of events. (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.PutFrontViewBody.EventsTypes">
            <summary>
            List of events types that are bound to a proof webapp view. These events types must be those we will use in the insertion of events.
            </summary>
            <value>List of events types that are bound to a proof webapp view. These events types must be those we will use in the insertion of events.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutFrontViewBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutFrontViewBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutFrontViewBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutFrontViewBody.Equals(DocuSign.Rooms.Model.PutFrontViewBody)">
            <summary>
            Returns true if PutFrontViewBody instances are equal
            </summary>
            <param name="other">Instance of PutFrontViewBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutFrontViewBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.PutViewSchemaBody">
            <summary>
            Model representing the object passed to the update view schema endpoint.
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutViewSchemaBody.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.PutViewSchemaBody" /> class.
            </summary>
            <param name="Data">JSON based format representing the data to render. (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.PutViewSchemaBody.Data">
            <summary>
            JSON based format representing the data to render.
            </summary>
            <value>JSON based format representing the data to render.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutViewSchemaBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutViewSchemaBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutViewSchemaBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutViewSchemaBody.Equals(DocuSign.Rooms.Model.PutViewSchemaBody)">
            <summary>
            Returns true if PutViewSchemaBody instances are equal
            </summary>
            <param name="other">Instance of PutViewSchemaBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.PutViewSchemaBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.Region">
            <summary>
            Region
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Region.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.Region" /> class.
            </summary>
            <param name="Name">Name (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.Region.RegionId">
            <summary>
            Gets or Sets RegionId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Region.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Region.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Region.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Region.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Region.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Region.Equals(DocuSign.Rooms.Model.Region)">
            <summary>
            Returns true if Region instances are equal
            </summary>
            <param name="other">Instance of Region to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Region.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RegionReferenceCount">
            <summary>
            RegionReferenceCount
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionReferenceCount.ReferenceType">
            <summary>
            Gets or Sets ReferenceType
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionReferenceCount.ReferenceCount">
            <summary>
            Gets or Sets ReferenceCount
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCount.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCount.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCount.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCount.Equals(DocuSign.Rooms.Model.RegionReferenceCount)">
            <summary>
            Returns true if RegionReferenceCount instances are equal
            </summary>
            <param name="other">Instance of RegionReferenceCount to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCount.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RegionReferenceCountList">
            <summary>
            RegionReferenceCountList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCountList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.RegionReferenceCount})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RegionReferenceCountList" /> class.
            </summary>
            <param name="ReferenceCounts">ReferenceCounts.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionReferenceCountList.ReferenceCounts">
            <summary>
            Gets or Sets ReferenceCounts
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCountList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCountList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCountList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCountList.Equals(DocuSign.Rooms.Model.RegionReferenceCountList)">
            <summary>
            Returns true if RegionReferenceCountList instances are equal
            </summary>
            <param name="other">Instance of RegionReferenceCountList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionReferenceCountList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RegionSummary">
            <summary>
            RegionSummary
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummary.#ctor(System.Nullable{System.Int32},System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RegionSummary" /> class.
            </summary>
            <param name="RegionId">RegionId.</param>
            <param name="Name">Name.</param>
            <param name="CreatedDate">CreatedDate.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionSummary.RegionId">
            <summary>
            Gets or Sets RegionId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionSummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionSummary.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummary.Equals(DocuSign.Rooms.Model.RegionSummary)">
            <summary>
            Returns true if RegionSummary instances are equal
            </summary>
            <param name="other">Instance of RegionSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RegionSummaryList">
            <summary>
            RegionSummaryList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummaryList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.RegionSummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RegionSummaryList" /> class.
            </summary>
            <param name="RegionSummaries">RegionSummaries.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionSummaryList.RegionSummaries">
            <summary>
            Gets or Sets RegionSummaries
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionSummaryList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionSummaryList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionSummaryList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionSummaryList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RegionSummaryList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummaryList.Equals(DocuSign.Rooms.Model.RegionSummaryList)">
            <summary>
            Returns true if RegionSummaryList instances are equal
            </summary>
            <param name="other">Instance of RegionSummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RegionSummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Role.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.DateTime,System.Nullable{System.Boolean},DocuSign.Rooms.Model.NullablePermissions)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.Role" /> class.
            </summary>
            <param name="RoleId">RoleId.</param>
            <param name="LegacyRoleId">LegacyRoleId.</param>
            <param name="Name">Name.</param>
            <param name="IsDefaultForAdmin">IsDefaultForAdmin.</param>
            <param name="IsExternal">IsExternal.</param>
            <param name="CreatedDate">CreatedDate.</param>
            <param name="IsAssigned">IsAssigned.</param>
            <param name="Permissions">Permissions.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.Role.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Role.LegacyRoleId">
            <summary>
            Gets or Sets LegacyRoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Role.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Role.IsDefaultForAdmin">
            <summary>
            Gets or Sets IsDefaultForAdmin
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Role.IsExternal">
            <summary>
            Gets or Sets IsExternal
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Role.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Role.IsAssigned">
            <summary>
            Gets or Sets IsAssigned
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Role.Permissions">
            <summary>
            Gets or Sets Permissions
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Role.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Role.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Role.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Role.Equals(DocuSign.Rooms.Model.Role)">
            <summary>
            Returns true if Role instances are equal
            </summary>
            <param name="other">Instance of Role to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Role.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoleForCreate">
            <summary>
            RoleForCreate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForCreate.#ctor(System.String,System.Nullable{System.Boolean},DocuSign.Rooms.Model.Permissions)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoleForCreate" /> class.
            </summary>
            <param name="Name">Name.</param>
            <param name="IsExternal">IsExternal.</param>
            <param name="Permissions">Permissions.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleForCreate.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleForCreate.IsExternal">
            <summary>
            Gets or Sets IsExternal
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleForCreate.Permissions">
            <summary>
            Gets or Sets Permissions
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForCreate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForCreate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForCreate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForCreate.Equals(DocuSign.Rooms.Model.RoleForCreate)">
            <summary>
            Returns true if RoleForCreate instances are equal
            </summary>
            <param name="other">Instance of RoleForCreate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForCreate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoleForUpdate">
            <summary>
            RoleForUpdate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForUpdate.#ctor(System.String,System.Nullable{System.Boolean},DocuSign.Rooms.Model.Permissions)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoleForUpdate" /> class.
            </summary>
            <param name="Name">Name.</param>
            <param name="IsExternal">IsExternal.</param>
            <param name="Permissions">Permissions.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleForUpdate.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleForUpdate.IsExternal">
            <summary>
            Gets or Sets IsExternal
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleForUpdate.Permissions">
            <summary>
            Gets or Sets Permissions
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForUpdate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForUpdate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForUpdate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForUpdate.Equals(DocuSign.Rooms.Model.RoleForUpdate)">
            <summary>
            Returns true if RoleForUpdate instances are equal
            </summary>
            <param name="other">Instance of RoleForUpdate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleForUpdate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoleSummary">
            <summary>
            RoleSummary
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummary.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoleSummary" /> class.
            </summary>
            <param name="RoleId">RoleId.</param>
            <param name="LegacyRoleId">LegacyRoleId.</param>
            <param name="Name">Name.</param>
            <param name="IsDefaultForAdmin">IsDefaultForAdmin.</param>
            <param name="IsExternal">IsExternal.</param>
            <param name="CreatedDate">CreatedDate.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummary.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummary.LegacyRoleId">
            <summary>
            Gets or Sets LegacyRoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummary.IsDefaultForAdmin">
            <summary>
            Gets or Sets IsDefaultForAdmin
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummary.IsExternal">
            <summary>
            Gets or Sets IsExternal
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummary.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummary.Equals(DocuSign.Rooms.Model.RoleSummary)">
            <summary>
            Returns true if RoleSummary instances are equal
            </summary>
            <param name="other">Instance of RoleSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoleSummaryList">
            <summary>
            RoleSummaryList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummaryList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.RoleSummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoleSummaryList" /> class.
            </summary>
            <param name="Roles">Roles.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummaryList.Roles">
            <summary>
            Gets or Sets Roles
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummaryList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummaryList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummaryList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummaryList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoleSummaryList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummaryList.Equals(DocuSign.Rooms.Model.RoleSummaryList)">
            <summary>
            Returns true if RoleSummaryList instances are equal
            </summary>
            <param name="other">Instance of RoleSummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoleSummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.Room">
            <summary>
            Room
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Room.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,DocuSign.Rooms.Model.NullableFieldData)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.Room" /> class.
            </summary>
            <param name="RoomId">RoomId.</param>
            <param name="CompanyId">CompanyId.</param>
            <param name="Name">Name.</param>
            <param name="OfficeId">OfficeId.</param>
            <param name="CreatedDate">CreatedDate.</param>
            <param name="SubmittedForReviewDate">SubmittedForReviewDate.</param>
            <param name="ClosedDate">ClosedDate.</param>
            <param name="RejectedDate">RejectedDate.</param>
            <param name="CreatedByUserId">CreatedByUserId.</param>
            <param name="RejectedByUserId">RejectedByUserId.</param>
            <param name="ClosedStatusId">ClosedStatusId.</param>
            <param name="FieldData">FieldData.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.RoomId">
            <summary>
            Gets or Sets RoomId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.CompanyId">
            <summary>
            Gets or Sets CompanyId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.OfficeId">
            <summary>
            Gets or Sets OfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.SubmittedForReviewDate">
            <summary>
            Gets or Sets SubmittedForReviewDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.ClosedDate">
            <summary>
            Gets or Sets ClosedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.RejectedDate">
            <summary>
            Gets or Sets RejectedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.CreatedByUserId">
            <summary>
            Gets or Sets CreatedByUserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.RejectedByUserId">
            <summary>
            Gets or Sets RejectedByUserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.ClosedStatusId">
            <summary>
            Gets or Sets ClosedStatusId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.Room.FieldData">
            <summary>
            Gets or Sets FieldData
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.Room.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Room.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Room.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Room.Equals(DocuSign.Rooms.Model.Room)">
            <summary>
            Returns true if Room instances are equal
            </summary>
            <param name="other">Instance of Room to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.Room.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomContactType">
            <summary>
            RoomContactType
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomContactType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomContactType" /> class.
            </summary>
            <param name="Id">Id.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomContactType.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomContactType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomContactType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomContactType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomContactType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomContactType.Equals(DocuSign.Rooms.Model.RoomContactType)">
            <summary>
            Returns true if RoomContactType instances are equal
            </summary>
            <param name="other">Instance of RoomContactType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomContactType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomDocument">
            <summary>
            RoomDocument
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocument.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Int32},System.DateTime,System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomDocument" /> class.
            </summary>
            <param name="DocumentId">DocumentId.</param>
            <param name="Name">Name.</param>
            <param name="OwnerId">OwnerId.</param>
            <param name="Size">Size.</param>
            <param name="FolderId">FolderId.</param>
            <param name="CreatedDate">CreatedDate.</param>
            <param name="IsSigned">IsSigned.</param>
            <param name="DocuSignFormId">DocuSignFormId.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocument.DocumentId">
            <summary>
            Gets or Sets DocumentId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocument.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocument.OwnerId">
            <summary>
            Gets or Sets OwnerId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocument.Size">
            <summary>
            Gets or Sets Size
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocument.FolderId">
            <summary>
            Gets or Sets FolderId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocument.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocument.IsSigned">
            <summary>
            Gets or Sets IsSigned
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocument.DocuSignFormId">
            <summary>
            Gets or Sets DocuSignFormId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocument.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocument.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocument.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocument.Equals(DocuSign.Rooms.Model.RoomDocument)">
            <summary>
            Returns true if RoomDocument instances are equal
            </summary>
            <param name="other">Instance of RoomDocument to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocument.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomDocumentList">
            <summary>
            RoomDocumentList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocumentList.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.List{DocuSign.Rooms.Model.RoomDocument})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomDocumentList" /> class.
            </summary>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
            <param name="Documents">Documents.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocumentList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocumentList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocumentList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocumentList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocumentList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomDocumentList.Documents">
            <summary>
            Gets or Sets Documents
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocumentList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocumentList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocumentList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocumentList.Equals(DocuSign.Rooms.Model.RoomDocumentList)">
            <summary>
            Returns true if RoomDocumentList instances are equal
            </summary>
            <param name="other">Instance of RoomDocumentList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomDocumentList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomFolder">
            <summary>
            RoomFolder
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolder.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomFolder" /> class.
            </summary>
            <param name="RoomFolderId">RoomFolderId.</param>
            <param name="Name">Name.</param>
            <param name="IsDefault">IsDefault.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomFolder.RoomFolderId">
            <summary>
            Gets or Sets RoomFolderId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomFolder.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomFolder.IsDefault">
            <summary>
            Gets or Sets IsDefault
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolder.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolder.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolder.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolder.Equals(DocuSign.Rooms.Model.RoomFolder)">
            <summary>
            Returns true if RoomFolder instances are equal
            </summary>
            <param name="other">Instance of RoomFolder to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolder.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomFolderList">
            <summary>
            RoomFolderList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolderList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.RoomFolder},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomFolderList" /> class.
            </summary>
            <param name="Folders">Folders.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomFolderList.Folders">
            <summary>
            Gets or Sets Folders
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomFolderList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomFolderList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomFolderList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomFolderList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomFolderList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolderList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolderList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolderList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolderList.Equals(DocuSign.Rooms.Model.RoomFolderList)">
            <summary>
            Returns true if RoomFolderList instances are equal
            </summary>
            <param name="other">Instance of RoomFolderList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomFolderList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomForCreate">
            <summary>
            RoomForCreate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomForCreate.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},DocuSign.Rooms.Model.FieldDataForCreate)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomForCreate" /> class.
            </summary>
            <param name="Name">Name (required).</param>
            <param name="RoleId">RoleId (required).</param>
            <param name="TransactionSideId">Required for a real estate company; otherwise ignored..</param>
            <param name="OwnerId">OwnerId.</param>
            <param name="TemplateId">TemplateId.</param>
            <param name="OfficeId">OfficeId.</param>
            <param name="FieldData">FieldData.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomForCreate.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomForCreate.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomForCreate.TransactionSideId">
            <summary>
            Required for a real estate company; otherwise ignored.
            </summary>
            <value>Required for a real estate company; otherwise ignored.</value>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomForCreate.OwnerId">
            <summary>
            Gets or Sets OwnerId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomForCreate.TemplateId">
            <summary>
            Gets or Sets TemplateId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomForCreate.OfficeId">
            <summary>
            Gets or Sets OfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomForCreate.FieldData">
            <summary>
            Gets or Sets FieldData
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomForCreate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomForCreate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomForCreate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomForCreate.Equals(DocuSign.Rooms.Model.RoomForCreate)">
            <summary>
            Returns true if RoomForCreate instances are equal
            </summary>
            <param name="other">Instance of RoomForCreate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomForCreate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomInvite">
            <summary>
            RoomInvite
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInvite.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomInvite" /> class.
            </summary>
            <param name="Email">Email (required).</param>
            <param name="FirstName">FirstName (required).</param>
            <param name="LastName">LastName (required).</param>
            <param name="RoleId">RoleId (required).</param>
            <param name="TransactionSideId">Required for a real estate company; otherwise ignored..</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInvite.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInvite.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInvite.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInvite.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInvite.TransactionSideId">
            <summary>
            Required for a real estate company; otherwise ignored.
            </summary>
            <value>Required for a real estate company; otherwise ignored.</value>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInvite.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInvite.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInvite.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInvite.Equals(DocuSign.Rooms.Model.RoomInvite)">
            <summary>
            Returns true if RoomInvite instances are equal
            </summary>
            <param name="other">Instance of RoomInvite to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInvite.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomInviteResponse">
            <summary>
            RoomInviteResponse
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInviteResponse.UserId">
            <summary>
            Gets or Sets UserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInviteResponse.RoomId">
            <summary>
            Gets or Sets RoomId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInviteResponse.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInviteResponse.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInviteResponse.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInviteResponse.TransactionSideId">
            <summary>
            Gets or Sets TransactionSideId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomInviteResponse.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInviteResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInviteResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInviteResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInviteResponse.Equals(DocuSign.Rooms.Model.RoomInviteResponse)">
            <summary>
            Returns true if RoomInviteResponse instances are equal
            </summary>
            <param name="other">Instance of RoomInviteResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomInviteResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomPicture">
            <summary>
            RoomPicture
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomPicture.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomPicture" /> class.
            </summary>
            <param name="Url">Url.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomPicture.Url">
            <summary>
            Gets or Sets Url
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomPicture.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomPicture.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomPicture.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomPicture.Equals(DocuSign.Rooms.Model.RoomPicture)">
            <summary>
            Returns true if RoomPicture instances are equal
            </summary>
            <param name="other">Instance of RoomPicture to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomPicture.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomSummary">
            <summary>
            RoomSummary
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.RoomId">
            <summary>
            Gets or Sets RoomId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.OfficeId">
            <summary>
            Gets or Sets OfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.SubmittedForReviewDate">
            <summary>
            Gets or Sets SubmittedForReviewDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.ClosedDate">
            <summary>
            Gets or Sets ClosedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.RejectedDate">
            <summary>
            Gets or Sets RejectedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.CreatedByUserId">
            <summary>
            Gets or Sets CreatedByUserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.RejectedByUserId">
            <summary>
            Gets or Sets RejectedByUserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.ClosedStatusId">
            <summary>
            Gets or Sets ClosedStatusId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummary.FieldDataLastUpdatedDate">
            <summary>
            Gets or Sets FieldDataLastUpdatedDate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummary.Equals(DocuSign.Rooms.Model.RoomSummary)">
            <summary>
            Returns true if RoomSummary instances are equal
            </summary>
            <param name="other">Instance of RoomSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomSummaryList">
            <summary>
            RoomSummaryList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummaryList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.RoomSummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomSummaryList" /> class.
            </summary>
            <param name="Rooms">Rooms.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummaryList.Rooms">
            <summary>
            Gets or Sets Rooms
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummaryList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummaryList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummaryList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummaryList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomSummaryList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummaryList.Equals(DocuSign.Rooms.Model.RoomSummaryList)">
            <summary>
            Returns true if RoomSummaryList instances are equal
            </summary>
            <param name="other">Instance of RoomSummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomSummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomTemplate">
            <summary>
            RoomTemplate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomTemplate.RoomTemplateId">
            <summary>
            Gets or Sets RoomTemplateId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomTemplate.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomTemplate.TaskTemplateCount">
            <summary>
            Gets or Sets TaskTemplateCount
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplate.Equals(DocuSign.Rooms.Model.RoomTemplate)">
            <summary>
            Returns true if RoomTemplate instances are equal
            </summary>
            <param name="other">Instance of RoomTemplate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomTemplatesSummaryList">
            <summary>
            RoomTemplatesSummaryList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplatesSummaryList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.RoomTemplate},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomTemplatesSummaryList" /> class.
            </summary>
            <param name="RoomTemplates">RoomTemplates.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomTemplatesSummaryList.RoomTemplates">
            <summary>
            Gets or Sets RoomTemplates
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomTemplatesSummaryList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomTemplatesSummaryList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomTemplatesSummaryList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomTemplatesSummaryList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomTemplatesSummaryList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplatesSummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplatesSummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplatesSummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplatesSummaryList.Equals(DocuSign.Rooms.Model.RoomTemplatesSummaryList)">
            <summary>
            Returns true if RoomTemplatesSummaryList instances are equal
            </summary>
            <param name="other">Instance of RoomTemplatesSummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomTemplatesSummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomUser">
            <summary>
            RoomUser
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUser.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomUser" /> class.
            </summary>
            <param name="UserId">UserId.</param>
            <param name="Email">Email.</param>
            <param name="FirstName">FirstName.</param>
            <param name="LastName">LastName.</param>
            <param name="TransactionSideId">TransactionSideId.</param>
            <param name="RoleId">RoleId.</param>
            <param name="IsRevoked">IsRevoked.</param>
            <param name="InvitedByUserId">InvitedByUserId.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUser.UserId">
            <summary>
            Gets or Sets UserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUser.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUser.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUser.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUser.TransactionSideId">
            <summary>
            Gets or Sets TransactionSideId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUser.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUser.IsRevoked">
            <summary>
            Gets or Sets IsRevoked
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUser.InvitedByUserId">
            <summary>
            Gets or Sets InvitedByUserId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUser.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUser.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUser.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUser.Equals(DocuSign.Rooms.Model.RoomUser)">
            <summary>
            Returns true if RoomUser instances are equal
            </summary>
            <param name="other">Instance of RoomUser to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUser.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomUserForUpdate">
            <summary>
            RoomUserForUpdate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserForUpdate.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomUserForUpdate" /> class.
            </summary>
            <param name="RoleId">RoleId.</param>
            <param name="TransactionSideId">TransactionSideId.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserForUpdate.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserForUpdate.TransactionSideId">
            <summary>
            Gets or Sets TransactionSideId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserForUpdate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserForUpdate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserForUpdate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserForUpdate.Equals(DocuSign.Rooms.Model.RoomUserForUpdate)">
            <summary>
            Returns true if RoomUserForUpdate instances are equal
            </summary>
            <param name="other">Instance of RoomUserForUpdate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserForUpdate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomUserRemovalDetail">
            <summary>
            RoomUserRemovalDetail
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserRemovalDetail.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomUserRemovalDetail" /> class.
            </summary>
            <param name="RevocationDate">RevocationDate.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserRemovalDetail.RevocationDate">
            <summary>
            Gets or Sets RevocationDate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserRemovalDetail.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserRemovalDetail.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserRemovalDetail.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserRemovalDetail.Equals(DocuSign.Rooms.Model.RoomUserRemovalDetail)">
            <summary>
            Returns true if RoomUserRemovalDetail instances are equal
            </summary>
            <param name="other">Instance of RoomUserRemovalDetail to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserRemovalDetail.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomUsersResult">
            <summary>
            RoomUsersResult
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUsersResult.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.RoomUserSummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.RoomUsersResult" /> class.
            </summary>
            <param name="Users">Users.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUsersResult.Users">
            <summary>
            Gets or Sets Users
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUsersResult.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUsersResult.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUsersResult.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUsersResult.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUsersResult.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUsersResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUsersResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUsersResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUsersResult.Equals(DocuSign.Rooms.Model.RoomUsersResult)">
            <summary>
            Returns true if RoomUsersResult instances are equal
            </summary>
            <param name="other">Instance of RoomUsersResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUsersResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.RoomUserSummary">
            <summary>
            RoomUserSummary
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserSummary.UserId">
            <summary>
            Gets or Sets UserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserSummary.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserSummary.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserSummary.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserSummary.TransactionSideId">
            <summary>
            Gets or Sets TransactionSideId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserSummary.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.RoomUserSummary.TitleId">
            <summary>
            Gets or Sets TitleId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserSummary.Equals(DocuSign.Rooms.Model.RoomUserSummary)">
            <summary>
            Returns true if RoomUserSummary instances are equal
            </summary>
            <param name="other">Instance of RoomUserSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.RoomUserSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.SelectListFieldOption">
            <summary>
            SelectListFieldOption
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.SelectListFieldOption.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.SelectListFieldOption.Title">
            <summary>
            Gets or Sets Title
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.SelectListFieldOption.Order">
            <summary>
            Gets or Sets Order
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.SelectListFieldOption.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SelectListFieldOption.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SelectListFieldOption.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SelectListFieldOption.Equals(DocuSign.Rooms.Model.SelectListFieldOption)">
            <summary>
            Returns true if SelectListFieldOption instances are equal
            </summary>
            <param name="other">Instance of SelectListFieldOption to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SelectListFieldOption.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.SellerDecisionType">
            <summary>
            SellerDecisionType
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.SellerDecisionType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.SellerDecisionType" /> class.
            </summary>
            <param name="SellerDecisionTypeId">SellerDecisionTypeId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.SellerDecisionType.SellerDecisionTypeId">
            <summary>
            Gets or Sets SellerDecisionTypeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.SellerDecisionType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.SellerDecisionType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SellerDecisionType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SellerDecisionType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SellerDecisionType.Equals(DocuSign.Rooms.Model.SellerDecisionType)">
            <summary>
            Returns true if SellerDecisionType instances are equal
            </summary>
            <param name="other">Instance of SellerDecisionType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SellerDecisionType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.SpecialCircumstanceType">
            <summary>
            SpecialCircumstanceType
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.SpecialCircumstanceType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.SpecialCircumstanceType" /> class.
            </summary>
            <param name="SpecialCircumstanceTypeId">SpecialCircumstanceTypeId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.SpecialCircumstanceType.SpecialCircumstanceTypeId">
            <summary>
            Gets or Sets SpecialCircumstanceTypeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.SpecialCircumstanceType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.SpecialCircumstanceType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SpecialCircumstanceType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SpecialCircumstanceType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SpecialCircumstanceType.Equals(DocuSign.Rooms.Model.SpecialCircumstanceType)">
            <summary>
            Returns true if SpecialCircumstanceType instances are equal
            </summary>
            <param name="other">Instance of SpecialCircumstanceType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.SpecialCircumstanceType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.State">
            <summary>
            State
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.State.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.State" /> class.
            </summary>
            <param name="StateId">StateId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.State.StateId">
            <summary>
            Gets or Sets StateId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.State.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.State.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.State.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.State.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.State.Equals(DocuSign.Rooms.Model.State)">
            <summary>
            Returns true if State instances are equal
            </summary>
            <param name="other">Instance of State to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.State.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskDateType">
            <summary>
            TaskDateType
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskDateType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TaskDateType" /> class.
            </summary>
            <param name="TaskDateTypeId">TaskDateTypeId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskDateType.TaskDateTypeId">
            <summary>
            Gets or Sets TaskDateTypeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskDateType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskDateType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskDateType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskDateType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskDateType.Equals(DocuSign.Rooms.Model.TaskDateType)">
            <summary>
            Returns true if TaskDateType instances are equal
            </summary>
            <param name="other">Instance of TaskDateType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskDateType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskList">
            <summary>
            TaskList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskList.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.List{DocuSign.Rooms.Model.TaskSummary})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TaskList" /> class.
            </summary>
            <param name="TaskListId">TaskListId.</param>
            <param name="Name">Name.</param>
            <param name="TaskListTemplateId">TaskListTemplateId.</param>
            <param name="SubmittedForReviewDate">SubmittedForReviewDate.</param>
            <param name="ApprovalDate">ApprovalDate.</param>
            <param name="RejectedDate">RejectedDate.</param>
            <param name="CreatedDate">CreatedDate.</param>
            <param name="ApprovedByUserId">ApprovedByUserId.</param>
            <param name="RejectedByUserId">RejectedByUserId.</param>
            <param name="Comment">Comment.</param>
            <param name="Tasks">Tasks.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.TaskListId">
            <summary>
            Gets or Sets TaskListId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.TaskListTemplateId">
            <summary>
            Gets or Sets TaskListTemplateId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.SubmittedForReviewDate">
            <summary>
            Gets or Sets SubmittedForReviewDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.ApprovalDate">
            <summary>
            Gets or Sets ApprovalDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.RejectedDate">
            <summary>
            Gets or Sets RejectedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.ApprovedByUserId">
            <summary>
            Gets or Sets ApprovedByUserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.RejectedByUserId">
            <summary>
            Gets or Sets RejectedByUserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.Comment">
            <summary>
            Gets or Sets Comment
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskList.Tasks">
            <summary>
            Gets or Sets Tasks
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskList.Equals(DocuSign.Rooms.Model.TaskList)">
            <summary>
            Returns true if TaskList instances are equal
            </summary>
            <param name="other">Instance of TaskList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskListForCreate">
            <summary>
            TaskListForCreate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListForCreate.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TaskListForCreate" /> class.
            </summary>
            <param name="TaskListTemplateId">TaskListTemplateId.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListForCreate.TaskListTemplateId">
            <summary>
            Gets or Sets TaskListTemplateId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListForCreate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListForCreate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListForCreate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListForCreate.Equals(DocuSign.Rooms.Model.TaskListForCreate)">
            <summary>
            Returns true if TaskListForCreate instances are equal
            </summary>
            <param name="other">Instance of TaskListForCreate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListForCreate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskListSummary">
            <summary>
            TaskListSummary
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.TaskListId">
            <summary>
            Gets or Sets TaskListId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.TaskListTemplateId">
            <summary>
            Gets or Sets TaskListTemplateId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.SubmittedForReviewDate">
            <summary>
            Gets or Sets SubmittedForReviewDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.ApprovalDate">
            <summary>
            Gets or Sets ApprovalDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.RejectedDate">
            <summary>
            Gets or Sets RejectedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.ApprovedByUserId">
            <summary>
            Gets or Sets ApprovedByUserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.RejectedByUserId">
            <summary>
            Gets or Sets RejectedByUserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummary.Comment">
            <summary>
            Gets or Sets Comment
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummary.Equals(DocuSign.Rooms.Model.TaskListSummary)">
            <summary>
            Returns true if TaskListSummary instances are equal
            </summary>
            <param name="other">Instance of TaskListSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskListSummaryList">
            <summary>
            TaskListSummaryList
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListSummaryList.TaskListSummaries">
            <summary>
            Gets or Sets TaskListSummaries
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummaryList.Equals(DocuSign.Rooms.Model.TaskListSummaryList)">
            <summary>
            Returns true if TaskListSummaryList instances are equal
            </summary>
            <param name="other">Instance of TaskListSummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListSummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskListTemplate">
            <summary>
            TaskListTemplate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplate.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TaskListTemplate" /> class.
            </summary>
            <param name="TaskListTemplateId">TaskListTemplateId.</param>
            <param name="Name">Name.</param>
            <param name="TaskCount">TaskCount.</param>
            <param name="TasksWithDocumentsCount">TasksWithDocumentsCount.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplate.TaskListTemplateId">
            <summary>
            Gets or Sets TaskListTemplateId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplate.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplate.TaskCount">
            <summary>
            Gets or Sets TaskCount
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplate.TasksWithDocumentsCount">
            <summary>
            Gets or Sets TasksWithDocumentsCount
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplate.Equals(DocuSign.Rooms.Model.TaskListTemplate)">
            <summary>
            Returns true if TaskListTemplate instances are equal
            </summary>
            <param name="other">Instance of TaskListTemplate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskListTemplateList">
            <summary>
            TaskListTemplateList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplateList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.TaskListTemplate},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TaskListTemplateList" /> class.
            </summary>
            <param name="TaskListTemplates">TaskListTemplates.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplateList.TaskListTemplates">
            <summary>
            Gets or Sets TaskListTemplates
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplateList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplateList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplateList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplateList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskListTemplateList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplateList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplateList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplateList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplateList.Equals(DocuSign.Rooms.Model.TaskListTemplateList)">
            <summary>
            Returns true if TaskListTemplateList instances are equal
            </summary>
            <param name="other">Instance of TaskListTemplateList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskListTemplateList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskResponsibilityType">
            <summary>
            TaskResponsibilityType
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskResponsibilityType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TaskResponsibilityType" /> class.
            </summary>
            <param name="TaskResponsibilityTypeId">TaskResponsibilityTypeId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskResponsibilityType.TaskResponsibilityTypeId">
            <summary>
            Gets or Sets TaskResponsibilityTypeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskResponsibilityType.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskResponsibilityType.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskResponsibilityType.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskResponsibilityType.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskResponsibilityType.Equals(DocuSign.Rooms.Model.TaskResponsibilityType)">
            <summary>
            Returns true if TaskResponsibilityType instances are equal
            </summary>
            <param name="other">Instance of TaskResponsibilityType to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskResponsibilityType.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskStatus">
            <summary>
            TaskStatus
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskStatus.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TaskStatus" /> class.
            </summary>
            <param name="TaskStatusId">TaskStatusId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskStatus.TaskStatusId">
            <summary>
            Gets or Sets TaskStatusId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskStatus.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskStatus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskStatus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskStatus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskStatus.Equals(DocuSign.Rooms.Model.TaskStatus)">
            <summary>
            Returns true if TaskStatus instances are equal
            </summary>
            <param name="other">Instance of TaskStatus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskStatus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TaskSummary">
            <summary>
            TaskSummary
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskSummary.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.DateTime,System.Nullable{System.Int32},System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TaskSummary" /> class.
            </summary>
            <param name="TaskId">TaskId.</param>
            <param name="Name">Name.</param>
            <param name="RequiresApproval">RequiresApproval.</param>
            <param name="DueDateTypeId">DueDateTypeId.</param>
            <param name="DueDateOffset">DueDateOffset.</param>
            <param name="FixedDueDate">FixedDueDate.</param>
            <param name="OwnerUserId">OwnerUserId.</param>
            <param name="CompletionDate">CompletionDate.</param>
            <param name="ApprovalDate">ApprovalDate.</param>
            <param name="RejectedDate">RejectedDate.</param>
            <param name="CreatedDate">CreatedDate.</param>
            <param name="IsDocumentTask">IsDocumentTask.</param>
            <param name="RequiresReview">RequiresReview.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.TaskId">
            <summary>
            Gets or Sets TaskId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.RequiresApproval">
            <summary>
            Gets or Sets RequiresApproval
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.DueDateTypeId">
            <summary>
            Gets or Sets DueDateTypeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.DueDateOffset">
            <summary>
            Gets or Sets DueDateOffset
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.FixedDueDate">
            <summary>
            Gets or Sets FixedDueDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.OwnerUserId">
            <summary>
            Gets or Sets OwnerUserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.CompletionDate">
            <summary>
            Gets or Sets CompletionDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.ApprovalDate">
            <summary>
            Gets or Sets ApprovalDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.RejectedDate">
            <summary>
            Gets or Sets RejectedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.CreatedDate">
            <summary>
            Gets or Sets CreatedDate
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.IsDocumentTask">
            <summary>
            Gets or Sets IsDocumentTask
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TaskSummary.RequiresReview">
            <summary>
            Gets or Sets RequiresReview
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskSummary.Equals(DocuSign.Rooms.Model.TaskSummary)">
            <summary>
            Returns true if TaskSummary instances are equal
            </summary>
            <param name="other">Instance of TaskSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TaskSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TimeZone">
            <summary>
            TimeZone
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TimeZone.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TimeZone" /> class.
            </summary>
            <param name="TimeZoneId">TimeZoneId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TimeZone.TimeZoneId">
            <summary>
            Gets or Sets TimeZoneId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TimeZone.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TimeZone.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TimeZone.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TimeZone.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TimeZone.Equals(DocuSign.Rooms.Model.TimeZone)">
            <summary>
            Returns true if TimeZone instances are equal
            </summary>
            <param name="other">Instance of TimeZone to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TimeZone.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.TransactionSide">
            <summary>
            TransactionSide
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TransactionSide.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.TransactionSide" /> class.
            </summary>
            <param name="TransactionSideId">TransactionSideId.</param>
            <param name="Name">Name.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.TransactionSide.TransactionSideId">
            <summary>
            Gets or Sets TransactionSideId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.TransactionSide.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.TransactionSide.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TransactionSide.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TransactionSide.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TransactionSide.Equals(DocuSign.Rooms.Model.TransactionSide)">
            <summary>
            Returns true if TransactionSide instances are equal
            </summary>
            <param name="other">Instance of TransactionSide to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.TransactionSide.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.User">
            <summary>
            User
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Model.User.AccessLevelEnum">
            <summary>
            Defines AccessLevel
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.User.AccessLevelEnum.Contributor">
            <summary>
            Enum Contributor for value: Contributor
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.User.AccessLevelEnum.Office">
            <summary>
            Enum Office for value: Office
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.User.AccessLevelEnum.Region">
            <summary>
            Enum Region for value: Region
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.User.AccessLevelEnum.Company">
            <summary>
            Enum Company for value: Company
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.User.AccessLevelEnum.Admin">
            <summary>
            Enum Admin for value: Admin
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.AccessLevel">
            <summary>
            Gets or Sets AccessLevel
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.User.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{DocuSign.Rooms.Model.User.AccessLevelEnum},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Collections.Generic.List{System.Nullable{System.Int32}},System.Collections.Generic.List{System.Nullable{System.Int32}},DocuSign.Rooms.Model.ClassicManagerPermissions)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.User" /> class.
            </summary>
            <param name="UserId">UserId.</param>
            <param name="Email">Email.</param>
            <param name="FirstName">FirstName.</param>
            <param name="LastName">LastName.</param>
            <param name="IsLockedOut">IsLockedOut.</param>
            <param name="Status">Status.</param>
            <param name="AccessLevel">AccessLevel.</param>
            <param name="DefaultOfficeId">DefaultOfficeId.</param>
            <param name="TitleId">TitleId.</param>
            <param name="RoleId">RoleId.</param>
            <param name="ProfileImageUrl">ProfileImageUrl.</param>
            <param name="Offices">Offices.</param>
            <param name="Regions">Regions.</param>
            <param name="Permissions">Permissions.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.UserId">
            <summary>
            Gets or Sets UserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.IsLockedOut">
            <summary>
            Gets or Sets IsLockedOut
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.DefaultOfficeId">
            <summary>
            Gets or Sets DefaultOfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.TitleId">
            <summary>
            Gets or Sets TitleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.ProfileImageUrl">
            <summary>
            Gets or Sets ProfileImageUrl
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.Offices">
            <summary>
            Gets or Sets Offices
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.Regions">
            <summary>
            Gets or Sets Regions
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.User.Permissions">
            <summary>
            Gets or Sets Permissions
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.User.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.User.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.User.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.User.Equals(DocuSign.Rooms.Model.User)">
            <summary>
            Returns true if User instances are equal
            </summary>
            <param name="other">Instance of User to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.User.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.UserForUpdate">
            <summary>
            UserForUpdate
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserForUpdate.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.UserForUpdate" /> class.
            </summary>
            <param name="DefaultOfficeId">DefaultOfficeId (required).</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserForUpdate.DefaultOfficeId">
            <summary>
            Gets or Sets DefaultOfficeId
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserForUpdate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserForUpdate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserForUpdate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserForUpdate.Equals(DocuSign.Rooms.Model.UserForUpdate)">
            <summary>
            Returns true if UserForUpdate instances are equal
            </summary>
            <param name="other">Instance of UserForUpdate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserForUpdate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.UserSummary">
            <summary>
            UserSummary
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Model.UserSummary.AccessLevelEnum">
            <summary>
            Defines AccessLevel
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserSummary.AccessLevelEnum.Contributor">
            <summary>
            Enum Contributor for value: Contributor
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserSummary.AccessLevelEnum.Office">
            <summary>
            Enum Office for value: Office
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserSummary.AccessLevelEnum.Region">
            <summary>
            Enum Region for value: Region
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserSummary.AccessLevelEnum.Company">
            <summary>
            Enum Company for value: Company
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserSummary.AccessLevelEnum.Admin">
            <summary>
            Enum Admin for value: Admin
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.AccessLevel">
            <summary>
            Gets or Sets AccessLevel
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.UserId">
            <summary>
            Gets or Sets UserId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.IsLockedOut">
            <summary>
            Gets or Sets IsLockedOut
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.DefaultOfficeId">
            <summary>
            Gets or Sets DefaultOfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.TitleId">
            <summary>
            Gets or Sets TitleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummary.ProfileImageUrl">
            <summary>
            Gets or Sets ProfileImageUrl
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummary.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummary.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummary.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummary.Equals(DocuSign.Rooms.Model.UserSummary)">
            <summary>
            Returns true if UserSummary instances are equal
            </summary>
            <param name="other">Instance of UserSummary to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummary.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.UserSummaryList">
            <summary>
            UserSummaryList
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummaryList.#ctor(System.Collections.Generic.List{DocuSign.Rooms.Model.UserSummary},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.UserSummaryList" /> class.
            </summary>
            <param name="UserSummaries">UserSummaries.</param>
            <param name="ResultSetSize">ResultSetSize.</param>
            <param name="StartPosition">StartPosition.</param>
            <param name="NextUri">NextUri.</param>
            <param name="PriorUri">PriorUri.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummaryList.UserSummaries">
            <summary>
            Gets or Sets UserSummaries
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummaryList.ResultSetSize">
            <summary>
            Gets or Sets ResultSetSize
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummaryList.StartPosition">
            <summary>
            Gets or Sets StartPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummaryList.EndPosition">
            <summary>
            Gets or Sets EndPosition
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummaryList.NextUri">
            <summary>
            Gets or Sets NextUri
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserSummaryList.PriorUri">
            <summary>
            Gets or Sets PriorUri
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummaryList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummaryList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummaryList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummaryList.Equals(DocuSign.Rooms.Model.UserSummaryList)">
            <summary>
            Returns true if UserSummaryList instances are equal
            </summary>
            <param name="other">Instance of UserSummaryList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserSummaryList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:DocuSign.Rooms.Model.UserToInvite">
            <summary>
            UserToInvite
            </summary>
        </member>
        <member name="T:DocuSign.Rooms.Model.UserToInvite.AccessLevelEnum">
            <summary>
            Defines AccessLevel
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserToInvite.AccessLevelEnum.Contributor">
            <summary>
            Enum Contributor for value: Contributor
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserToInvite.AccessLevelEnum.Office">
            <summary>
            Enum Office for value: Office
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserToInvite.AccessLevelEnum.Region">
            <summary>
            Enum Region for value: Region
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserToInvite.AccessLevelEnum.Company">
            <summary>
            Enum Company for value: Company
            </summary>
        </member>
        <member name="F:DocuSign.Rooms.Model.UserToInvite.AccessLevelEnum.Admin">
            <summary>
            Enum Admin for value: Admin
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.AccessLevel">
            <summary>
            Gets or Sets AccessLevel
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserToInvite.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{DocuSign.Rooms.Model.UserToInvite.AccessLevelEnum},System.Nullable{System.Int32},System.Collections.Generic.List{System.Nullable{System.Int32}},System.Collections.Generic.List{System.Nullable{System.Int32}},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DocuSign.Rooms.Model.UserToInvite" /> class.
            </summary>
            <param name="FirstName">FirstName (required).</param>
            <param name="LastName">LastName (required).</param>
            <param name="Email">Email (required).</param>
            <param name="RoleId">RoleId (required).</param>
            <param name="AccessLevel">AccessLevel (required).</param>
            <param name="DefaultOfficeId">DefaultOfficeId (required).</param>
            <param name="Regions">Regions.</param>
            <param name="Offices">Offices.</param>
            <param name="ESignPermissionProfileId">ESignPermissionProfileId (required).</param>
            <param name="RedirectUrl">RedirectUrl.</param>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.FirstName">
            <summary>
            Gets or Sets FirstName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.LastName">
            <summary>
            Gets or Sets LastName
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.DefaultOfficeId">
            <summary>
            Gets or Sets DefaultOfficeId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.Regions">
            <summary>
            Gets or Sets Regions
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.Offices">
            <summary>
            Gets or Sets Offices
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.ESignPermissionProfileId">
            <summary>
            Gets or Sets ESignPermissionProfileId
            </summary>
        </member>
        <member name="P:DocuSign.Rooms.Model.UserToInvite.RedirectUrl">
            <summary>
            Gets or Sets RedirectUrl
            </summary>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserToInvite.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserToInvite.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserToInvite.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserToInvite.Equals(DocuSign.Rooms.Model.UserToInvite)">
            <summary>
            Returns true if UserToInvite instances are equal
            </summary>
            <param name="other">Instance of UserToInvite to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:DocuSign.Rooms.Model.UserToInvite.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
    </members>
</doc>
